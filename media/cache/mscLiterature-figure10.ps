%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: media/cache/mscLiterature-figure10.dvi
%%CreationDate: Wed Aug 25 10:31:05 2021
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 485 258
%%DocumentFonts: LMSans10-Regular LMMathSymbols10-Regular
%%+ LMRoman10-Regular LMMathItalic10-Regular
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o media/cache/mscLiterature-figure10.ps
%+ media/cache/mscLiterature-figure10.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2021.08.25:1230
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathItalic10-Regular
%!PS-AdobeFont-1.0: LMMathItalic10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathItalic10-Regular known{/LMMathItalic10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic10-Regular)readonly def
/FamilyName(LMMathItalic10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathItalic10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B30E8028C685C8FFFC2
3C0E2BAF712D9A4BE80B6E38C9F5A449DD2DCD493C0A130001F01DB02EE2BE50
8CF3C1EE0898661980578B4396FB3179F301761100231D260FCA63E74EDCCEC8
08E4BD0AB6545195F32F881C99FE3877DF3BC94657DAE2BD20767AE9DA7D582A
DF256F4A52C57F9D228B3E1CC5DC93FDDE8E791DB1E6FA18E0B9B2423868792A
2BC90B78D9F9640524C758D0FEFB713A9A0D66350CD78C8FC945A63D8C07C8FF
5D66E1D7D963B7567F270FB876D2FF1E76F1FC1AD80246E413D337A718699FE7
EC080448FCCD4B5AD8453287D86BC727C140A6B2C1F62439396AEDC897D546C6
F8241122821F88FE9BA1342B044AE9A33CE496ABD5D7F76B1CBCD331A08C6DD4
37A78E15453AE3B1AB6664CFBD92B9982E6C0F5AAD267804425AEC523A184899
3A2D0259E64F914D353ED128EA5774EA6F87DEFDD1BCA35A413EA5D75E42E3B5
66539B7414AF09F23C1DAEFD913327B6CBEE7B5F6258CFB98B288A2A2019D344
E9335FA5D1887F0A3E6CD430AA65E3A59B396F035C7E84875F5A5E374875FE5F
2B49567A6E8C851A51D8BA4F6AF388BAFFF88D02B166F37F0CE1D4D4201AE26E
047084E2ED3E3662B60089E355AEFEB3964748C5F836C437C042B64BE3AF79DE
75AC4E7255CEC0F20E6D9400D29BC8D9BC2FF1E08D8E020F33BDEA08A38A5E90
CDD238866C66BFEF1B3B61F2564CCDD80BD048586674B94291DB7268CF59686E
D95927FBF8CD3224572B687E01791F40D51A230B9F12EFD86A7F90A0978CF220
FA314AB43197FE6E7C4F22C4BF4C4DF7ACC7EFE7C6B152984BE0FFDD1714ABB9
CE834B59B859F89231021E34E2BEF6C78D5697E25CB5D72D2A5F8093158818EC
60233DE494228ED13DC8AB6685A5332341BC02AB2064AA00FBE26BFD27263C04
461327FBAA2D88B6D1477815F4188980ECF40CD3AD1E29DFA34769ABC993DE8A
AF8A0E27487EA582D55F797FDCB0FA186897F60D3490DD021E62BE3CAECAB7F3
FB4B1834530FD7C9FC36DFFF162B0D86B702500421695D1CAF85E4F3CEEE61BD
164E72F9F8488CEC77941EE8A8C57048238D0238534D64E76CAD17DAD868909D
2EE97723CE00B905D58856A99BEAE260A8CF01A6F2D73F6A5AFE273A02C5DFAF
14A6E9660AA8253D564A36E960249D1968E9DEF97FF74420E1159DE70A8E253D
C0FAA6FA677F1EDFFB70E37A26C6C3F2E101693C94612B65BF89F37AA3C10A40
EE8E49915F1A1B95D2193D8003DECEF9D76FDAA33B1AA9CEDCB21C2A3B05747F
B3ABDBD904B66EEC60CED2867442F5FE445587EB8BAC342210D5B0ED5550C4B5
4109A1B5D3696111A1457BE695A3CF1A5C16878D44BE38107E327EC40A072AD9
69B0353ACDECB582C109585F829065A21C707F25D576445C5771F654CF59FB94
240B438B67BF12069C0B0ABC6B5C2A2B08E8F5AE4C1E03704152983C10645DA7
2EF317F76DDDFAC03500AB7F85FE52299A64B34FB16BADD9D9F89320344AB2A9
F41AD85B19A4E50623E0BA6F61881E260C9EDFEC75E9F761F060F4500AD611BC
0DDC1B45C42F5982E78CCADCFD0966EE0A5930150D0AB4682B25D8FBBB10124F
FCE47CEDD9E779009AABA3309476E9AC9103B3B7F0FF5CF8D998C09FF8CD54B3
DB005C33AD91036672A632BF4EFBB4B8DD91CB69558534CCE31AE7E157D0B060
8779FFB286E9FEE1167C08592B4F479603FEBEAC082768A2A4320E5DC0F683DC
193A5FBC09DC5CEDB46D58E65C4493FA371089524BC963ABC02D4DB94BD17EF2
E69489EF60C9F5591563B1D34923A19B1743CEE654C9C39665AADA2FE23C435A
D8B5690C5BCA6D17B9E51F0E0BF508297839ABC8698AE746147056CCF2A0DCD7
035A43FCF36675C55BB71CE21A3E9C1D1AB20BD6C6CAA328BF57F4FD4EBF08C3
43D3AA6D7065140BF2998E6C3186826954FF0FFF9D966F224AA72C22207BCA22
6752B21D2198EECCB618A61188C03BAC8D65BB79B73DF988E4DF9B937B47C02D
A468E1B1405446D985B9E75A108B79303D8478CA9A030ADD671B749B3E72662E
3939C506ED2674D1DF235DE89D464EF44F2C9297ECBF2840EC61A09A81DF1C9D
7573936FFF6B941FAB4F6178F466CDC2B3DE7592C227E734FF96C3803D763554
F33040448AE0AC9B950A08E0EDBD46F33CCF225BBEFE6DC1CE02348E0450633D
8863E481FF60EE7068C1929141B59124311A8B563BE7E71C9285A58BD69649EF
7521D2F58E64B4D10CC17252238A9DFEFAC09D5959250E09A072297010037B3E
37661EAE0DD3671DA0C6851136310F63DC13C768F93669FDA94D4E3B4D2D91FD
3D3D2E6E22D9AA5090761F949B3C948B65566E5AF6C6C27663CC0FCEC18D28AE
077A586641275BB311A756A666180EF86C4C1780CEBEDC47A61EDE1D7B2DDD8D
B24AFC21FE5342273E6735A3A7B6949045915FDD7AD10E82E8F5A4101A5CF526
210B95DC0FF8B5CA1F659C5CF5993A91A0A2C4A917163FF25BC84D5F9876D7E1
6E74158F1F936B853E2E92DE032069084DC56D37B48801E4559A9C3DD8F64D5E
2C080AC0C83A9C3955B2E2DCBFFBD36DE55BFA4F3827A5C044F7221708498602
1EFF4B6D2E9917CF9EC49910B63811F8DADB70482A0976AA7E1B7C425D45EEDB
5C32FE57F853332C2DB10AA0F9CAE9F5FEC80CC660594AEEAA57C74E182EDBDE
11F989FE4CDE92399254547D9C5D7C9EF3569BC7D0A46FFC863C6484BEE50FB8
141DC29F3E388E7719E32C9DE61238438FB32D30582D7621644C3B70F2C54C1A
BE7AD98C4B495ABC3DA36EB1826181E858EF0D62EF01249BF793C450B654149D
353372944B161D70A8C89D4946B4670BCFA631DD11CAD34AF21223C75926A19D
31BF25BACEEB12EAC832D9B45C46AA347E78FA5B4078A3221525B0D450A0E42D
C514B6C73C52CFB7FB830E655870E979D5B013F3D522E48D1AF6D779B5BDA422
CC2B6A08D201178D9021D7C0F541AEBFE271F421DEB2BC1D7A12644F3933824E
8798ACDBA82428AAC8F175ABE0C72129FA901CE1650E094A8E35DD66DBE3AC2E
EABED9CE2526D8377D8ABFBB1F3A0747E671E346B8A2817B6CB5592A7B51A909
E1450D2E44F153B46CA4793163A770EE62FE8FF33E6E7B3436E7FB43E28BC355
225B6EA713A9584BE4A7259B2FBC52122E79D7B6106E946873B4B57A6A849B21
189C667E88197E4971AF9F2E80825917920C6616F4DA70C8C1D94C42D4C3963E
5918EA288ADAC69493A1BB3B1E1B6F3C48B4E84E76C1361AFF3CE3B3C2A7B814
E328A028598BCE5D105B15478D552A27B5E78DF9706BE5DC271FA75813E64CF5
8AF651D891584FD0C042C847C465F8CF6F5D9239B808E3E956E9D624E5728E07
34C1F293F1FE3C649AAB0A3AE7458E5A9CF87B7D04706E7E3BD20C96732BB71B
E2642FD643F31A6831C755E65B224D3C0CC23F2B697BEB0A7F075816D9DA7E8B
1FADE04D7B5DDF0C26CC8A0F9B17273FA5360ED751A902B67DD4B87DB6393971
6F5DA35C086744F1DDF4E71EACC4E343FFF087A800731C3D3BFD6D198201A2EB
7A980AA1038C39244A1F0CD157AAE30376A9245DED8907418FBA827B3B545893
098509C80AAE09778BDA8159CD93B3E59A35EDAAA4D5010B4F99C0DDA0982518
80831A48BF830A2F533CEA0AE9366B0F8626A26D6CE10867A00F53EE1E02DF7F
B2E22B801E848EB48E6EC49E809AE013103132125DB5514F9B66EA422555B1BC
BEAA67995EB9B721D1910E5E6AC196AB8072A127B16D297B86E8F80AA6A26B00
7896BB0A0C36AA60C17B32AD1DB6055BB5BFF6E7B180A2EA7B09AB8AFA23C7E2
FDA32A7B327A96C08B834484CC3578C70DE59A74644F166183969AB380A0D502
4A47E12D87FB44389776CEB992BD081EE25997239E56B44E447A0183C14DA8BC
911A9D23D79A0423B24982230654
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C62F76763DC91BA0FF25FEB234CEA0AEB0C4C6
82AF76230200DED6B3BC3B06E67E2EE0AA22D6B75361C9DE43CF44166F4765ED
D46D0649838B2A19B85E5EBF40C14681BAD24696FE00F0148664D6B4C602C042
FE0934D208422226264A1EBCD2FD3499849375721D342810C74064EF022C109F
2198068476B55C1042EB05AD5B8F4207F0F07ADFE2C2AAF32AA17671FED1E509
36B0CE6E364B62411E6DF77D4A48FE74C8B42C6EA815E150DE0739F413482171
527DDBE148DA73249AA90013DB77AC6F4922CC21BD9B4C06B895687A3F0DEA8B
7F4F8013345CDBA402E3A77D3E67E54011D9DCF8C70A6E4AF6B269BAE0CE652F
6CB26B9C95E60D2DC40052D3478EC279E6FF83DA3CBEE1FF2514948AC8E0BF48
4B0A702514C15512D8901E78AA828FB9ABAC42443EFEBDA80787A0F0ACFB48E8
0CD00A3DD8E93C9C279080FFAD1B25BC739E71CD58675E2578A9CD6E1CECC57F
EACEC6454D27E80EB0CB1E0C1CAB3C9C29062266F3163CC283F2D87101916B4F
4F4626A30647A49AABC499A97CFF90F3A9BC6D36EAE84C047D636122100FCFB4
BA3ED1AA95C54462A53AB284FAE1FEB947C50CE8BE18F24922B065CF25D94167
4FCE08A60064CB42F4B5DD688729F3F1A6FD1B158F1DEEFC669CE697CA332B58
B295832B4E6D362389632EBED7ACE79296A1765F02944B8E689BF7859B266915
E85CD024EE4EB2E521BC819EBA8F6B92F92B4398FA2E1D6CE1F398ACBABDB5DE
EFFFF4DE632195A2E0802FC871CA864B3ADB40C28AACA1C46D2E502EEA90204B
4D372CA1B7455D51E1ED8E082C5CB25133DB39F894C421CC19AB49821975DA03
DEDBC7B55C2A9EF695080C2C3A5459F52DF5237EE2205F822BE8A40101CCC339
F93EB8D51E3F38396C6829C8DDF0CAC41AAA4B5A7C88DF92D2AD01D65651EAF0
DE0704A975D2C77A9E4B76689F6FC544FDD4A65861C14B6808C55795337D8A45
6AF592730E8722A632641B259920C9F30363291678A7D920F128855CDD17E51B
DD71523155BB827311033820B0380F65B3AA4F3E8379E5A3EBCB36C819ADC812
9883E984EC2061DFB90761669C49ABC0D748DFC2F2D05E4FCA2D8F85E7BA1AA7
08F294CE1BC740EC90A0764E9027D61CE5938B121E2F664D35522EADAC9FFE11
31374EB2AADDB2337DB86F1FDA02B22AF2A316937A37662E5A9F62E131E8C2D1
33CF3B99FB57A66912291DAA0915E7D640105F3FE3343E16C08B047148E29DC5
E5EFF4711229E2CC5C8027328A6C3A12420D73235157B42582FB3C27E56F4DAA
40A2031B372029D198F695F833CF2CFDCA9AFC0FBE521E7C994D1D49ECEC8ACD
83D9DC1A32DA0DBA23011CBF25EBE3882B835172084EDA0B96B3F32228F7CC4F
F93EEE934F661B73BFC5BB9BA339A01EE6F9CB8DD1549B730374F5251C04E601
C27E854D53B85802D973D05F42D3E371304227EC703D42B4C1064DDB3B410A8D
02E2EB73D4E7D573A06A88806F4661B0AFE61AAB44ED4B4F457EFD4B9B0BBED3
4041206F8F2B31E96797F77AEB83A2927423DDC0DE4A91156AA421C0435C5925
0E09A0722970B560097CA8B45C55E1BB259EC2855938CB532FC260FEF5CF3FE0
5F4F6B1A6E1F8FFCFD6FE8447932BEB150E3A400CF8B83ECE8566C9D72DF8DD1
63A3CA1D6A8C6C902E1F966AF6EAA42AE80EA2C146A040FB4729A47526A64474
3B53CF089DBE0688490B3A656582CBC1D90D9931DFAAFEF53C73913D7F009E62
111080520DCB21D96FCA0AE67C00396617B3C75F93CD8D9565305EF1001F84DE
922D6D2C9B900D8DED34B8A702E96ECDCF28BAE94FE49CACB8FDE4C7AC466E89
8A32F8B178FEFBECB1DC8F5EFA55F4BE79651FE79FC065EC14246AE06156B8DF
F94C266C890E566ABB7A09A262E516D108DDEDD6D7DF34FA74F892A5A105C4D6
67B99B8E51118A29A53C6F2D72F7132FA8EF7281043D30DEFD2C68CB4E6F0E24
9386C6197D9DA2FDE6A9CEBCC633F3D38DBEA5BFEDCB9B0E9D7A0546E34F8BF6
33F656FE32F1FF45323265B5CE70ACBC2940E23F8C860EAD0EC4977851FF7A79
BF3DB3338A892839466E31F198E98BBE0DF9C812398C54824B719C8B575FD784
DA7688FA287F7069D4826C73D1DFEC96B8B48C55D6D0B9CDAD690F8976A677A0
409352766D80E77B1270019E0EF57F31E9F13B97143D84083720D9B5CEB6E030
877EB3C7D60A3791307A0719386E4581BF1493794B0660A2DE342E973DC1CF42
98C38E32B95D790323B4A5713E69521D8E8AA6339178B57C16A763CFC9BEEC27
6944BDEA255789EF581BBFD9589D9FB42768AF8CAFD1490D4A0B81934EC836C4
BBAEDBD7CD236E6D2E8F4A0A24C4BC96A1855C5259715B293A3D7E844764F84B
88D997BA5C7B7C1ADB45A65DC61852339A38D7BC9D8529FD28B5750193F9287E
10FE60D71DAA0ED015633CD86E44AA19EBABE37590BD79E91F1F373692B89D75
C0207CDCD62653E9F753AA892BD9A7AD14F509BA49C6320EFB4216301DC72605
79C7DDA09A0A30BEA55773FE4972A46026DD787FEEBC4A63D583CE7227EC1036
5966AF2C0748C257C16DE3AC1F8D85467B5146B72FD47EC0C3B56D03FF7FB6D3
5742A408FA77154EB77D6F5248169DE4E20578FA29D7DD7738DED4233A873C42
13DB20C4F36D456DAFB6C4040E640837330E3AAD079A9D6263C3A82CBC29FEDE
E39359C351BA8960636ADF062E9F6977975D6C2F36AFF88F9F4FFADCBF28E004
9FBF817D90AFB517178C9DFE59CE8B036E3B067B364E0F7CC02EFAEE34959A0F
D994D2DEDE8EBF3F64D095928AF81CFF4792BD162749C3142978CBDFA53DFCE3
48F63D44BB85BC31F795942D5D77E3AD79EB3B6CF717EF3CB13D89860528B572
8B7942163227EE715A2BE64A8217DCD523FE710FF61D766E9B334BDD7EA54C5B
D1D26C69EA7D6BEB2766F72027F15B498882338B830E75DFBBA48F652EF1C3AF
CB19D0A0AA9B58CE598FF30F1333ADCE3E7B71D76A21D2795DF38545036C32DC
F30ADE2FA190BAB9326EEF9FE6A563644E59B5BF520B3697189C18F52673F127
25F3351ADD2CCF348A72E807F1E2D7DB1B31BBB1B9E3ADBD7EAD8C3F5C837533
3B0328620BA0F8059823BD2AB80BC9DC78BD724DEDA79878F11DDCBD27F6AFE6
B8BD4E941D2FC154BEA826E96D9C220F3D88BBBFA3DD28BAFAEF400F21A35667
DC6205044B301CBD54F6F3BA326F6EAEF1B707BD8E2730C558421B06B2E037FB
2EE97F5290CC0000476C0235F3CD2DC38AD65723EBB35773DB0933927DC21081
E67E5DCF4E41F8D05BE0E19437423672A26B560AA588C1F1CDEAF6FE797B688A
A11FFB6F594D326D48E679190A0FAE0EB699C0A4260659E5AB473675F8DBD919
72A0A607EB12F341D99F7D9260E89443A3941E74A7B6EAEF6F0AAE5F86D707F5
F9B56BE11F681017F794ED172D0ED5BE436A39B11A9E852502C915E2823AEAE5
A0A66B4A7258A56C0318B909C39D99AC63324AE8A27B39552A1F26283F54A8AB
3085514B5F3926CD47F8CDCD1F32A21D6F733274CF2E7E02A96415BFFAAF96F7
7A39A1311917B63143F3A933E9270BCF2CF16CCCBF35E9A6DB08C3B7660CC929
CDF9447D83A0B0645F51309386AA2433B68A35EC971136AA5326A15F3A50FB8F
7AC6F30485DF8196AEC55BA8AEA0523C6D97192FD95A8E20A494F19232EFFA22
4E4CA1005281F055237BD7E8E86F1CD55938E4C906DC4685E758218CFA01940B
F809E25F64B6827E9F8867A18F92F1928B97F03B90FD5DDDF45C88DEB19A25AD
F96AA92AED7E26BBB3BBAD092B97ACABC52E9DB146BAA3A8A02B7C530BED308A
CD7A1E02A9F69CB191E2F8FCFF6FE23A3ABC8D6EE13771DC4508CC4D9788C0E3
CB5664C60D8E524A15FD6DA783448FEDC69939DA7ABB6B1C7AAA577848C5DA4B
9D780DB1CEC39DD554294996C46E69902090E3E51F1A1610F43C329EA8150E25
0037C2B71E075DFC0BDA01637CEEE4F2165405629408224D070207499DF2F43E
7D52E442EA0137EB062936004A2EABFEC7CCD31CF0A0B8E3654C810BE9472942
E287483E4CF87E1719621E73D1924CA503D4DB7E0750770213BF6188DC183302
136FF6CC18ED1DEFF5DEA94F85AE991C1AFE483903A4919605795E6ECBAD7539
996A34BE0B0F5BFA99D987E84774F6B4620EF97FC19F9FE57277BE17AB3EC8F2
C89647853487B44A55809194F97602A69B85F86AEC6253DA395A55DED9117BC1
BA52E56D3F05CA0DFF5AB1BA1C0D6444AFF9AA7F713B72103AA5808BFE182270
3371FA7CA0471BA96CC4468705A2A79E72C1E086AD76C19784527E7D439BC235
40E04303FB878D974AD04A770977FBB2C31C4F8FF8BB1D4BEB275C26835080FD
2AC78DE88BF65298A8EB4181F16511A060C09502E182EAB0E7D0D01ABC1E310F
7D2A2BC7ADC582C8329607108080263EB92C9DF6DAEBA5C2E6AA15CEE7DADF06
9B160E9D17FEB980F5F2FADE062DBB99218132F886170E2417CD39A79265C7EE
A862D9DF30C19D6E10A3F76B65763C33A249C23C8616B866CC56DBD42E404EF3
2B6BC5FC5C0A20F53DE7A8FA45ECD89CC211E9FE518742FBB3645667801FD148
9387E9A74C5A4E691FFFD2192CA8295936A18B42F96BE5854A7003C2879222FE
151DAA84C3F9FB951E4C6A881D35642453CD3491F88BAA4051D825D512C6F5B2
30868A44331AC21B97729909E15CB4DF774A63C6E75A7426A7632B8B4797AFF0
9355FD81A22DE96084D7181957F70B74CB84912E45546826408B75445A0099EA
06E67ACA22B1E387F336F6BEC81B388C76A39DD9F14D883A4CA48B1597EF3E34
041406A09B809F42A650A1988615D962C44E045BD8CDEA820A1B4F8175E5232D
6644A2260837F172756F06AD2A7C2B68555C388368F9DBA8FBE0517637534878
9BE208206F329E2AAB888219F6137A5EAD65B433124BA3A8841974A5B9038837
4D2E7BBDBA729271D1230281E2EE9B02567B3DBB57536F1C9C507DFBBDC3D963
E6BD12163675308DD742A0BD67804B5803FB9DCCC6342F21C85484169B41FE6C
067B4D3E4FCE173420B130353EAC9DCA944F106B9A315700669D9D8A3D985F44
DE6070E8E4AF674A0E3EED6CAC66FFFA0F1795731A69860E393C9CBBCE94A9DC
31DACC0163FCEAC4FA882EB97C873969EFA04D3E2954B227A0C18DA8A43ADB75
93E98E5E0C7519713B0C80E457FC565E44F8F0808F26A82E25AD6B4176B3BE59
B388A5CC380114DB40B124C844BFFA3CA29E638C11C5C705E96349386689386B
FABA5CFC0CE6369C638E695DD96C39A8267B043DD1A309A1F1C31BF683F9E339
47C0DED430391216C1F404E0895BD79589861F3B824FAD100154EA2E91D9940D
8CA147C1035893E2D1C6AD444BFC845E5023D34DA177B1DD3787D64255F26B3D
26D7F5B403988F18537E639DCE4F416409386A5B5F2C28A996B9464E6C2384F7
43BE6B1AA2EAA0E4AB9AB75715DD511E9F68D1748639DAD902F9BFE6EE602DCB
F09A3BCBD4D0AECC22E480CD066D10196C05A0EFD97EE57F50C5A159C8DDD09A
780E3211EFB72BC5B2CF545D57AB4B9C42A3291D658F7D31635BC15A0D56BA69
1658ACE98DBDEFE742DC61AB7CE2363FF6B65CB9752CE148C3C8CBC46584E5C8
2D606AB2BCD7AB93A8795AA46773CFDEA4037277D397EF45C542582B6F56F890
EC5EE8DD9D075383D984609515FA33D5F39264ED660823484D9F0480126A31E5
9780146F398B9FE829119A4ACEED02EBA65E3D0C306F8C7E14B664BF15DD89A0
C4DE78B5DDAFA9B3A1AA0AB528C1E3B8F0E980DE9F1815007CEA51619D84375B
7777A5317919026F198BDDB71847B77FF4BA89C15EF8B7DA515495DE6B1C067C
7F67FD1FF0E9B41FA08A40882D6DB06D67AE9DB3C7A1C3BDDF94CC4DB60700C2
2ECDF2271082FA20E2E68556AA79171ECAE7B9E1E542F6019687DD5FBB8B7C18
E2A7B55A71827007D54E603D88211E9B61E953F33CBC743DC0034904248227A6
5C597DD3DFFDA4ADE57429E440123D5273FD55A6DAF28122ECCBC84E06D72504
493CDFB35659392681091E8BA271A63DAD594F74301C8435A64C9A456DD6265D
8D0D15BFFD4120BF229D1F161BDA867582B43AF9F5C8CAA12D9F6EE5ADA4A486
3328670D822220DF701049E106F04530708DD34F92101A5A71706506E71315B2
7AA869B9E2AEF564F092AC7E8FE40D0D97E9BBA0D4FCF0E58E58CEABC579AB7B
3FB4629E31924D4E1DFABB9886B86F4413114BB2B062A5D704C65455EFFD4BEA
1607F0B0B5FEE06533568DCF1663B1D34923A19B1743CEE654C9C39665AADA2F
E23E339DE411FC4B41FA37916D6925540323301C441366900B1502018D0F42D2
C05275C5EE7AC03CDA298908B2B6AB5B89AECC81F2666400D69E132AA9FA4408
FFEF271C1F48785BA79FCB77621175289491E7A1654F2D89AB237C295820DD78
AA19FF23F80B188F9969CE4D13F0E26341334921069ED4EB4830E5E1BE4EE719
5B4650686C1036D078225DEF89BFE7329F2B420491CAF1794C18EB35FDD30192
9BE09F85FBEE99D21B512779E121066B478BA5E85C6B452AFF11328F2850865F
3F667F1F0B59E3C85DB4FD78D89E2167E977EB8C0475E6BF7B0A646880AFFAC6
00F30F1DD52DC3204F710A77E590211592D6ED63B34E5109E56307D4F90DABF8
F42769D2241F9275C3B91466ED904CD82CC3FA28DA344B632A658418710D374C
9D2ACC48BC4377CC1BC095304CD782CFA3FC10643DCA87633DB2203ED9BF9F14
DA81F778D8802781AD3E545681ADB0F8AE1F2AF3BC364351E1FDB12AB959E9C9
45A7AC260659E5AB473675F8DBD91972A0A607EB12F342848DF19910B28EF6F1
D077D41491DC8978EFCE821DAA18EF91DCF28E58E376E2CF1810A7EDD21D89F3
3FF7E155850CE512998D42FA38107DB1C1CB3292E6AC20CAF40D043D8A001880
D27C0F7D73029F171028FDDF8B550E38438FA1C2EB6BBE1AD828DCA8EE703B1B
B9F607E523F6923162B9C583897864E59CE6F46F213B0EA52186A96D783BA4C7
C042E823D2F3B752D775F22F2368B6714EF64209274CE1CD02D148724B2561AB
1E54A672AC2EF7F6B7FBCEFAFF2D8B6BF15794255E56D0515522C449DCB5A41B
A9FE140A414756618D7F00976F9C9235A7D55712C45CA96A594D27DA3C1237C6
1DE1A5F5B26FC896697F185A123C1A8C4F2954D56B8F24B99DD5F1B638172E6A
92AC544402C80DC7D665E1DB96647C9654D20BC7BAA224CE4388D715C1F56885
B36AB435E9C8813CB052EC53F6A86FE386BF347F063DFFA83624D77474D8C7ED
C660F460F7BFF771183B302FF55667390AF2E314BC8E0EFB7054DEC873473E09
F9302D1232938E68FC8EA33DAC1EAE76C6AD105D966EF357424973E4CB70CAFF
612572834B59160186297873833682AC8605C4F1CFF61783609E671746D8B7A5
F0E76AF213582E46962647F86CEE02AC59EE727ABAE056847D34333235890AB5
EC44C53F5909C167050FC94531DBF480716F1FE7FDB6FDFEF441259FE7E45304
C3A59D0BE4AA66C14DCED3C6423C5CF3519A29C368594B7B90E07CC72DC667B7
655B5AF313C62451353DCA611EAE1563E3ED4C20245774128E2C348C03CB5DAC
97AB16CFFA3F66FAFBD0B269C85A2743EA914D7A59F287E83C08AD158AE3AC06
36BFC3614812566AA34C25C501281A34BBC6A4F3702C5279D4C414D7511069F0
D16C39A8267B043DD1A309A1F1C31BF683F9E33944B895AD1D8017BA9EFE0958
75C132BA926E34A8F8C31B20CC69F0FD12D2A1FA3458D37F8CD2E851947683E0
50B29CF0DD777666B14EB7C80CEE58DB653AF6DEBC59D7E0EF71B3F412AD4EC3
D83D0BF1564C00C405693F28336981584056D02CC030BE48814FFA0AA41F08AE
0D5B35A4E8D520CD0E02D3BD8695B3C1D4229FD5F78A6F1813577BA50BC18B93
23EE4C860F0706B63446BBB054A5EE5B9246C749095EFA75F3205EB2BA1A7955
4E8CF3E5896CFBED79EEDD6FD3B6613D855D5E17D6020D27DC30D9475AA1E948
64DF4D44198440761FB582ECE3726EEBBCA4893131733D7FFFE2E60835E8E570
EE206034708F5535336614ADF12E3A6BA5E1EEB4BDE83BE8C804239B215593CE
7D1CA1F45B06D9C952F6E026953949028A6B799CEC3FB4E3D4A824349A563D62
8BC5B81D682AB64F098E94709CAE17E12419D4535D0FEE85D7AA225FD64BFAE1
74CD8B62AE6FE12DD1DC46B921D8BAF03715FC56EA60C5A9E303A6B9AE1AE673
AEFBAB29855FB3D8891C188F5E1F7CF09A046115D45493F7A67587727B64D2D5
6419698C0CD75EDC4A13F5C35996BC712723DFF34F95271308C632D409DADF45
FD193E6EF5F8491B730E6F350D36007D19F73EEE205A47785EF3C453E6F77A08
AE9F93F18B889765C4A31A899598D22EA55DE76735D3C2DABB3157EABB57F4F7
71336D985C0C360B2F5A5877FD00B5CDCB1E57276D48633DCDEB7F9D21B332CE
4982A6E06F5DAB79A60717C38B23D7CA54BD43619A46D5FEFDD4D176B642B7C6
49F8CCDB28BD192CAF5EACC12D2733C2962C09AD9F95C4F6ADC601C09CDCC026
2C6E8C4C3F2D14A958EB919C11032728BF872D2B0E155A92A4F88A813216392D
8F9048A5B1E2FCB48972E4007A136572E6C3B7762889B76EED40845D9AFB54CA
A90EB44E4C1819F1DAA98A52B76123C04C3FB31E3D25BBBF397F83C24613666B
F4088A5E41311E9B82067883EDC8BCDDDFCB6A87C53FFB3F440CF2A3D16F24E2
DCAB6D90A41960A9F50255FC395440EE3AC0C9F6154C4A285AE94555E5B57F59
BF206737D1B3E9909285BBE768B3630876A6AED1DBFDB74A53A95C411178CD0D
EBA567BAC044B644EA7EFCB02B512A970E75328A677A7DCEF89419CD87EF2E5B
D3598EC528909B24430C00CEFE0190206DD509FB645CCFCEE8A7AE31D22483C5
3080C6ECEB0EF779707A651E8B0FB5B886111E4913F65D28D29FD6ED61D50887
0C6C620861E751C779512C404ED48FF12A46140022F426132783984FBAD6600F
B6C2EF0B131968305D75F656CAF198F1073B7BFE06EA127BA3B1EDF47BDC4E0B
C01C7FEB8A6BF182467ACFE3B05FE61A64BF5E80898ED742F73E9BD52BF79712
C5CCFD007DB1C1B658A5843F28E77309B1D0E6185370CF1261BD2325B000A5F7
DD85544C9A64BAE28239DA8BEB1A6A96E95B783B1A806484230B776E9BA0BF1E
D2545A0446FABDF17C6DEE966E51C66694B87FE408D52ABC831EDE8F5F1DDDA3
19C9560268148135A883BF18DFB558ED898A4B67731DC05848E31E91520E8F90
4FF4D138518DD564140AAB4C97840C3D38D4586DC64865CB52F7D44777057F8C
57C69453071CAC34C9E9D272BED502E97A66EB8A13012C6B89A4C8211BC9A7E3
53E233A79C4895DFF884D14BFED989FEC74E0432141A22A82D5D319CFD5357DD
A5167E3C0C1D945F10C183245F1B733C17D3B854D53BA686CF408A11AAADFE8D
86B613F9E6BD8B447E504044014B09C17AF11C0EE7473C6E028D62D173D45A6D
17B4A1D1D91611511C78CC5E8260B0E4778AA8712B2E1D67E60D997AF771F4A1
CBC2DA26BCF2A5DF594688D1714610671D39228B36A24AF084E7544D8A761549
42ACCED03A7785D88E3B6C33FDA0C0AC392A2F772A9E3D9EC530266427264B8E
FDA9134F4525B5D3F83B68A424A03533C7915059A895B9F931EDC1785CD8DDFE
D8FA29E964EAF52E5F410E854CFBF08142121CE24B1E126F46E6B3EE29DA7846
1BB8B5E850618E1D8A6B7518A96876019ACAC528744FC9A89E5D74F5DBA665F8
85113CD2E239B65D0E985B783590ACCB2C5EE09FF45F2D070A7FF5391AA9BB20
01FF8770421D5F04BA9741C4DF40D44C0C1726E6D6DAA26CD5D56603BFDF7E6C
29B69E80D205669E929607730606CFA77366D2ECD982ED8D24ADD7FF8D9918C3
39A8E8B41383665A22F3638C6FDF3A9C1A993DAC3946217C12D9286E6E2F4D10
14A3A628D302697B4125B5FFD2CB27C6DDBA4633EBFFFB1DB6A72890DA790C26
91A7456F566A8359795D6A2000AE4AA5B339C187F52630B52309834F266D7027
9AC7AEF418EF47ACD1255068A21969742C55D97F1C1B1E4BA89C1547A41B7672
59CF565ADA5011FEA13A7F8EB7D4B10ADBA185A1AEFFF7E715CFB0FEE3C5642B
D78E509E38A3CE8A943EB455322A87C1634074EBEC25F67BBF28393DF8BF4306
AF12BA45A11E88E61F04E09FB9CBF7BD172958717963AFA5FCC1C753E473E21E
B8BE0B4D1BF8EEB93F1C143489363330FE17A7CAC73B25AA22B40FE954F32340
FC82E3A2ED3AD8E3DDD108A573F2D78331DCE23EE53F5EB857A86592A78771A5
BE413542F5091FC14B5541515438E1F36DBC13E11854A23AF95CFE09EE766B8E
2272B3FEECC7E148D5FDA02F3A6FFD57952A846747F55153715473FA5E181828
A4C12A71DAE2B306BFB8099660B2CDB5799972AB6ABCD46FD5E647C809A5BC94
F10C28976ADBB674BC51833FD726D168E25ECDFDA64CEF6CAC90369FF71A3EB1
6EFAC41D22D1BF4B1F385E73BAE98757D532FCD5AD3BC6C90DAFDF8EF8BBEDA2
E3BF98BE634FD17B2A2F4306AC9C0E2C687D1D9ACC8F020A45B8D17CB74BDAA4
BFF6DAB5380CBF6172F37E14DE2A56E4CEC34D583169C4918F791067417FDD31
36C24273DB8EA36A61BB73ADE94DFF249763950EC9D477EBF94B1B997B5F1221
071122721945DE6356BA976B0C0BF5A6E689945AD1D5EB23E4F322BFD82BE007
D82B25AEAD7489FC2A842A1398CD00188333431902E82B66A50044E31E441196
011D609B32C5AA4708AC8A56474AD29766BCBDC41758B4122E88E548D22E15A2
087B61FD6B52BF54629AA70CEC4B9A451A119943E2ECB4304977DFCADAC2B474
E1C4AE3F7E57DD7A49C196B9D8755ED0374059EAEAA592F499107FB92E22D070
71D76B34DBB968F006616C82DF89CFD601A78D58CF2BFBC4B1D57993B1112222
6756497B4207C6D3173ED4A0A7FB5A609F0CBC37583DFA0AF0A53861A009796C
15E07C79096EC5355C4A4BCA1FB7AC7E65D5A5D8C5FCFDB41707B035520A5B64
E984AE49B4054206AF4126A23FB9D6936078F7F925BCBB2A75EB16BCD26BD752
DE5BB21DC9C7FCBF815D34F41FB9B1973A7DD95352BF1532EB87DC7346FD25DA
5637630402E7895F3C8D5E18DB68271F9A0B3BBA37E6285F2F489300DD7B0A0F
8D3ECD1B056A35C37842C492DC0F51BCA42C273B2E43D80211136388CE2ADB1B
7390B31E21B6EE0EE9D75EA112DA1C60FD628B806D89E773919FF1DEDA481022
EA9EABD50EBA3FEE1B5E52CAB31F8E118A35588B794EF9FE03CDD26508432F9A
CEEC0C86CE85E9FE86D243B72B3E700F97E1451C4DA6A0946805D740A509FEAD
8D88BB59034060C90D2A1B932C5284AFF5AC01D0866C190439A0CD836EFF939F
B12FD026E09A805E75041F750B32E2AEDA32E97CB5A3F56B9C5CA6F07F605B15
7E7B53ABA05461DA40B675F081053377364DEE8430C201776EFF8C4D4B6B7A4D
7D18E8F9AA8DE19085CE0682B3BB7F5B0B954E7078DE3E31D8AE65F9EA55FFF7
B98B04EEDA1263577D0D75215866236E5FC6C284B501FD9653E80422F5B5B56F
6D2EDDC1A7C76EF77C6E76E4609FFA26F1D282EBC19257DBC8AFC1D266C3CD4D
3AE01FF8BD73148E885B22C95FA78B9E9B4E4483DD252CD6F051F55968F63A85
07C386FCB705BBF46AAE7CE338AF148150989F4B398FD87BC27EF47166DFB2C2
58B6D776026ADB2182BF36E33D367D772C362F558A7C97771630F22E8E5B900B
8591E0336E37BF4D4D9CEBC3315ED847FF61B999C85AAF3A2346EA93FE7B0441
4B71D626BE66E6007BEC5BA79B849449A58453935004FFFC8F5B1F8BF35D9358
45C6C60B016DF15669B243300FEC7FD79A165D00E72B2A64F2F989A6D7AD7C87
5D0E0E051ACBDA07278B838CFCA83A445FA0805AE960D06C87661AE6FC68A96E
FD1C4BC76E61923EB04DB1DFA426E752C197FAD614EA478C1605A709DB9A94BC
08D61C1A6E98311D9DEACC88689C8934EDCA599ACC5C1EA7B60FB79F8113D9E1
EB35E6FE57C59ED52DF91DF9A97F17108D4EA3AADF354F8729EFCBD7E8A707C4
DC64731E964C0A5126645114F4E76C57B6AA7F5B3BF9B315C9C46AA3B83C633E
4734DD6534B98100C8F4D680C94DC3C4DBE573678A57F233745F3100E650C895
39B2AF2E61A62B64A00691C60D994923B8EA6D147D264E48E69939FDF48DF49C
BE4C7BFE3DF2BAD0740A8A4986EEFBCD407D7FE3FA2545677E76418C7182673C
9952DAEA93C241B03791FCCC1431DFDB6219C9B1F9D62740A6C1E4ACA130DD76
A67920DBB796D6C0C86D9C66ED01B85534A1E39BD5C20DE216B3337F7AE95EA2
F774F5881E3AF035A96CD83831472E387F874E7DACEACF1625BDF902DBC4062B
E896D00A355A1F8D95AC8B3F4A263F48263C27AF5E0D027B46F86C3BB3CEDD19
4A97EABB75E62FBF30074B701B39665F4BF4139BC77418D617316E0556037832
78C6ECB538B1BF021EB86EE3E5417D1B42DD280C1FF9A88656A37EC8F5AC9310
441AFA10C69AD5034FC9856112429267999EA35488214996954AE3C94BD04AC8
54BFBB3D873D26672DD8BA3896C6E4677E7B9C335167EF7528F38861F2C51F5C
F2E67F4A0FB2D029B166D01B44818AF5389329FE1DB14257D4FCE87B674B174D
C6CF1ED0FA43374E288DC93DA25618CB197A7DF573B91E5481522C7E5449ED04
9CDF2B26F9AD07EFF1919E9BA90194E24A69649F0DFD0046D00D6C0329D96C03
7786FDA53FCACCB9944666479515F7BEB0282797BEC19164512C80D1C6E8822B
8F54C5E48429768DC8ABE50C7EB3E593318BDB7669CD8740019C00E7D4FCEF38
2799F62A9A8FF8262E8DE16E9245C61CF4AC5E28330B2FEA765B68E59E5DA2FE
5DF61D3D56C1B76A3F4D15533971E855DE727A53B5EFC3A96E559D73518CDADC
FF8C54171E3379E1A86B0079EE25B86A0C5C459DCCB199E4E4DA535522CD9B9E
BDE34A75C83AF12497353AA9BB78993FA94BB7CAC40F7628FB106D44FEBCC292
985CE265F1145D3B1428B90D09A2EBC928A7F45C2A124DFFC8BB0B9B743486E0
A343D68682DDD7E10A9FB460C868CC03FAE8A0C82756B94420EADF6C5BD8BA61
BFC735A6BAF8FAD751BF26B2493DFEE44FAC4B0288339752B62186878ABAD0E2
0B2DC4557602FE6F058A6045910A6C7F2029FE2439769D67DEBDC8AD8C861E90
E5322CE77172F5552D8020421EDE0D7F672F7547E91060A481227B5173497398
D5059866ACDA6D7CEAC92998DCCF249ADC9FCBBD8F6DA5C9DCF1E682A24EE12B
834A6D01EC1D47C56D91469EA758F72040FB71779C25E2709855D7C3853B6818
DD0CDAAAD67F1C43F8454EA7BABEA8C3C568D703C8994A078ABD9F42C5727A1D
DD62734BC08597D25150B173C7EA7ED2705E70F62B7A1CFAFDEFA9CDD8BABF64
5BE24281BDC1FD61013AB7602079B3C763CEF26053F87D1216539DCB188A5344
55CF1DDF844B80FD96B709E32B2CA8E867D68BA9DE568A359429E8EF0DE1652C
CC52DF4A9BCEB4DE7DF3FB85FBA15A1D1070FEA87FDC29178F405B52C4D828BC
4629665F1C31F622A6C374798787EF2A58C54D8AB7580EE3ED58AEB83B72CB90
2DFDAF4519A585B0D50E05208B6D2C68F8CAE9E03728954E1FB5FC03C43BE397
E8115F3A0C322EFE02904D82B305810F45687480ABE94FC10E58E85D3F17430C
320B0E3DB01236E42B64F1DE8F7B8246C840F68A08DFEB68B3F6DD0F4BACFE7C
DA4FFE64DCF7591F16BFC51EA0DB9E8783AAB17B920AAB6FEC1B5DCED2A63550
6B1FA069853FD74FC736141F03DA35D68D91E93E80203A62ADA5F52B9CC3D5CC
60F3F1A0E8B2BC9AFD5067315E4118D72A79D1239DD8F4C884C4FCFF3AE39EBA
1AF456752CA350877F492A44B7F43E4219879931BEA2B95C7510EA3198FB4C95
B19DFAC99E611405A28A8E35244CCC8904BD6C4EE132B6BDE1A2038CCC141F0E
9803BBF7BBDAAEF0CDF1DBD2166C4A311A0C52ED00D2305C70A416567F5EEFC1
9867FC2D028D1969F2D9369CAD8E757BA5312E5195AE5A15AC46157BE30A845E
BEBB3BA89C638A1DE7017B539BEACD5CCB89BA3C73F2196C7834B1A544B12F93
7233AB1879BE9047DA8EF83926C442562A6E5212A2A2F76DCFF12F4EC5F788E4
6EFB2EBF78FF44364DAE6371A0970CB8F6C133C983A7ECD803D12B728D604E22
76DA7B81839FC5862ABBC985191135F0156722F0BF1DFACDE240AE9D879E84D3
ED2E8B205541195129A01DF4507E0BFF209F6A6966DE25D75B644AE2C16B4637
27A8AE10C4635DED49C5513696E3AD894BAE642F2553ED0EEB16F25B7D12748E
3893178EBCAE7F5E1C2AF64EDD2073883DC956BA383D0E1CAD73425414B54116
E310D38F7CE7F2D88D0B57DB8FDF8A6088AFEF5FD1D7F8363E5D0A84FCD27A51
A20AB170F8254061779E767E4CD18A44A4D917FFF1A4A85661E18ADF577A7AF3
5D41A333B6E5994294E0F438587C80FD855F1733F50F636A4C7426584812DDF0
30735BF1C5976FB22AEF42D03E33DA209123B6E2B2E644AAFC582CE3D91F40AC
5876B209A2D6857D7C0429A4B80BC0CE5C72512D196F8D1BC0B3FC12DA2D13F4
BF43D5D228464CC0864DFAAE0AE7F9B73802015614C10B63A39F0EF60D11E54B
7BA0471056B021C03FB2A2D2213D2BD379142BDBF2005786A34AC58D500D4272
8C7109ACCE4DF1E45ECDB7329F90BB064E90631978245ADC0EC001E8728B9458
990C7913426DEC6B5C057130D3F2F5DEFD97E415393E6B62F58F9DC86556254A
8A71F70C8A19D4F0C2DF98D94298EEBD3E93E848FDEB52363762FB9C796E854D
FEC5DBF19D4E977A07A42287A2DBD42A7E9C4E7150D0967F83E13EBBAB335885
41AEEC0DE8C53D5AD2D137F87752CA18F8147E983175FA450580110EA538337B
A0C994938ACFB5FE284C6059B3CF4542133E08486E01713D3B30B95F41BAA048
90239EC93C0C768F22837B57BC905B9A03FF4E214C11868573EF0809580742A1
C1CF1EE514D77041F132E00B13A76A105AB3EB6E4E14E6EF041492ADB51EC95D
F8E053F2DBB854C4BF36A61AFD09BF804BE0A72AAFE74199DA8D088056F1F132
392FC3BCF2FACDEFFEB144E451C6F8DD0ABAB19C9AD30E72269944B9CC67F7AF
33B63A06B6CF52D85F449B56C809AABB0354C2C995CEF3B811A6A753C1425308
9649CA3375BEF479A567BAB3764282DA78B388D27A6DEC10E6AF2C5576BDAB08
E5BFE1A7FCCE35DAA893E5CB7EAFFA604915C3734157442A161BD5A9818A95AF
BD19A49655AC7470BDEC95A9AB4C9D9BDD58FA74D12663E6DE20CECA61B06657
64B326446A071B6F2F362D222A5CEB4FEC7C1DD031BDDE4595495A365F434AF6
C6F50100F197836EE6DCF166E1670F2EE9B93192C92AB0367DA074BDB864FC37
CAB297762FB5C45277393235C450451C550EE09346609B14C8D1F96356661F43
F7ECB1CF1480CDFA74A4174EA6111333F510C73CD12533D3F6BFA0FB13B42929
29934B35E2E80EB89F4782D8F34A5DC8CEDCEDEDD9D79BC6E4677E7B9C335167
EF7528F38861F2C51F5CF395A4811AD7326AE12B896F411E09C15B0506D1F805
57CF83CF8A9FCFE2C2D547F1B703A410FDAE034C078C74E899B1D14DE9BB73AF
0AE80410C4FBC3A45FBE3BA447A01074773B6175E00D6236F113677A591DA699
2A609108F7AD04E9E3B9029AA4C97ABD7C2068666ADC003C5762A4D4D4E5B2BF
51908ACA6489430DC92FFFE690A0DD72739DDB5E76905BDA40053AC0682B3DA7
C3FE91CE83F9598EFE43E5DC858AAB70CC2F2DB52466AF31CDD0B381B56B4B65
7DE23503184AC5C0E91046F1B4E859D84ACE768909303FC1F7F0EC7DAE571D60
AC892E217669442AA04092D1CA9BE1635F769E2AC1459B0B3AC1DC117C17F73B
894B80512880391F89EC495EC8F05B5E06C7B9C9B5B66198ED9793D2F90CD7D7
9F27B15F50FD125C5CB091290554B076E8575ACBF0888FAAAF03996D966AE204
50BD9A0594D1CD925DDCC2EC217BECF37587795A45519352119833995EDA4207
BF15B4BECF94937CE559EDF126139431FA169175574A1DCFC08C659BC8DF77FB
4126E5E1FD98697E21F7AD3CF2FB3897152B7E9F7C4C36B0E8411AAB9A60C2FD
F1D3759ABCDA9DB4FFB4CF7050C1C0931207960C9BA56892999790016B0236D7
19FF67F34332845C2D36FFEF17DC8428791C900E377B78459F634B519D57A88C
79B55D644CAB29554F2E31FD6843FB2623FA30319B8C68F8F7DCF39E5FF7ECDA
E3884DD8E25C453F84FAC7710AD0368D542E8A629BBC3C6E2D85EB61B2246755
E05EBD8614AB2FA897E8227A0BD7526BC82EAEC2527ABE1BD6452AF6152EE973
DD1A12AEACDAD98781290F508081C26CC9090EF0D3BF8F83BC3E3DC359292552
C665F81B1E9130A495AEA05A67845C005021D5C2C802EA68A34BEC8C10EEC800
02C330C81431E79A54453646F4BAD3A827D42FFA01150302010956C520A7F73B
FF0828548474134736DC80EF55BB1D5A1D7873601B658CB3405C900AA958F922
C67A363426C03C53A0FF16C095AF85F92849EFE0780FF6379CEBDD27A9EF99E1
2AEA1DF4FEE70866721B078B8F755965895E0FD41B45FE7A83AA01B575B37DD1
D9B0D453E3A73EE7A34FEFA566FF3E3C777CEF27E631A9252EEA25BC4B0F86A0
34F5C5839ADC2778A20B98D3E011ADCB826685EDC4152693AF755E30B5C93C14
4FD17EAB19CB076C36396D4C7506C6481707473EB703C2B27847402CA4B68582
7479170AE4CDAD7798176EFC2CCAEB2DE003E4825A689E15BA0AC798277FCE91
F39076EE06BFD3C04FF933CE48AE61ED5C7CA66EFF5490E5C45D2E2FF381528A
E3E23D323472F5F6C52E4BF7B7687F1681D103D7DFC415017C2E5851A604187C
52F372CB9CFAF7DA3CAF003473DBA5C03B5BC20F578360B58E240BE1E941CF71
70EB90C3EBB3655EE2C25595487C7FF69DAB764D521EA0D98F68FCDB34504BCC
A0358D068EA5038FAC8EDC241DC3360844AD12B1FE69083297414ECD1FEF7353
2047FB1478F8554CC7245621B0B4E522B5C87DE1D975B08CF8EFAE3CEF3EF3AB
B864CC6E0E7854CB47132679FBABF1DF31D16F8FA295CF9CFAFF41E8E1BF7E9C
B02F2E46976B514E496BB4EC03B0248856814F1ACC4A7F7B5754BE7FCF01EF9F
F989CFCB3FC2D114FA43CE0B06A5B8FB130A3936C4504264C9DA84C491322656
9816BFC2FED797BF3FBF60B3E0A4BB6EC498648560D837FB67D3FBCA7A93A80A
32481524A8A8F96D5ACE6BB9D75F9EFF928D2EBA427A287953A4F46467D1E19C
06F9E6851A64BEC3F7869EE3181CE8AA1ADB7FF9696E5F3C75320B4A2FB4C322
929A703A21EE0BCF441E0C593449E31AA562B4741A6B88834D87621FE67532CA
6807D768CFFAB4CB966B5DD8436D1ABDC3EBF5DB1EDB29B450CB97033D8FDD00
E483763D6F1B6C38D44FD1C3AA3F46E30A2EE663C2CC64E2DA3631AB809AE302
494A7E49825D19519C5EB55715F8DAE292731C7375D3A32B38BBE71D4A8624F7
E5A2AC0BA9E61AEB6C096592551CCEDD11F7C39B765BB942E979AAA1DE3496DA
AD1C2D8CE52AF94EDF33E6CC70BC0E96636EAAB676E72268E354583C310CB92B
3ADD040C112D494116773DE95F3583A7D7DD69E01C7636A79E102F70889BE3FA
0347CBED4582740BDA38E755DDF36B38BC481B7EA2D35D335180E020692066C4
9523AB41242F1D916ED69D1B7FB6E9F7D418237EC1D81975029926E349F11512
89F0E62B89F49A28410C34B2DC68CB0F03583DC0C2243A6156F149D4012A4A85
C0DFB2B43B0DE7F4966E008C066BF6EB9885F52159F34F65E8FC94DCBC1CA521
E7D5EE19CE509DF12F7D1243257B02B8CAFF2AC2FB7868A7FC61E6AD28A4F84D
510A8181C171816540E61E5A2E2947957AA9A5029A3F8B72B95440914969A1F2
D001A5D7C9A8DD9088FA5AFF7A0BB1C59B638E677A4FC26F9D9A17F28132B96D
EED074627218388B1327B6AF6AECFA67902D0150EA260E3A59FBC65D5C5FFA73
F59AE22BC7A9DE94C8D7D03375BA696F00455E229C987A128FD3BAB5B11BEA6C
33C71D5AB5C9442D890016B28EFDA40A9D8C4322F12A81F10445162B998F6E73
B894068EE7AF652E54368F23695C40785AEF0A497E0783A0E07CFD7CC68ED49B
4DEE309EFABC77A601A6FBC78BC31D3376B05EC4B3E35D365D643AADF3F2FEE9
E418AE444C7433E5D617A93CDA0960657CC231C6F1D98278F2222837F2CDA274
EFF21A2BDD528FEF3E6AE7CD6EA69488673978553154D22FEF718ECDBFD7503A
0750027042AE2C7342DFC76AD0424D6077D5C415AEFEE988A756A598AD86F7E7
9822D2E558771160CF7D5B4C1DF1F410B1B4BB8EB3869F9D5F0086E13F8C3349
8D55FB08ED70950201FD37FDC8BC904083F4BF0F87C0A2DDB3E440B263D9A40A
D371D71D6EF0FDF64A9DA04DCC501580BD13E4F0D5E74818AEBC01F60262586B
DD20A1184ECCA49857A84F81A9F221277A52C894A2762C1233B77692A278BCC9
B33AF3D7A4A080646636ABF7B06388A2C5F97DCE0520083FABA591816E90A4E8
99E0B7AD32E22A432EE212F87D0BACF2F6BF055A524058940BCF1CA8D16D9A2D
6E64C497D084A39B2F6BC16D2D9F44B625E04A753B82978F6AD72A1A69081FB3
13DC58AA2EAF6364CF08A242E43849C60F70D83CC67B27D92AF1C5F1F87F046F
F53CCFF0B5BA99D33EA1F0687ED809E0B63B1C39252AF7B942DEDE1B4C51E2F9
27AC52C12ABD3F76A6A1DDCDB5739CDDC2880AC88A774864193AFD6695F575A7
E6643E589DEBCF6CEBDA9E3C87D361B9C3F1C8D769C5D2DD16CD3C0841ED78ED
DE175D3D8895FC20275FC0303A07804208332C16C8D21C2640DC61856EE5C6B1
53BA55F194E998B6EC925AC28831C654E00C60D8BC35987EC5FCFCE1B41FC132
4F0F306941A36992EB26E60B05B105EBEB7A7476D831D2C0383F393941925CB6
4D19B2D50C3CDB4E43E6D9185F37A0B20E85DC35544A54A56E887E7148911BF9
C48FBDA96A501D9DAE7DD6CD232B5099C0FF489438BE08E11DB17B5643A1BF47
DB5FC920340D093443C4CB42E2A0CF0FE3479FB3F85387533AEB50A78002AAE0
ACAD877740F9D34DCFE40BBE3FA7F9C9E3331AF3AC61FA909CF8E4D1B5CBC9F3
07D9B964BEC0B1EF77D539A9DF798005639CFDD00984965CF586F0B9F7D7C6E4
A3AEFF293FCFD9B41A4BF1D71348396F5741E280311FB6537C611BA2451F461D
D52B53C251387FF65A63CF2A927E5F2D7313EA2C5610209DAF95B46B152BDDAC
3B6286D645D0EFB8F2B182C37521EC2382DC8BBD23B356B7A1488750A4D98DD7
966737111F55A2B8DC37E7C7C0CA4DB5C3993FE8C1C4A90327065B41215FC498
CC9E2C9F57EF881D478600C807DDC7F0A3B2D69895482BE9AA96C29817AF06F4
263C6099B6D3B0749EC551826A537FBE9B5F897B957CDB27ABA4802F0FE01186
BBBF731AEDE8AA97262EC097A361112EC9B58FA1A4324AD67568505C65A9A5F8
300CD08AC0FA86FD46C463751D9CC5A2BF2C637D3E86AED7AAB2DED57CA58D6A
86F0975DFEF4970C61C84C3001F0AB680FFE97D08996492EADDB71F4DB04B0E0
39607F64D80C5E0B027BBA46651DFFEA218E2F08939AB1A74676A1A70799ED33
67084E1EB9712C38D9740F3E21C98CADB350E8DBED42365AC1B832D55382E122
3B42A1C367FAAFB12FEFEA6D4E34DC85646396AA84DF28CF38994138E0F4E0A0
671E6A774F36277267A2D8C37934DCAB3006734A2560607CFCCEF9C018C3D827
3DA993B9A1CF9577C010788C6C661363AD9606859F8B88CEBFA6FAE59222F6CE
EB70DC0ECAF9125B70E3D4B5C056E721B2C2A93628D45B42D32DE61121FE12F4
95FB5757777369719C5B080B5193982460F485934141A39A9A98C169CAFF3B02
6C81EE3A8A9E94E70AA588C1F1CDEAF6F971E302EF14AE8BD323700B083E6FB9
B54FF40B63FFEDF739E6CAEAEE832EAA7D5B6BB5D9D2D263B0C712FEBE2C24FC
AF8907C43D36DCE606D8D89FAE426033708CF154C1D8F52122B8BBB73BDC31C4
77A7F1FC73B49906D8D04695E12032984302EB1804481D62AE03D554871482F8
DF342741BA163EF16835BF763DCF8799E2505AC7F6F30C4BCD2B7969B6F1BDBB
70EFF0F6E4AF1A437A205B39C48288519739BE3029B530AB99921E6EB29842A5
B045F77F0216F4035428C0EF58020562A57F0E4F5DB2136A84131E8206936157
47CA780479AACF4259325B421A3A2107BCDBEDB8670AF7430B7965CB59A7163B
91BB22779F4BAF3F86B158C85EAA8D5217A34D2D0414DCFB503390AAB9A07B1C
C1DB0C7C1C45FE9D2B37C5BE35697F81B346DEFD222917279735E9E95189D0BC
C8F1812B8ED63606853D00161775A4F0F369AC3E6E11B68186024CD1AF6C638E
F54E26AA88856FAF1FBB214F34DBE9C6E0F4BA355E17CF325E5CA01FC85E5261
37A1235728AF9156CBD143BA262279BFFF61E504C750D5C15185DE26BA4E0A86
B4545DD3251C43B948E32939BC45B58D5B9BAC0B2865D54AA511982CB8071B25
83B5A314D7171BAF725B98274C1DF15F81DFD2B70EAE0707C49D11F030500168
97C740546BCFBAA9E568F4B429C4867FE541C63F2B9EA92EAEE2D0F9CD3F0E51
DFFAB7F75120330D9E34117D9E18B7E8E29C26A47AEE61C1E807756385F6A259
A3B9F206E1F122BF9862CDA6753546A2FCF8F9B89C8AA681BF0A5F7219D83155
6BF4DEC022504875E3A53D6A13D5BEFD81374D19DF13DCD16454904FB9E7BC9F
CF3BE91DB8A81E4164F827F359A4630C2955964D0D808BEDCF9F6FA33793A875
3A7F558D0C28196A0E97DA2C4BB9B94DC2FEEB3B5876F9FA7BB5CCB104813437
A0B890F59CCB9256C0CD4CCE3F8060B700822EB157C4BE8DE41086B59E0F9756
1179C2C0F08E832E2DDBE7C66ADCE9F3237DF24CCB36C662C7BB5E8F7DA664D1
CEC437E1724FADA560FD903432A3A9A54A710D942F8A6C4128F653D7D1C608DE
99FEE68796482566340746AE5C0A6C9F39DFA4D10889B11F218E4AA3703DF239
8F5575678E145409C144B7C5E0DCD6D6D2C4E3CF6589E9D3E6301F8D98A14885
A1164A287A8C8C869CE3BAB8C4891D68A761DE977D789B1C40AA9FECEE64779D
73DC383C3E0FCD9105079F87184F081BE4FC920915ADD1CAF234CCEE71ACB572
CC757E31B68BCAB081F0DFD79ADF07540B3D0A896780DC6EA65B0C82EFC57F42
E20CC880EB0682B9BB4149793692837AE695F08C12A56EF81F36DE3C68165796
EC7DD2F5F8F844CD634677ECF906232CBB0D7F3EC78BA7E17EA5B8821C138163
957573B49DD5B4BD182D3535C73293B4ECD8E58D2AA0A9A70203E05F26F0B3F3
342C684291B264D2A274CD739F6A9A8920C2DF579A8C1E5AB999F15E3A6EA4ED
4A4D375B2D42DBD1B70D7A5E03B4F35560E56E90A48FDBEA688E80FA438D7805
7EA80AF98F9550BF07FB852E0A92ED6D704F15FF0F863528DB72E85A1966ED90
4CD82CC3FA28DA344B632A658418710D33712EC75DA35DC781C4FAFA29D8D290
59AB5E706E5EB24984122746ED4917BC8493FA539B98E93F5B9CC9E1F6390940
074EBF904E6C116D035CF8FDBA0A9D56E5EDBA3DD21213A3F657C407EE3E0453
45C84C58014E8D0E4652C56F63F51819C4206CB45D52E88EB1C042E28A6DF98C
E245D22FDE3B37F6BE5F34FDC155EAB0B7F1601B2EE33EE9CB6A8DEBB3097E6C
8E065E83ED4EA71DF17A93401574BAE8EB31E9DE3C11E0011F85024F749A571A
30E67AC8A4F76C9B6DD93C12E49D04DC071AD33B118360196661886F19B5B15D
74CB098F56CF1CB341A1406602716738AC8D43CDB3A383FE182EE89A49C28C2D
635A2ABD950479654DAEF4707A8E9378D24FC8949895D672D4B35C90650BC469
454D661AF243C250B6193547DEB0F0A63E8C10D57DD5E2D5FE4553ADA5745AE8
EE1F8ACD9475A7195FEF30511D5C87876C863364CE4B089A976F9B75749B32B2
21D2B19CA0C3B7F332DD484BF31F27E8CCA1D779981672F5D7278419D03E92B5
1E62CE40C25D7AE1FCFC149DD5E38602001C8FAF28B2A4F1AAD052694EA209BF
FBF0CCA7BF4BADB8D4AE414A1410886EFF8D53B7725891642A9ACF30E2A4A4E3
6399F919F15501915F9A17CA24662FF0B6783E357BF2DB29034B3007E7EE6C4B
85CF88A7DD5419F12E32DE866604580CDC0B07E9FBA0AAA40FB98C1F251CB49E
AE29A3AE0601DB63F00AEFAC11005E66A31AAAAFCAE6A03034E2281BEC8D06F7
B364B343DEADC75BDBD096BED0614DED2AE3D39C42F5A059FF48BB752B10439B
1C9A22F6F2C0297F26F5E4F61666D00A9E40FF7BC1C8059928ABE24544F41569
DAEB25C02DA3CD41B29EE521879E4FE07A9BE5700C1367B3DC5FE62A6BA2F244
9EA5006EE072B0BABD081B73CC148172E83474B69F0429554565EAC9AD00EB18
7477DA948B3A3D6796FC834E5473C359A5BEBBA5E1CEB092781F0C0B6C19C98D
A513AABCA1A51F760827A049D5626EF9E750C7790D7A3ABBB15A147F504B1884
16762880DBE5D8E384CA3C4F4E14B3C9C75D027348A0689C590BD9E6F5A06182
C3B9844843B36660FB31D933BB7AEE177E799855334DAC3760EA1B589B5562F3
D48657B383077CE767994941E9A5D75A8FBBEDA2F3FDF20CF7711D8125409C3F
A734449C3B34DADF947075BE99F21CECC00A327F01B283971E8189C319B82232
F548517D15756C6E3A1D026CC64949962CF7922D6E0ADB1F7986025313D51A9D
B64D82D53435C7BAFD262DC7F7D015F4BDB2A46D841ADED0348EF0A843D0F05C
E3F579148DC1168458359E2893B59E81369BBB557FAEF2B8883F578DA2C6B9E7
77B75520F5B6993A26C20A2114E2BF2E1C37ED08E0F46D76D5CDE0830034E3BD
C2EDA5AB4B0FD9F3EFE052EC212BB664805A6ABBD010D85C3565B2ED2E163DE0
46547E35CDF1465C249CAB870818FA5CC7B9DE515E42B14B20478BE98D0CD640
3A0CEE82391AA72FE8C0059AB3C31FBC84A663DBE4E3FED3696B649CFCC81026
12367B32C88BFF4EDE18EC80DF2A54210D9739022860C4A8420EDF20E5332262
C12D8255314897422139DD5CB6E212D6AD0C4B6C064A73E47F4D7AF8A0DCF9F8
36D1418CC44041CEBA92D692FDB946D81E88F2A0BFD5C81EC15422E0F32EE884
54734AE58354AF10098C3955706709B83572669C2E814B6F228B8887C064DE2A
73519094BFBBB8EF53EFE0CAA60432FB85C125190EF73FA305264AF1AC9A2548
177B3196BAA257EDDD055A37FC3D5A6F2E1C47482CB85FD4D24DB03D753F260A
585D552CDC9E1F7F3533656C79DD1C174C26DD97D462B4323F33B410DEA76B47
C4CA64BF35AFFF0049776B2719D8B27B10B9CE4FCEE8CB296430496A3B50F184
92C4D008A9F61DE99563D6EBF506688EB4A68DBDDFE2933F3FD00B39D40A2FC6
07440DF57A9AE06E23E292FDC6ECA90BD6399A16DCEE6D998B0F691FE4DEE7BA
BDE53BB0D3F91FC868CA43F23B5BE8837EA00B30C0BC7FF11AE673803E88B326
C5EB2D08CF118382A92B6F946CCD210E57E5A1DC995149E34D4359CD47A00060
8F799114BE5D36359D0C08BE8EB4657F1F3BFE97412F176E0E7716C77AECA329
3152FC36DF24F2008D619DB75BBA85281C413245BACAFDED80EB84C857186645
C467EC0164AB6086D2C2D959F223E8A707179011BD1716C6763544EF3D5D6E29
CA11F9E01B6950D5D43C08932DAF40BC1620DFF03D5CF387ED03FD3E56E171C2
5804C38478DFD3C9EF826C2CABEB83DBF2EC93227746654ED73ED27B057EDD42
80D406B3EA8479AE7148F928DD9C97800246273DA18D1A428A97697AA27455F7
96B03D84F85809FE454AFB961F688B83F60D6C47A485B062196657C6B0CA8422
DC11C6CEAAD6D37F136E5D846F2E9EC0646B0DD0094704C02E2FB6C66D49B720
E8DD38E27D05E801B0A19AE1B5998A9FF51C5D6556FF059F996B83FBD1511275
A29FB284F38140FE8177540FD1991881327327B90CD5534097225899D54542D5
29A86D0F960927F3CF2B91CE7310630D01C326DDCC2EDF4B5AB8E1B0DC311FD7
7D52210EB2073CEB06E0D79B0604D82887897B91EEAFB325B15F4038E34C9DB9
4F7801DD3F7FB21D85A0AE65E064BDA1A40488A92FD5069469C84B6C55AE7342
29625C964C5B35F141AB733C67844E471951730F598331430372E9EC7FC8D62B
62EDAFC766F7BBBB6F47F397F59231D0ABD7A2EDE43E477D7BF8A0EBCDCED96F
F1576600F1389BAC04F9EFA749624046219321E41EA5FA846C05226796D86CF4
415C5B77D23C298571204AAAB9118DA7E7DDB94E5EB10375B523DC920B6F71FC
815A42A6DF5A23909E98A97DD3D6B5942EB9746BDC1BA4A84F7B70846E33CE5F
285F32FC4E56C81076F19BC2ECC2D462741B0BA00C6561DF4B4C685327F3CDA1
BD5C661A4788A758181C6C213A2A51EF5CE09CF01588D1F0664C1EAC0EBF606B
6630A8845A3ED80535374D2BB66A287D2BA92A6C662858584EBFBA53E8DB74A2
69761B7A9C7B95BD29B09B930B0D82F2C39F9BC5A4B2AB7584EE268BDD0F5F0D
57EDDBA9B97D74A291096C97445B0CE59CFD89084011AED6E918BA1FC040AF01
1940E4C2811D37C9029692DF8E94F6FE39474EE13AE8C8AF8C92298D06EFEE8E
EBD3FA6C2F84814D8429F4E8A047CBA274592C953BD5A9CBC996C9AE765B7171
7C66FB8CF79776BF8F6EC91CF0BFDD7CF669AA5422721E38707503F7C8EC8D25
C8D12B6346BEC24FE59880303D5CCD33BE96443C3EDB23C3544E1DF0BBEF2610
2990E061801636369D82D571ABF7BDD14C79D796556DEFD53B31D12D305D142D
1C611E412EA01A6B0C77C49A031843A1858DA64173BF894005FB893CBE5D8590
76B5AAE89692FB00B6A43063CC0EE57C97BDCAE5BAFB5AF89F94923634FA2725
A0A86C028FAB0F20F238C85528B8B7946ED615170CAB27A95C5FE00D11D39530
3092E064F9EBB05A47D88DE3F6DE36A9BE39D7F0E0E5A2CAC0DAFBC408536B3D
A1539967C49407FF5E0D54358CA6C8C48F723811E8398241797FF0A1B21ACE3F
FB291D964E14685ACD83064548F0B46C30A3AA503426744E5DAB6A37F59EFE3B
612235BBFC367448EB7FE9D1349E90AB58CBFAA79D59679902F00B43F697D889
D0339D2FFBA5F17EF15B0742C9D910A9A02F36C06FA7B26238CF55340B24BBB4
24F77E77848C07A5241121B9AA216185D4EFB2E11A6248C124B81DF317113527
8BED55DA1CF0E696B12935EB59B050A3BA2BD7E5531864C90F027CC33767A580
57CF521BFB593280E59E14C1F64C508C3C81BC1871607DB026704A1A7DB7178B
D882E77D1781093F956E26F8437E9BC03D5588184F5E56B96A6754C18AD8D66B
2BDFAD334ABB8E83F889200505C07E64B2D4509D1270CDBEFF01A02B305CA419
A9C1F47891F67F19E3E2051CF3F7733A0627EC627B9A991C24883E1225FD310A
BA9BFD87333B8F05DFF842DFE14CB390C69AAF35C89B103DF5666EE9AE00C0FC
330AC3426AD987867C257217C859D48C1603730C526150EEE9BFBE93365ECD78
449B61DC92F358DFDD1CEA16DB44241A363F1061FCCF54A09617526941251669
6334822DF741724E8D187C522D898821B44C90F1159492A7F4DE2A371B02BC8F
A4B070EEB302023FF6228B45608E8C995DCC595125912F12542EFDA897594095
146D59643AE72F666D681A4FA8B2477893175F3008EEF553AF70B8E45E3E72C3
73CBD756881C1853879EB79905E524F36C92B90C8F399248B8EDEE0D12BCC890
687069F41642325197E0C22F0D1816C6254BC7611C6EE919C344AF6A0F784F42
F625DFE333507C3CF7B820037A908ABB1F97279F0DDCC564D440B4FF85F92448
D42014DF2B26A03154F84888CA17948C9FB31CF86E555B4815AA6C876041D3F5
719F7941EC91235F9F1B9276992A3011D6308B2785F3282828E9317861384352
7E859F2116964295B5965096240AD78AD226ED88CB897914239C1FB716105B0F
90762D297CCA604ED82233D226855EDF9248E9686094DC6A984C0E944711C775
42A66680C9339C7F2D536BE1772EE21929A553000FFC3B3F8666517DF9D31A17
8BF76BBCBCAB0832EF073E3505C3EBA20AC324DEB568EDEC0E8C8D9AC87926FE
C30CE2BA0C6CCCA1241658937A7DEBDBF96773D2F86DAF0FBDA9D2E7F9AB662F
5C53EA716F2A7D77A990393CA5CBCA996BE2E5186292AE697AB946DC2794D4A9
A330C3E2E57C4477049B393313882FB1E2FE9BD9207EBAD74476060B5253C4FC
094C9776C4B8288E5F2C1040FA69D4FF14791771EE369B64E6604D060BBCC5FF
8C62B894E007770954E9957E64833D6D0BA2CC20ADAAC3C0C63CFC3B7ADA39C0
AA97CA287AA8BFC2E509179BFF215C77E14D2313E8403699EC4A0A407053B1F5
7DCF0C13A83A6CE81C52CF94D90AA7078238533595B3E01FB060B7E57DA63EBA
FDB77D17D0D9A6112BF0D1484EA741D84587FD68C62024E2ECDD3E91D91C57D8
55D818C86819DA7A0A679C5FC4B966A6F5B67AB968DB5BC1E2390645266166F3
5738E1B3BFBA49BBA59E918E4FA36BA2D047B3E52E65415BF7BFF995DC20E067
EE6B3F7DFE0ABCEA24D63DB2F70CB9EBD541AA9FBFDDEF1F775BE0C411788B05
4AA404C3995E07B3C24E75C142A970F63BC1014A091DC95B27946577E0795042
A5DC3DBA4B99B1158F4693FBC31F85B2D65C8B29524188CC192F2D4483E6E23C
AB9F3FE40D71CD88A995C71A69F35BD0CA4542824B1F4329D05E56B25772B7E5
E398285529758927D5AD6635D24120271BE3119BF80D107CDAF7D939FC7D5243
FABF7CABD161CE3141756157E7A60FE8610C7400C94B3C20A29B953ABA7FCF94
872D90CF64E3BF41013C78F4A702BF5FDE5663888AEDA4FBAE8788315C7F1D50
1525A1F34CF876DDC5F43AC53A51C4843802081696785BF15D76F545786F4FB8
AF9223BFFC63A514AF6BF4AE2B867B9CF1B3A173A14D8BEC6F031497B782C0B6
094FD0AAC0858943DD3B8FBF6FBEF11DC1F219E5F31DA8411BD601E70786FFEE
4B9D62DDC9D29F88AEE951C245ADD55EEFFCA5220DC219670AB04B06F620811F
3D72C556FBE855022310258F64CC630125A576E4936EABC216E33F0AAAC4EC00
29F0CE64A0089359A23E63655B1C9E924C7EAB711BB870709E824AB30C7902F0
32A67440AC03AFB0223A63BA100BB234DD90CAF28D1C73FD9E0A31A14D4E7002
24C49BF08EF65CBC70882B7C4A125B32351FFDB3D1A00EDD986F2A991FC47808
113FD630F33464CB7A133018E6100929B13C6D44C82D07118B3B3951478BBC0C
B17C6CF7F1E543086EB0A54BB30FBBDD57AD87A64B7AF9B47C88B1BD77ACBD8F
EEFDBB33C749C5659DCD09B7250CD22DF513EA0849D73ED53D5EE9988035436A
64070DA37B9A56A4F1AB3C97FCC08A6E679775823784AADB83AA7426B31C6344
B2FDD4BF520B6CE0190281BA4C0428DACAD6689E5A35F053ED23D9C449809F94
D3161E96164AF8420A7A9EF56440CE8264239E91202E5E2CEB5B51D5C8E569A1
AF7B997F72D617E8F3FBF1D5D4010F5C195F4AE420BDC3EE0CAB1368C4DB8C6E
C57518C027E39913256EEA22800494BE678A3E37796B31F27287208A5787A96D
824A4E035AFB348968579D40BCE76B17DBEF7536317EAF5710141E583EA9C703
D5C01B407842090E3499DE313BE01AA7864F3E04B5A749724776EF89FED9BC7C
1DF3B4B6B24AD3B7B5240EEDB2731A7946BEEDCFF7930F388AC6898017B75004
203E9C274F783157A82B6BEC503D4194234AEFD5B96F2CEC7697E3DB14F8EAC2
69FFADB0078EB8C9879847D9E29CD1A612FBD80C57FA44D9C43E602C78B296CE
0ACB9D9FB5CD9D272E32CEA598A19105172B91180D47C138A627BBD9D52CB2F4
64879C936B95CB2764F6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A91D87663136EA17BB18715AA052BED594CE20910697A4DCD82C
553CBF42550ED97390766B1DF694CCC628695E1E6F0720F705FB727B15C6CAEE
EAC922B8F093E59FD1B1902FE450DAFAD952EA0A98B0686F3039CAF83588CC3C
30ECDDE05B7DA9A9E75D8DE747CFEE2E831CE2124CBC71B927051F7FB892BC42
936A1C53B8DB13075402BD4080216A226636DF2CAB859F67430D8CCE60A1EF18
205ED93EF4EB608B037B88D3CC7FFDC5252F691BF753FC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Regular
%!PS-AdobeFont-1.0: LMSans10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Regular known{/LMSans10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Regular)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMSans10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-420 -309 1431 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFBD8A43517ED5F05168EBF9D3AFE
25EC2992AF87F286EB5CBCB7AB5454926B000DE86BC7DC7722EA9CC5AF351D71
F88C22A045179501515ECAEDA3F7CF9A23FF4ED29532BCC5A2D9C4566653DC0B
F99B58B303B412848BFDFCDC0BB4CB9FDF30F98236F5A2863FD3E28016CB2182
2E10F5EC6419BBDF2A9031E1EA217B147A06BABF1F87C9585634C5265AD31FFB
EB313C8110270894F41E54896FAE4A5E1A9B04BB8EE53CB5F143D8A3B77AC1B9
96AEFAEB5EA99D855A53026FDEE6A856D3616D7EA42379EC96B931867D9E55CE
3ECD8877C379F6C2FB63E92F146942350BF980AF3D7DE17DC4C2E4B304AFEFB6
F4A34CB06164596B7DF119147C59AA2A1A8D448EB219B2682388F94393CF4D74
532926ED5F2B9D281EF3324258F963D1A460D08DBF08127EE66D40C3C74B98AA
22B9AD6BB84113F84B085EFD4982BFBC507D1215DF109AC39E0B12230FD6DF02
C4B69CAB0B3375C9924071A89A799AFAAC3EE2010B8FC82E42BCBDF021C9DF72
D2D02FBD2CD3E161AF409AFC0828954F2BF56A15E1ABC0815ADB9C244B0AED7F
4B9A54CFA2A286FB4D9DE215B8B5879444B3E683FCAA95D0F1520A716BF2325E
E76716BB5C5DB5600A7CAD11F019AD5B3965B61494D228A3473256E4B8B22A6E
08F055AA199E8E9FB2B6F04B01BC31664D95FE7CAE16648E0344934054BCB06E
44A33F278B8A2215F77018BE752B8FBD6518461CCFAF61F07032398367B284D0
B0AAEF9509F632534C7084BEA8B52EFAF676C38D4A720D4078C0B3B525B7178D
9F85BD44B13272DA283BEA7AC239A3E1A0FEAFD3E9F7AEC9CE3296A054919E74
51FDCDA8344A2E134E285D682648203E81A5343EB6EB96FB42F1034835DD0440
3968C3E86CB7B20B53F9CF8FCB188D635FE58370AEB11453FE69A0DB8341039F
EA654B8FD7323E5536E130FA10100643C234CBDFB8E1CAF1E0C1D9073C3299A0
24F2E4D71EA82005EA03B106986AF98B4557B8DAF0F445E3A884196DB28B1A53
18E8685614ED45AEB1877C4476546BB89CCE98E672DAAE41559CD605D3A0B336
908546BA19F7904806B40AE9F9B354C260A49D0F9A5A63AA4C14879041AC1935
1612FB0B1E70D87D202BB69739202BD31EDAA120CE54ED0DE7EAAAE94F94D991
D70B5EAAC7A6BE89AE12FC2E5B8795122379B1581BBC77A369F72FA35FCF1889
1D5C096DD00D9B2454293E83D46B10EAB91C83A0C09316FB0A6FF881EF3CF6F0
74AB70369ABE28B7078F57A4D6313458E50D0EF41E9F39098B65E43FD1227A26
F6FF812CE452F35A377FF6243E9B38814F9CFE771F4A5F8ADA32416689DE8852
D903268B55D5F7EC0111D574BA4192FAE8EB478B7AE71A3F43E960F8B52A4B88
828D97DCFE9C170E21B59E05661E646D8173A5BE71EBC504A63CCD244B0A8865
2F5A1EC5546FD4DEAA2A82A209E241743C65D91E8B28382FDCEEAA89A3E0A6CD
429A2A543A65852D1A5B12F15CA11F3FF558FB0F071597ED37918F90A32C4175
B6BFB279024EAE1B04D721A6C54683966B3EDE9EDF028C0019ECC8CAA5E07458
583101D0DF5B7963E6EC917BC6FE271EE6C23FBF532ADEE1AE68E21535FA1B41
FCC74614129FECD357C3BE8A00D25EF38327EBE4A4D71078881731C0445AFD7E
A2004ED5C54658E35E1A0E9807D360DC5F76FE4F4EEF7CE1B4DDBA614FD05F7E
2D2E39A8E797DC888B65AA9747C1AF79C1DBFA2B4E18761EE75D3F611D602F5B
7D433861B13CC921709810ED004944D4B18526D4B876AB2F473672BFFE79BB6D
99AD5AC62145C7A4FE583CD8078DA0D6C0E48F1D065844515CC08B55C960DAC9
BE031F7626389BD3E392CFB2EEDE173452C0642747A58F73F774021371EDC57D
CD18653DE577BF1807023434FCDE1C8E7526FB5F8CDB189CCAC92D86370D5D39
28D33F7DB0985F0A3C2E9D379189360FED33DD98194C891292AFECF8A055EAE8
1C7D2B8D845D3F92FC7759245BD5AA1A57DC0E956ADC19E19CA5DF2F8CD96237
E6FC9CE04E7AEA2C7E4A824F8054FE402799EA3A54190E9D909671965AC8849B
3B885B7DAA70ADDEBFC239980A38968FF9B815E5DC93846CCC8A07CED537B2F1
57E170E61E6B7F4B710CF03E37DD2CF0B50DBB782F63D89425977C174DA23731
89135E0ABEBDFF1BCF088B4875981B3590EB6254FEE152B8F789FA9C0919ADB7
99ACF711607ADA252DE7CDF57750DE134BB96083B0267E52474998E3E6319EBA
B3D1D4F44B2743AC7A395E0A83ED0A777D023E226271C826E5FF8740DEECE7E5
FC166ECC5C25B81723F35B6E2C376C4A455A085D4DEDA1E64E8F09431633C3E5
A1C1BACFFCC93367F1C389CD51E7B2BCEC765248C2F863BB5A3540DC67E7B0B3
618E10ECF17EE37A6267ADCB0646D4C2533C0356C7D6AB6BE4CCF1C2A978C9A8
DAA2BC544560980EFA1C84D5348740B8A4885ABE1FC79E8197DBAAA15C2BFDC4
46E8217DC2E35350718D28AA6D2D94B04F46C2A763DAFF6642ADC1ADB069D7BE
B4251CA8A1DBC399EB5D0F829D893986A2F003EB1A3218EB83BBD59F36683025
86D730EAD6B05AD28D44DFCDC6C77027AD5C2E9F99072EC12419BE377CC7ADEC
7DA555678E261DD2E5776BC8AD0B6155E5208D976A9561F7A2A4AAA27D75E801
6345270887C0AC4B0630AAD1FC0B5E43AC491292E94DB36DCA74E4BB24CA63C8
8C0A635E4B8E7C4743B043ABD659BC2580A685B2B8A33EC0C118155DF304A3D4
CDAC6B7AC4296BCDC0A475363BAE2998C2FD754CC7FA7A0F008D1751CE85D367
7E2992991F8911FC31AA21685EA394047116ED7629C74E8171EE39B9968333C6
94674855FA15F3DF491937181FF24CD77631FE7FFD260042AFB4E19A95C7D9B7
1C7D637420B70C1D851B93E01E80D140B1D3E84DC0A52286CE9CF86129007D4B
BE72C55874B10A1413621330BBFBD9CB1C59F5B7EBD718248AA3FA53B85D3EE6
DF698FAC50F4174F1592B0997E15984F42D4B724DDEB44FBFE435F9CDB045368
2BB3519205D57BAC8E8D1035C703855412B353BF98D2CCD6A88B0A67C909E66B
76985E7B9D061CB5F20B5D4A4856E5013EBDE652B37E911AE0E16B1750131E90
A5EED0AA43FB91DF06F288DEAB608FF4395B19AFD46F6695153F1A30638D2222
8B1095657A53E3B470A5800B4FEDC4A99823CAFF87E567B96570D836AC8F1ABF
62A78E43E123A0777BD6C4C11441997E00FB8A600F088414D8992ECDA0ACC39A
B210921D08ED2C97B53738B4B2ED56EBE617BEF17B9DF4F312C20A33C0E343BB
16449961F30B34D1933177E5EADA8AE094B48AE11662FFD3D82CDC8C6B8E693C
A78282A08BBA1FFC28AA0B2660C443D24320003930CD829A0EC1E9F9DF9E9129
E83B988B18A9BC4C44810607BAF5735486A45A6FAA91966B4331FEC05449AD7D
0EFCD4C7304FFA804319305B7CBFB2AEE28CE031D22460DCB25927B9001E6ADA
AB86BA6B2B4E28F3C65566EEA6A408FCCCC97F38EC859BB4944602BE875C0E8D
325837EE7475CE269618C727B596C3C119E92E26231D0086D6A0CA26D77F403C
06D65B7394BF1FC7D06D3682DF6B17216756AC75CB0A6B8FD43C58490E5807FB
5937EFF572CA73E4E558E2B016B13DD10CA06A919E2E8308B3CE320C7448E0C5
0541DFB3E5E98186970AAA6D68B6F7CC89EAAF585B97EE0A1885CA97B6B40521
8546E5322FECD2F1FF85CF470F1B3B617E061104A978FEBF5783565884B33832
E598350A470C355ED1D3A0ADDFF4C3ECD7CC083D70252227836371FF838F6F78
8F3539558236857EFCE58DA619324AFA8E7B0E01A2D369E9DD9EDE9AC14E4FD0
9695BBDBD7994FD6CA31284BA7C4DA696046756D986278D56C22EE0220E42A6B
C4B0B91385CDC9BD557E8A0BD7A9A7D9B6856E23E0B550CABBCA69BBD062515E
16F653C7F38A209281BFEB0FE849E292D6FA3E7B6584779D8BB0797C30E807AC
C6151DACB35708D019A7B9AF5B124290AAEE8EAE36D1249689B95DCCC0576057
EE2EB1058D670E11FB243E4876AD9015F71AC4F78C20D80F5BE8A86EE175A3D3
261F152EBA489EC9E5BB44ADFB7558DD95364412907A0811E8EC4075D24EB068
2E7602CC252BAF0E3503300CB5AB595D7C58123CE01E1590A3015450F9883520
451636E19BC9CEA795AF21EF3258E5238D15FD86F9823D235D1907954B8F5A30
F6AC497821DA8DD730A54885A1164A287A8C8C869CE3BAB8C4891D68A761D9AB
5E1A47585A4736B1045640800B0984898282CB81A3B8188093FF5CC9FE8D9AD1
6D04DE108727FD7C001FC63527F9CC772D4890F05058B3311810C6867550C0BD
F62364BE5F80E23A8F5206C817E75FD12153EF75A00DC599523AFB8D80C54177
E7D853363B246759EC16209E840889804C28E32FB3BFF145BDDA844AFE41C670
9E487288F926C658B30905B56CCEDE37F37167FBCFA2CC9AF629638CBA1EC08E
9F58EBD80322680FC4456E2E0FAC9D31CA1B8B7879B21FDC78BAB3C944BCDCD6
A65B67F3692C8A007FF162F64ED65962C52C7A22BF7AF3BC490D2046235D8EDA
64581718ADF5FBD7277E57E9919BD1055B0C3865852D1A5B12F15CA11F3FF558
FB0F071597ED37968F89385864B2CB30DF6E62F4C135D31756C2EBD239A0989C
705C3684DEFF82699C0F42B3D41AADEF9B66291911495B0944DAB553727A204C
65A18A0AFA2C09BA5901A21BC5A3C4E6BE9637FC8BD3E94D6257BE1B7BFB1472
55171592ECF80CDD365650AEAA5E1D52D8F88DD49EE66A18A785B966F2F87215
1505BA71296A18E04AA75B99F091D4876A83184F0F93C9A09C65A698455D1EAD
5C22014A05C3E613E093228678586D1590F4C85CCF00A967ED60FC7E9B9BF26D
89F808B05C2E483B9171450E4CF28EEA6615C296181A2ACD808BC68EC9476D35
40344C344C2B60468F2EF9010C645A00CCC95B68C83FCADF3F1D0940B1D86DF4
B2EC81023B5B9E354CFE201E2EF6220BCBB479309AE973BB998BBBFE4C486AD8
9EAB0D0C229C0DD9C17F15D490A70F55BE1A6C135C1123CB216D77DC5FBD69FF
F5A9A7B1874BC65B1F468763282BC437C5ADA4086BBB9BDEA30FE67FB424B337
3F37DC4B4FBB23CF81A92C6EF1F4931DE0B7C7E22A39CE53FABB454EAF6C0497
97CEA95428844AD4E450427A92DBFB6061F8B1DC1CFB1C157CA626EC056A68B6
6C652833CDCF08803C36CFF6741A5C45AE186A2F9E899153F7F2F9E5AB5817EB
28F9A81BCEF06D768E9AA488079366B9E331D0A01FCE02B60BCE7A4975433D1A
CFD965F3C47D22B2B8E48DD5E4ECEB25B18BCBACFAF313AC51BA6360C4F0BC34
6CF0AAC6E0FDC9A90A49DF2C1C539755080AA332B33481422D0D3FE03EE61C77
4D39E1F2A3D374AB25B33CD03825FF80B0C4C682AF762302005B0400CB5F7CB4
982A85E65A0951E0B20F41B614C43F5ACD9126970121B0F16C9293AEA08B8FC2
5115C2B59B1671AE16E0B35E28093CB8EAC2E6EE446E7F17182D266F978C8222
761BB99939E778C4B37430AF88A3F85132DA00251F5A4E3AD99E47E4439FB5F3
27842B7C07EDDFCC655BC55C28705A1140BF6D9AC356F55822EEFE030D080291
D452ACEDC5D0E804D136D99B130E3BF1663339F4CE8710E4F3D621652DD2C7E3
356119D1E4BD658E9EB5C64396D14E541FDA2EE73E38B3362BDE4FC9E600BD41
E30B56D88F2DB4AAA1CF706F141A0A108ED471DEAEC54ADE2497021A2B138845
2E5D5F195A0D61A2E5CFC76D816168B879E23DDA5BEFAE5601A9125A3B90CE13
1D3B48612958B389F643AB70F05A3150435FFCF92A7779C6EF4E98BF1D5888DA
C354013964E7B15772BF5D304E3DAE023DAF73D816CBDDA634BAD23DA4DC7FC3
B4C147A3CA6B939B4B19E81AB22056D6564B0C2F3B595C9F8B8A3106AC80DB85
CE6635AD8EC793DA7E638388619EBAB9C62CB51FA723C5F22B0532A91A1CB942
1DE1DD7BC5D109B52B7093D785F43D7EF1E43812D566927F29AB24C087E0F89E
AC202FC8AFBFFEB7B9107833EB41C864CA53EDD6880C3D75B079C63B983F451A
4DCF54441D2E2D5B38F8D4FF1997C6524E9964D7214CE3CF8764FDEFC9ED5DF5
588991BE92E4F23EB14AC341B307C9106E1820F9F1844DD2EC4C5C58AEE11D81
27C5663D02A3008D9542F00B3342404EE1EDA12E74FFACCEC903E9ABCB6ADFA4
EB07AC36443DC19A5900C03C00B458426157AE838C755ADA472EC3CD85FFE717
1CF4F92D539D3293DBF97C4E7FC581F54759C550CAE58B26ADF5E7524C729305
DA2D0F38669F0C1927595AB7CB3397338DE5C961B3AA70DA22E24F5D5F7DF0EE
61C18E2D90D46BBD8F7B95A7BACEF0F59D7A86D619FE072F92AAEC6CE3913A5A
406A455C4AE0BC827DEAB840570975FA224A7914720E92784C5E7013ECA08614
30BE54C47A22685D87B84ECF255178D2D2C4B7F7857E7F55762825505BF7D845
97813143C60D3D1A515D52CB8732B9E06BBA3735D4459905072804AFA49FD272
3E90E176A3473CD094863189FA8B4FFCBCD6D275F69EAEF9AA8C50D9AABEED05
25C116ACE245596D4CC442AB836DAC4807A66F6F1227D0D8FF71335393E9F72B
BFCB7462632EB4D32435A384E0F489D72EF60183282F5E586BA0F374357D84BE
CFA8DB75819D33B4F40A08BBEBADC84A7E00A389D5DB40B69F81A0737A4EA1D0
B1F0BBDE4C21E3DC108365BEE27362B2B9547B7F1803732D18A9B4687989E55B
AAA158678817EEA76FDCD8248221B5D57C11305FF53A443EA9334659FB1B8C19
15E83D18817B3CAD46646300ABC90A568A8D9E0D6C1CB168927E4925532684A4
29F690536B79F694C129336C40DC786D901579C497C3EC6D98BCE6B0497E4A4F
0F2C9DEDFC2C3D1C14EC30CBF83E5729F1C074D4F1665F35710D25F710E45117
68F708A00D003043473B837D9FF5D17B997EFF71C0B00B951A7570A341DBF602
CEDB351FC747926594AD9E1914F07F659282255057A4BD4A3191E6B9AFFA3E99
50914CB0781D5442DC61E235A20EA2DFA0726454C7D49477C1BD064D8CE9D646
DCB9085FCF3AB2178B4192782402D4F78C39F044ED6AF03CA44330F361BA4F29
1D8D47BF8B6976162610749242714C69C6FC03D28415BE077393D77C96B6024A
57B5AE20CA48D1DEB4C668AE63B11D15A49B6E46D8EC621225A259A61AFB0124
260E0A4B165539944EDBECC4B4B8D44609656A9B4BF36A724D7F414849B63D41
9F4B45BB03148722C1B3C1764AD9D987DEA45368072750CAD0C9ABC3F49233E4
97183869EF2B04A9864319494CA4A0C65C626C8EB38F573208788DF39F63343A
DEA9D821A658006E6AD135F28AB132EC69E9A4A7A08C2F5AE0174990833C226F
12A20DB04821702D0F93FBF513D7B85603C8A0F37E522ADF2D327932D9B3AF9D
FAD4E9492EEED55C4991067229F13CE376FDD5BBC9D27F6D857C35FD568C4B21
07E8BC3CD6A1DD200D31F6BA872ACBEBA94F1FE5920A18A7EB469BF2FE0868AD
5FEDAB9A24D99EB12F66F5579AD1B2607C2C1AF8F72103F1A7415F526A2CF3C1
6B800785F169D8E9C1E5FB3EBE07CB1ED5EA53FE5E6D9A09EB31ACEBA9F8E0AF
2AF7C74DB79A2B45A47D4119D363B0AB3AE612FC23069DF8D162A2B400EDE05D
F412F5D3AF80887F93DB3F8EA2A7E25B58685556C172074527E260514D6618D0
58D7B7A624A24E9ADD421346F6422F76D7CED18DDF69931B83B3329DDDD044BD
3C3C36FABC9898C3995CE530994176F942821D2B314893F2B9317FCF4A5AC193
09E617F2CA0C7D35F28EE7422F7CA31B3A514AE5641A7DE56207EB2E7480E120
7329949BFAA4259A32EF3F1D6911750F761F9907A438DDF4506C6ADBAE868F89
301460A0C3D4B521916C7DC880DFA1EE1E270FC43E31513D45928169754EFD6D
AA3219E5AF8DFD8B263DB06519EF5B4DF76423A7DB7ABF711BB0C7C703843BB4
FDBCAC9F30D92CBBEDE059D026A5A2D9B65246D93E36A724C65B40C79A86D885
8830DD50D4A0FF28CBF3E55CCD8018D117CFA1598DEFC33624D698D3FA83EDC6
E2540414C7DC4CAAD2542B807009054090770432D63B1C903E565807815E3EBB
14C6AD0EA3E77DEADCB28F65FD2288E0DE96412F82723A5B16FAEA0A235897E5
7D9FA6F817BA69AEF2259E1A12F791CF64CF7BD79623962FB0309E68ED1789EF
28815477997EEA26D31D194DA347C0CBC91E57A63F800271FBCCD9DFAAB5E93F
903A8FEC0119ED1E6E83C30EA9BCF8ABEE772BF8AB008463B09B4CD634C5E6F5
BAB41A286B113076AA924BE26082FC12F01A62B1C78D857A01BAA2C5C2C79D85
78DF1E5081EFB6EBBD8ECE892063E0D6B5706557B831934ABE6D113D7FCC36B4
D65CA1EF84B8FEEA425E21913CBA31E0267C2BD4636F724AFED7E0558C96A7E0
F31A48B1DD6F27D321F6F925E2E8FC4B58E6CD01B59C73A14DBFB287B7017F6A
E0F5CDFA61BF88C32EE1E82A65845A59CC7C1B147826CDFA9B35807713E38983
34BD99CFBE66C4FDBDD9B9180627976C0EA7D9EA5958819F5CE03BEF6B59B669
723240EC31E9F9EF398C700948FADE7A6E4B2335E903D3CCD648A76B4A70232F
0EF82F448559F8CB85DD9909A74AD69082D52D62C959A39542360C638A47B363
1DB34AB2DDB7CFD30739F5638F9917A41081B83612B3EB27C2D8530C61A98C7D
F0449F81590719B9A9284E841009D3C81A0BCE888D2F9A6B78E6AC615258E663
C9D255FBECA07BE5CF6DF749B1803E3C1EF42D935EFB4AEBC656854ADB4B9808
2A4E7C290926DB52258A8EEDC66700FB549A92821750897D004C5FA7A412AD92
4829C2BF2C24F464D9A27DF84D86071B06BF6FE1B4C2BDC611BA31140569566F
65860211D121430D11E87AA6C12083B29AAEA996FA91FE82C131611B0EE9A983
FADCC302B6E3FDE8F35C619FE7B82602E25624AE69AEF32464B022ACFB895544
3960EFA5C3E0FE565DDBD45AE467A782725D8B3E30CF0794B6F7FE3D52148AD0
F1C8B8B3873F10DD19B813E15DA410D38649A1B1B360921675AEF8F27C12484C
CE6E4530541C1FEF198165415498597436449EE0F9445B4C8063B612B52CD823
2E2BB8D40EE21FEC76772B068BE063365D8C1887BB13D0DC1902B31D1DC2CF9C
9DF2B07BBE645A556C0086C730D91093F42EB0554BE826A2F95A986F8A63D052
24C9DBA79A84DC57C2EBDA8E422A9550A2EB2BFC8BABC1AE4CB0FD382E26BE0A
83169B6C371950D7EA612922EA97B59C1D004F8ABF17246D4C8C41D27CD2CF47
040B5255F62BD2B6A93C68B79E9026102990E064176B21C5E43FFE8183B78BB6
C934338EF87C2614D35715C3E996E6DFC40960E118A3C99F54BAD880A38BF73C
252636CE6A7D12A16E34AD90D4332D31C2662EA19C6577035F9EF833A4B1B51E
56065ABFEF1036EEAB8E04F3244F52F4D7C0250D658C633D68B6FAFE895787CE
65A90AFCEA9F50CF9A75519684785B73039B66EA4D2CAFA5ADC40451308337E1
B50D361D971B735BF61EC499EBFC84988AFFC667D0BE39969DAFC31182DA4A93
9000AB06DEA5AC315C170F158632C17F42128EAE3004F4689475892ED9B8F060
B969D4438A98A52B02183737B9E9E6D3D3EA99366BAA2EB284777A24DD129026
E160A6453D3FAEA6ECE52E4B3584DDBD03B345F3ABD2897BC9C6E095B807D458
D51B76C73173263805C120912C4A40F9E2F872A02C4087386CCDA558F5050025
A45A1049C9625FC6050E6B829B614BCA4AB1BEE9F392284E2BD1043E43EE8134
5E182C07AA0A48FA9399449616273B7D5CFC97271C11CF090CF5F36B3DA0FF93
246A390879AA6AA248B850A3DF9DDA78F22714FB9DE80D3833DEEC7848D7C0BF
826C4825CF63C13B40CE21656E37A0FCB6836AAAC07DAFC63145B05E3EFAC5D3
E3EB004A689C295DB72601D19A5487884D04B679187879EE3F15F166F1E2367E
46F3F3E4E67EFB8C82885D9D7F74EC35DCFDB9D794CDEF1A995E730BF1D7F063
A8419830FC907CDEC4ABDB741828D147C6450EBF5E7AC5FA295BA0A76FF7FF80
4898146B135BCC304C5A1C35ED8D6BB55D3F5FCA77ECB3172F5432AE022F1580
43BEB6A6820566EAD71325D69BF3460E97C92CC31DC7139C3C3E760D058379C5
014882A7FB5165AFF0E95E988114B4AC5E6DCAAE568B7595A72DABE9FE776A7F
1428C5CC1E86F6821160698242C7566FBFF8DA17AA315E2E1C635618BBFEE940
CE89127BD552B9E753381828EFCB01B35A95D0E929461A4A0166B3AE0673BB53
1BB92A1356887584B94B00DABCEC84A5888BA907890E2ED2B94AC84E717DC761
2D6EC842A956F9884A40019536053E2BD0287A3C313E1F43F07D3DDDDE40C2AB
B4115710C6FB48E552AFB2C2BC452857FBFD3954795643DEA2FCEAFCB4B635CC
9D88D8EF06C084C8DEA328EB687FFD23BC99D34FCB2E6586DE317EE3BC34234A
EDFFB2CFB9113CC5A830B5C5D5ED73F2F7D159C45B12286875546A3537EC6DED
AF60D1723DF115C7FCDC57DBB593278232FAECB356174BFDE732B68F61B19CB6
C0D61EA8F1D7AE9BDD7E614BFFE78D628646C32C1D95C0DAD9F3530651DF4BB7
1BDB3DB5D7275AC8492ECF2B562A20068380A59B6F6E4940DFA3D1002523E04B
E24E0A032DBE31CBA82CBC29FEDEE39359C351BA8960636ADF062E957855C4E8
28D61D7937837DF89B62C6E21AB81DFA802A39C5FD642AD61CD0776567E48DD8
D9094FDBA1613FA279A4DA14E2A8D7197B0F7D204DE6A601E8C160B0436B0D03
235AF50043582A0BB588897DA22D5C20F8A2C7CDAFD6BEC1CCD81D28BEDE22CD
263C60160BEC9FA8BAB9A55EF96A710C206B78D6B9EB6AC39B6BD772E8E2779E
6A5588EDF2D3BC8D252111E8DB45FF21B84D20BF831051B61AE37BD4586C793B
4E7904D23627E2FA765DA5E53D4B81EC83D03F502E7DBF202BA558B4EB271C57
922DAE1F23415C912EF1F70CC3895F4598A5BB79E23DDA590FF50155377D02C0
0E0F07C97277B173AD9F901D26B25E87B1A441900C9DFCC0F7FF114C014E1DA8
00226FF9AE5D98FFB02D8E94207DD4475611B45D1F1026A613D0D2FBCF4D729D
7E131335C212B30BA91220BFB289D605B6A8319FAC5C83038807C1CF9869ABAC
639B076F9522A9188CEC6E67F64B36C58C36A88F60969A764BC3650E777F2254
B2B54A972B3583047D43D202EC047CC23B82BF62646A00758DF5D608B586C124
751DB340CCEC2DDC9D395448D09F8AE5C4472A15B636F7BCECEA17F062BE3DF6
FE6F19A849D53640C5E597BE394D55A8FAFF09FF9AFF3CE6F97C2B2459661177
AF96749D92671386A21A1746A71DD2DFD10FAB2CD911298790A1A918750549B2
0CCB32D2B7C11EF06056690527A4EBD1F1355C3BD6CFCF9E20C9F30363291678
A7D920F128855CDD17E51BDD71449A9B7E90D35410E9FC9BF1625A2C942739DE
B8C2E5E9E7530208D2A856AF05D418450827DDE99E776709346F4855121FEEDC
70965D0185F5E174F0758420612059AA4DC1FB491ACDD3A0CE09DF3D2AA01AFC
9DDFC009015756101446BA8DF32E30062BC9CD9533DB03DDFF8F03465B6DC1B2
450D42BD399CD6885317C80CB800A292BECE4041CEBA92D692FDB946D81E88F2
A0BFD5C81EC5A93CCFD1FF296038CBA5719C17A44F9B5F4E39D600BC97E27C97
0DB371D59A05EE148F4BF935435AAD1748882D199B9B7DF58324AE6E3B639DDE
323A6EEAFEA964B4A6DA929B90EEFB3B1EF3AACA3FCEE17C7835239CD823B382
FDD02424F0BB509687B0C6958967CF82C547CE1F1BA09D861C5D5F0BC58BC526
CBED223A031BB54AC9602270528785F331E02AA401E30A909608E8C4C56CA2EF
0B672289353980885FE5EF054D5AE538348F53736896BD7508ADAA2EF193AD1E
8F143823BA37E501B80227A9008E0DD8F572D884436E862A02B218564179C9C0
23B7F92E948EF4BA6C72E63D1DCD11964CA636168CD464420EA747724E5E7D7F
020BDE094D7C51D1278A614DBAD1D8A12F43EC67BAB7373D6BAB4F201EB91D7C
99C1349786D17C13D70004F43BC14DC87F654239C8074700361D4B61C441932D
CEE3AC33B952FDC3C3B9D477F6D1981B59B4F70B33D7B638D4FD147E22731F43
647559A90A7B4F21F4026AADC7808CCC49BDEABC4DD658E02AC0769E0426C313
F48E11B936CA8122B2B8DF640A796F4BE98DC43EB2D354D39C27111B7A9FCCEE
111F30567D294DBAF36C8A89B0D6A120A582344B4E77724339F27031CB75D9A8
D026BF41741F384965825276E2B0FE907671EF8B6F2C8648D63D975FBB6DB545
6BE27ECA9C560DEDAA4418F741BE6E4FA13DEAC6C4F0FCB8C870433333766A88
FE23E05C921096AA97DC56CB17517DF95D8D5E51D994BACE39AC902E2000C12B
3D31DE5E0367B7006F757508FCB5D653DAD14A83E2315D23CBC84FAEC848311A
E8163E5C84BF9A609509DAEFE1C3C16145C2EC24E3221E75291BF9E827F48759
855891196215534604DC2653B9108A90C99438F4581F17B6AD83AFF5DC5A2FD9
3BED414FD9C32FA545510AEC7D7CEFCAAC59A93214150E094DC78A584CF1F59E
6E13E74C5CFBB828DA384BA1943518C5D0FBE0776EA17C52C3D0452031549764
58922AED09E56CC6D3BF92770A027E6F9C6592605A206046CDABD9D54EA413DE
4E7EFBA58BDCD0B2E9F6600943B0A5587553DA49D92EF4318E28998E07D1D372
48BB4F3D06424B5EDC5A9B21DBDC65B6C8DA146FACEE8E49B98AC5CBE49D8456
87BB12CD0913F48FC834675E0F271FB9A33DB9F2D4862713623BF1092EA9A097
ADB7C0ECDD63B978644B8117193C4861035074D7D66B05CAFBFC59BCDA8D7AF0
6EF6B060A0EC53E187893C462730C14CAF93E7AE5638CD88A43C54F3095D6F11
5BD772CC4C3ED8EABFF2230567998B58154582EA334C8BB3B65AFFBD62E1EBC6
3C182EFEB487A03399B23134DA7AC5BD0F503D3ABE63C3D4530E353E5270D5FB
1C45224799C0B710586D3E3DDF28A5864D566F5C53255C9BC3EC91BA2BFA6730
6C1B77709912482BB9F187F1279FF1C6109ED956CFFEDB3AE7F3478503EE68E6
0D873979980A6D4BD4128A5158B9B36B65F5F83E66C2C8397D23A1DAFFE71586
198A4597046B0703EB144DED5218D1FFA5F4099812BCA61A501D21F6A8A812C1
CC027C7FEA0A1B3AF89372E08DFDD9F79AC2200622A13BA8321863578E15C7B5
9E6BDE2866332FCA9EC2E13B4460236900BA62BEC0438675C93BFB1714F93EEB
462770CE65BADB6959B750A71144AF1DCC06D9452602C6756C587166AE35A578
F0E3442BF983B90CDB16C5317E493B43F8D11EC87D3070964D4C686B65B808CF
CC21F32777A4165FCE5AAED1C763C7F5CE594CD93A26BD00C7DEB59D63753FAB
6F4BF4D7B35D01E3A198153B3549111370EB71799DADD1A6BE6D49998860482B
626C628499DF73338950F885151F0383F5188E09A9E1B8C023F7E27955B42E11
9AF4464083CD0B55B8BCCACC8D0360FFEE1824EC7F9E54E92E75E48291ABB565
C1F8644CD5D9F01A26BB879BD6062EF555AE24118F105F6770EEF2A57E3DEC53
3791CF0EAE32CD4DDBAEE2F40653E139692FAF964B9CA0BA5B54BC20ED3F9090
5703ECD2964718CE9B2A4EED730C4363D4761D025AD3FBF0D53A5374BFEF17D0
27F432B3E0AEC8A58B690AD1613D52526FCE3942BFDE611E4CFF66EC4AA486E1
88596008303B55B96499A11672380CD95B44F2A9B05C38909548AF14EAE3ACD0
9B51507B3D3CC39B7994AA043E4E44E7AD3ADC6C73336EEC461C81B8128C629E
F0E86EA18E1315BBE974AEA2DC5B35092957CD9F412B6520E48EC59AA2507B49
00AF3112637E5B60AE1CECE81C816F2426D24C595818B41216FCE5B3E61FC4ED
B48D99497A134DB1219CED437D0A2DA2EDED2A0B6E30A17EE78F5D095C49F828
D3CF9ABC2827A00AEC209962BD3406653A98653F419EAFBB18DF86BE789911C3
3E05D53C5F042E512B2E4AF08B012316E752486FD5CA9E865D7C3B977284E5F8
4B725038AAC6952E417835F42C463C6F1E62512F86E3D9709E693D04ABE2A2ED
A73E7835CD2CC6032BEC0A209FEA7339FA1C3DBA60758C37907319AA5E3423F9
BC866B6FBB910B766B0D3F90E93ACD646C1B9E0113A1C09295667F372F2176DB
8BB9CC0E8A5A052F4D53D6124E3F3267EDBDAE35B3385F8B4958813842795F46
3A942A211DDF7F5179A1F26394EE81797F629FA6B66BFC686A71E401C3D7EFA3
F6906B3D8C355AC254508F6207BA17A89280FE34639833E29C1EE7A88A2A8F73
013AD9CCB7B21C8C516D79AF9D3324976DFB257839F80773833BE29590B7EBBA
A4E3CAAAFF37BF3CF3B287B7836368903A8BDE9A3F340F55B5D301BA87EED52A
6916DE024CAF6669085A3618E4F19060455971B05B84B2E8A8A3BE438BB17572
42BE47C2EF1682A05ACB1435C456501A6BB2E325B32A178A1E5DB965018AAB7C
7884EB7CB4542043A31C6F8B4D4D32F2F7C002945F2928A218DA7B66FC13D706
C4D7F6CB65990B7D718F6A16F933DDDC891E9C6987D0EF50FC3859C0CCD704BF
425C64379E8F07D1B4F53F6F860FDB2BA4B97A09D1EEA744BCB83950B3B55DE4
5D887C483E103C1EF48ECA5CBEAEF0E30C9C97E095CC82B1865ED0E8FB1BC460
59CBF4CB7E81A0E37F669BEB740F13AADB74F675BC0693A324D5BD4C1ADC0DAE
9A91044DD214031FE8339581A9798BC43DB300B5113FB87655EC865C3BEAD9DE
F9F2F8521C2910464AB9A96FB08FD0F3114A13C2A8CBBE519A8F57C66E29E1CC
E364DA954F895436AD8E34AB6B32B5003F5D18F039A152A5C611A52AE12A4658
8DF13131F9DB8437558804DA9BEAA7E70B4C0C5CB3807EFABFDCF9F836D142BA
9DC9FBC9D6E6646AABBAA96BF229A004245E590EE6A9EDE3CEA40FD502ACBB13
9DABD34575DD1D97765E4F69C06E0E7854CB47132679FBABF1DF31D16F8FA295
CEEBD5539B635B544499D40AA6D343664B19774783F390D93E1A3971EC0CC9D3
D768CCAA5872307AB505D02D5C2644779E66C691DCCE64B3218933452A24FB1A
8C30FD6512D2EDCC7996CA18CEC5780844BAF1DE96AFFAA9A7FA81BC79FDEB57
0EC16360B75E6D18B57ED29D3BA29C7E6C7A2B0D86B7025004216CD9C9B0D14E
85D92DFE733657BA7C2104003CE178CCD75A3B1E3AC1950186E0DB76B4D664B3
9CB56007BF7CC083749CEB41151AC74059F3693861AC442CC827F809441FDCFF
973600F469746BE07335FA4632A25690B759A4BF191894977F894820E9BC22AD
9CF62C6CC4B4DC0B6EF3F945B1D97853B113E3D9AFCC98AA7117C2D597A3684F
43A22990EE76A4C6D50727B83A75006A44513AAB8A076F4A6739934FC130D357
20A37E511A043B25D4477B713B015A306F1EEFB6694C1311F0F4FF29D43DE342
018E67F6B116ECD19D0A6D59F2EB2C994C0DB80E2A3617825070AAADF3FC7112
1DF965136E5D846F2E9EC0646B0DD0094704C02E2FB6C5A1FDFDDA92FFFCF7B2
D6744C0F0A489FCA954A0C135B844618DD087768EC44A893A7EECB6D95C35BB8
7DA2B4A6F86A443A7BCFF3C4EADC91E9061F9EB6F8C21A2581078CF91CA4EF83
2E7D6DF3E9E03BCCEAD202AABA714EEFEEEB173B2F166FDA22E38A447F7408BD
9DC974B521AAF7B7EBD718248AA3FA53B85D3EE6DF698FAC50F415ECABF34840
1F4EAEA57B8955BA7DC58262E52A30CC96D2271A985F7377BEAA49275B5E62BC
871BCFAE9AB64225827FB951E69F5F24D03D05ED34391BF881DDFE353EDA9F08
8274216CBAB096E8804492D23773D92B41C75BAF27BAA2AD4F426E594CB35E31
2710D48AD36C39363EDA6BB45BAA486A85DBC2F45566226D9EA08B48360A2F4F
181909ABFC4713C309364EC9F6EA00BCA686611609FAA32E9099E2E8FD5A0CE5
50FF5EA6D00E3564015D09906F94563D4CCE02F844A9C839DFD377F7F4332FBA
5C0D3077FBBABD436AD86BDB2B16400416A7048A811626E0CA3AD54070C80AF8
2DC8CCC76C007B90466167D1AB710ABBE19B2C7C3BD37B2B6300A083E7D1A125
07FB48161F0D293A0032D6CF19AD21811FD0A4E11C873E88DFFDF2E3E5E7B769
96E1D85CB9B62BDE07EE8346E30F68FB69331E39FE966AC1214E4DA30F2D2AC5
15EEAC8E075520156C2CFFD8EA20EA384D74D11F9273358E7F80EE28813D66FA
AD8EF6D6DD77674A3480CBFA62794496BF3FE420F08D2A07B4F53B9FAD619964
4165A2747A198D86A78F708DC404283546D7814BA53FE7FA161FF626461E96BA
77319C3433A852EB0B3E5A1B0528FA9F8BCF9EB55B4E443CE79BEBA97AE481AD
4AB1DC86D8BDB89DADA06B87EE6B063A416ACB9550790198029F2205E51C059D
CE4E6EF6E89AD62D53F8A4BAC182999D231A2F0B3E70AAC7E2D3226CB034D1F2
61A00C76FAA4EB347390DD0833B3283B75010E5542A389EA2F787A4693E25492
1B8C3FA4F9F7EEE92BA769DC7E4C5AB3F50FE19F3A3904ED7C5543D23196B59C
4A11C5BEEEABF1FCA0E3E26DB60D88639B27CCDD74EADDD86CF9DF579B3D7234
9C643723C189EC1FB27501361CDAFC3655A9221EECD425FF9CDE81DB6A122A70
DED859911B0A0804598D0E3C90E3AE0FA61274A5062BB1CDB5AC5FEED5FB69E2
AACCC8CBB70698E0BC5560F2A9F926A5855D4401FB1F62CD6C9CA9EC7948776D
0EB6C3A88D10A1DEF8E194E095090958F9C7079255FE5C958B33971B67D73610
817762EFA48C13C3C2AE1C9E87321EFBBE2BFBE55769AAD700ED6BD5A013FC3C
7CD3F340209A802E7A1D33B7842B4B07436844D9F59948C99E8772503511D86A
08E1612EF010DCD9299ACEA7D4AA01770D98660F8D9620B7508B898B740631E3
60AA6DBA1E54991EC7922725600CA64C693341F7D4011AAE2D2BB797DBC6191F
8081CA1B6042715B72B4368D643CB7D82BA474B175215A540A6422D802CE1EE6
302C0AC1C7CA421B81B6DDFEA56902F018B08F868E7D5604DED821AE4C939B52
67804B0409836B6968F3F1C3B79341CD06E983A7CE9009A72B6EC01E7C007289
A702EE7999C2A97A199035EAB7BD49EEFBEB68157F979DC0DF7EE8E51C4BF6C7
0BC794C6BBE8A2AF2597F453C076341D757B09A3E3EC6954EC35AF45D1636BD9
3E154262B37BD16AF15612ED9AC48BF60CFF85EB4DDDFCBA1A6971678EA3492A
1641851FF8280D2C1BDD3B7599C24795854136B0ED501CEA8E19CBBF7C91D74B
FC107FB82A56592F27FC27F1D49D5FF4BBC0E1623180793E351159C5FAB5960A
2E3E913CC7EF0A07843E37CFC4DFCE94A4355AA673AA61555EE91D01EFAB45F6
927C79A86111E0D53472C70FC6A1EFB0C052CD7679FFFF591DD50D28C0A71C14
99CEF50F2E8C9742C8432AAAB19E4B6CCA656C805A230721E51750128367A0AA
72945C9494ABA8C58F6CA8228F29E7E73BC9CA5E20B1B2C5ACB701BB9F706F97
54F6798BA7B8225E8763679D012D9FB775AB1FA128C91C36EEE43CB41592BD13
837B9EC9735991A7EE6A4F6A047A230D44CE6210E275C4AAC7931329F71A25ED
5DE92278F31B2E573FD86696D98800443F32C94E2FE3839477F4ABB1565BF009
732AFFDD2FF708C1A3F3FA5CBEC411EEBD07899B755DAC1126CE5CF71C5BCE24
EA5CD771D0452943086457A0A9E830C0658485CA66A65554C5AEFF1640292FCB
CD73A9F93A2AD55F57D78667B38E110795251CEBE01D7F81D61317763D0C226C
1DF759FBA35B5D9288B8F54F0FB93B7AF74423F534302F11F0F9E782EAE32417
8B35316D55536783294509A4B1C135211F81404A39FDB273B64ED685BB2F05E6
532BB97E36C76B0EB28FD20AF1751A73E37D5200F5A884569DFAECD2F7F6618C
375D1EC39D0B866481D723779B37801F9AF7ACD4DC86B73EBA2F8F54CDC503FE
67ADDA409A239E153D16C17CD2F83B971005CA4FBAC0E247CC0DDDF00B36554C
29EDD3DE5931CC93B4859A21AFADEEDBAEAB31D735233093AAFA54FFA50A3C77
5B46790D67CC0BC63B05BD4B9621A6A1E57DFCE7C5DFEAEDFD98057DDC351E46
4C6B20242E8CD67888F92E655BA87F5EB2D259FCC4A764B4913744BB8C222DBC
80B3A27C2B2E9819048E9AFF58CA2C6701C4D3E39979022FEFF095DA482A48EA
00E71C0A4414DA781D49720DC88187A0F82B0BEE953525372CF172D46B6B9441
2E7CF8B2C54489E6D6A8959D3F244D8AE9FFF3F592BB136F41F11AFA8CC986D7
951B792DFF270E096FDD8292CA3859740F191992BADF5C684F561B4413C38DA7
401609733F47D9990B238122A8AF3AEE16B83E7A2DDB24B704DA1014F052E527
C49A2C9C840C2B0A3844C5C96C3FBDFD4730D55851D0844A43E24A5C47C34D83
5DB493AECF6389494276FDA492539AF25757A47A53B42F29771497E9F5AF68E2
540408A71377ED4273E07B8DF4BA5D60BD978A4104ED1ED365E7464A6E912124
84F66764A0D815C7E354B73B808F50AA314EA21AE73286559F73B1DFBC1D26B5
445FF5374BFD8E2D97B32CDAFA0C2270679A62DD349CB6F6A20E796E7203FE97
E71B0E19D074858D2BB30FEDEF6C34FAC4077DCA11296D37D0B3F10D8795B37F
4231A18A53FFE7F6E40840193197DD6640CAA6F371095A260DE5DC01B8DEA95E
C206AEAF56159B724B67EB2937B57178972ACEE54C5F8EA613685F38BD1613D4
5D37DBE273EBD4D52570D68DAC80F6AF3A9121D8EF4BCFCC80EC71F78908BDA2
269DE03FE1F01FCCC7F5399762D1BC994E94B6179B1A7FBAD1D309EA3B41E58B
2A7BBEF0F174BA9AD649486C799E667065BA09725BE6418C64C62DF43E87AD00
D2E826F97162E51BF95F2A67090FAF972407EBE347570AD63AF6A82E984B2496
11BEAEE180A4A48200CA7C3761CB4143C5E8B2EC957EA523BD60F37EE2857AFE
C47E25004E55C593424A1C0FC24255111255AFE2F18C1272626A0CE41B25CE1D
16865F3C7ACFF6ED4EA6DFDA17340E96A8E6CDB2F0D6755D8F7F5A6F1A68BB97
4C12EE5E31D9C5563A0A5557C1E0913B055F591F8F2E8A74B365795F7276E374
1C8EFD42A1792CE5A2B6C325C39CD88E4B559CC695F7D2F96BB74F5E3F01C4FD
8DDC8DEB238A2554A0963350F1E3F16FDEAE6A34ECDDB9C87ADD12BBA280B558
73F38C194C67DE0043104AF5E61366D0E9E9307B6301BEDBA4107593EDBBEFF3
B140B7CF51BD51B099045C8CBEEDD6C586F5C0FC8BCC3D355A4F3C7BB8FF0113
F134EC89F518E225C5ECBBBFCB7D5E1BDCF7DF04DF478C8AA46788DD87665BF1
43F03485E11FFE1F67FB6D16AB556EFAE54A5D3FD3AB69E247AC2F1758689851
A9537A6DAF49D0A85D7764EBB31166A29307F6343DCA5AE980983A41DF300A7B
3E985855FE521816004F7653175F8C470FD1FEED1FCD70B4A6855E2109A878CE
4621251A2CB584650B079CF9D096F0A14DD3A276916C2B7511F9848EC764A5EB
0BB4F2C8AE029BD1172B430088B5786E7D6C82680B06372211F15B3ED7370585
1BBD2AD9D78C6781F2932122CC04FEC35A0023F82192384592AD70FFB73ACEF1
2D16BCB3BE5B4EB51671AE9357176D5AC145011B77175FF02C58724CDB27DBC1
BEF92517B2A7265C3E602A8308B3CE320C7448E0C50541DFB3E5E98186970705
425583BE8D6250D70C0DDA781474A6E41A25F0C95B7B1B6DA4D7D31A9F6BE6F1
46D4A9DC78F419FAB7C9E2F027B9183336B45E338CBD396A3D7C0CCFFE26F87E
3AD1D4239B902891AAD7B57F2597B0570F6ACE63F4CD6CCF332771B58DFBBF60
7B969FE66E1FC555E83C6C86C010E5250BF9754AA7C5A07A5FA1B81349CF00E4
546ECF6CA4AA10D95E252D6475E36DB2A4461B3384EB9847E836B14D85F4AD8F
8A00E390D5F674E19ED86F205FA763D8FF942D8B488177A8C8F976CF1665CE82
2B4A6E09BCF9EFA9070614291B2B0E1276E86866650B00DCAF38B80F8C4872C5
A1A252445F61A49B5AC2746B7D099884D8021E9C8349EAE8AD6EB72B6B3497E2
4D8740D062C120BA087F61117F95536BA202392A840C03215E11765AACE17613
FB790982426BC1D4BE99E145B2D2EDDFAAE8997018DB164FF9257055F91B3581
4D90ACB1E3A4D69168E55656BC6FB799B95D5889EF9BAB214F051179E2EF5B40
210461A17DF138F374C1B265FD4D65092AFC970854436B8D5B512083C90B476B
73608413B83693B2E331EDF447D57414E52451C9E15AF8B79C03B5A165007236
EF014B547DB1113DFD7CFB19D059D34F9571BB8721A1B143F5DDC930ECE952D3
17A217BB46D660A5971B8B0488FF7B789D5597FE88BC0DEC2F16E6D8257DAD5B
E7A0300D34614549F7AD03D9D1C3CE7A4BE86E4A67B1D8D0BF702F517829D4A4
450EC385936F5D85031896D58E534234ED7E3C96AC75FC0B744A6574A0709BB1
DBA2AA29249BAED5FACEA56CBE6C2B3E31CA0860493707D07DC62F7707A6A3ED
98A7DB137EEF6F9B969FECD3B149C00CA28E9D7F6C6FB36D145C1FF6833D0F19
14865E009C6F55EDFD5801AF83E86C7CE9A38EB349AD42715D6B2D9764F28113
06D168A9E62FD42FBBA19FD5E9DD82F35C7BC4FE5A46D635A608592B774EC212
035244710BF5710BF0ADEFA17B56E2DCE6910787BAE7B4E55A023CACF650F8D1
21B14F3B8501FA7619F5EF57C5EB4AE4534C72B64FC10BA7B7F89D9D507BB697
F2675E801C13A3EA2142D8189FAAD93C0D3E5B44F34397C16353A36D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 31870399 16970000 1000 600 600
(media/cache/mscLiterature-figure10.dvi)
@start /Fa 134[45 52 51[75 65 69 68 65[{ enclmmathit ReEncodeFont }6
90.9091 /LMMathItalic10-Regular rf /Fb 200[45 45 45 45
45 45 45 45 48[{ enclmrm ReEncodeFont }8 90.9091 /LMRoman10-Regular
rf /Fc 255[71{ enclmmathsy ReEncodeFont }1 90.9091
/LMMathSymbols10-Regular rf /Fd 134[42 4[33 35 31 2[45
47 72 22 5[28 40 47 2[44 13[51 14[66 58 67[{ enclmec ReEncodeFont }15
90.9091 /LMSans10-Regular rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 24 1
TeXDict begin 24 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title (Literature Survey: Finance in the Frequency Domain)/Subject
(Lorem ipsum dolor sit amet)/Creator (LaTeX with hyperref)/Author (E. B. Legrand)/Keywords
(thesis, msc, subject) /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 1 0 0
TeXcolorrgb 67 -8 a
SDict begin H.S end
 67 -8 a 67 -8 a
SDict begin H.R end
 67 -8 a 67 -8 a
SDict begin [/View [/XYZ H.V]/Dest (page.24) cvn /DEST pdfmark end
 67
-8 a Black 1 TeXcolorgray 1237 6416 5098 748 v Black
1 0 0 0 TeXcolorcmyk 1237 6416 5098 316 v Black 0 TeXcolorgray
1237 5673 5098 9 v Black 1 TeXcolorgray 1237 6304 V Black
1902 6059 a @beginspecial 8 @llx 25 @lly 155 @urx 68
@ury 1470 @rwi @setspecial
%%BeginDocument: STYLESTUFF/TU_LOGO.eps
%%Title: TU_d_line.eps
%%Creator: Adobe Illustrator(R) 11
%%AI8_CreatorVersion: 11.0.0
%AI9_PrintingDataBegin
%%For: Marc Vleugels
%%CreationDate: 02-05-2008
%%BoundingBox: 8 25 155 68
%%HiResBoundingBox: 8 25 155.6373 68.5352
%%CropBox: 8 25 155.6373 68.5352
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)
%%+ procset Adobe_CoolType_Core (2.23 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_ContainsXMP: MainFirst
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 68 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/agm_sethalftone
{ 
	dup
	begin
		/_Data load
		/Thresholds xdf
	end
	level3 
	{ sethalftone }{
		dup /HalftoneType get 3 eq {
			sethalftone
		} {pop} ifelse
	}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ imageDict begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height { 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 
	dup type /dicttype eq
		{
			AGMCORE_tmp
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			AGMCORE_tmp exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	AGMCORE_tmp 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		/CSD known
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 216 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_gradientcache 32 dict def
/AGMCORE_in_pattern false def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/add_grad
{
	AGMCORE_gradientcache 3 1 roll put
}bdf
/exec_grad
{
	AGMCORE_gradientcache exch get exec
}bdf
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&usrshfill /shfill load def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not currentpagedevice/OverrideSeparations known and
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		/AGMCORE_IsSeparationAProcessColor
			{
			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				gsave
				false setoverprint
				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
				currentgray 0 eq 
				grestore
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				clonedict
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					currentdict end
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 xpt
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 xpt
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/currentpagedevice currentpagedevice def
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
ColorSpaceFamily /Separation eq
	{
	sep
	}
	{
	ColorSpaceFamily /DeviceN eq
		{
		devn
		}
		{
		setcolor
		}ifelse
	}ifelse
} bind def
/sssetbackground { aload pop setcolor } bind def
/RadialShade {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bind def
/GenStrips {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bind def
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		6 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get 0 get null eq {
					dup /Names get names_index get /name xdf
					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
					or or or not {
						/AliasedColorants false def
						exit
					} if
				} if
			} for
			AliasedColorants {
				dup begin
				/Names new_names def
				/AliasedColorants true def
				/LookupTables new_LookupTables def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				currentdict /NComponents known not {
					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			Names {
				AvoidAliasedColorants {
					/currentspotalias current_spot_alias def
					false set_spot_alias
				} if
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				AvoidAliasedColorants {
					currentspotalias set_spot_alias
				} if
				/names_index names_index 1 add def
			} forall
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				/setcolor ldf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSD known {
			CSD get_csd /Names known {
				CSD get_csd begin
				currentdict devncs
				AGMCORE_host_sep{
					4 dict begin
					/devnCompCnt Names length def
					/NewLookup HiVal 1 add string def
					0 1 HiVal {
						/tableIndex xdf
						Lookup dup type /stringtype eq {
							devnCompCnt tableIndex map_index
						}{
							exec
						} ifelse
						setdevicencolor
						currentgray
						tableIndex exch
						HiVal mul cvi 
						NewLookup 3 1 roll put
					} for
					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
					end
				}{
					level3
					{
					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
					[/Indexed MappedCSA HiVal
						[
						Lookup dup type /stringtype eq
							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
						]cvx
					]setcolorspace_opt
					}ifelse
				} ifelse
				end
			}{
			} ifelse
			set_crd
		}
		{
			/MappedCSA CSA map_csa def
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {
			begin
			CSD get_csd begin
			map_indexed_devn
			devn
			end
			end
		}{
			AGMCORE_gget/Lookup get 4 3 -1 roll map_index
			pop setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {
			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		1 dict begin
		/name xdf
		AGMCORE_CSA_cache
		{
			0 get name eq {
				exit
			}{
				pop
			} ifelse
		}forall
		end
		end
	}{
		pop
	} ifelse
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
		dup wrap_paintproc
	}if
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	  begin
		/OldPaintProc /PaintProc load def
		/PaintProc
		{
		  mark exch
		  dup /OldPaintProc get stopped
		  {closefile restore end} if
		  cleartomark
		}  def
	  end
  } {pop} ifelse
} def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		dup /customcolor_tint exch AGMCORE_gput
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.23 0
%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.23 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.23 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel
		2 copy known not
			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 2 sub 1 index lt
				{ pop count 1 sub }
			if
			dup /argCount exch def
			dup 0 gt
				{
				exch 1 index 2 add 1 roll
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count 1 sub /restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup begin
		mark
			{
				(*) { pop stop } 128 string /Category
			resourceforall
			}
		stopped
		cleartomark
		currentdict eq dup
			{ end }
		if
		not
		}
		{ false }
	ifelse
	def
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
	userdict /Adobe_CoolType_Data 10 dict dup
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end put
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	currentcolorspace 0 get dup /DeviceCMYK eq {
		pop 4
	}
	{
		/DeviceRGB eq {
			pop 3
		}{
			1
		} ifelse
	} ifelse
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/srcDataStrs xdf
	/dstDataStr xdf
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/samplesNeedDecoding
		0 0 1 origDecode length 1 sub {
			origDecode exch get add
		} for
		origDecode length 2 div div
		dup 1 eq {
			/decodeDivisor 2 origBitsPerComponent exp 1 sub def
		} if
		2 origBitsPerComponent exp 1 sub ne
	def
	[
		0 1 dsCnt 1 sub [
			currentdict /origMultipleDataSources get {
				dup currentdict /origDataSource get exch get dup type
			}{
				currentdict /origDataSource get dup type
			} ifelse
			dup /filetype eq {
				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx
			}{
				/stringtype ne {
					/exec cvx
				} if
				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx
			} ifelse
		] cvx /for cvx
		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [
			0 1 Width 1 sub [
				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx
				currentdict /origMultipleDataSources get {
					0 1 dsCnt 1 sub [
						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx
						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs
								BitsPerComponent /decode_image_sample load /exec cvx
							} ifelse
						} if
					] cvx /for cvx
				}{
					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx
					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx		
					currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 
					[
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx
								BitsPerComponent /decode_image_sample load /exec cvx
								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx
							} ifelse
						} if
					] cvx /forall cvx
				} ifelse
				currentdict /convProc get /exec cvx
				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [
					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx
					currentdict /convProc get /filter_indexed_devn load ne {
						255 /mul cvx /cvi cvx 
					} if
					/put cvx 
				] cvx /for cvx
			] cvx /for cvx
			currentdict /dstDataStr get
		] cvx /if cvx
	] cvx bind
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	2 dict begin
	dup dup
	/dstDataStr exch /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						dstDataStr srcDataStrs devn_alt_datasource /exec cvx
						] cvx 0 () /SubFileDecode filter def
					/MultipleDataSources false def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA map_csa 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							[
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							dstDataStr srcDataStrs devn_alt_datasource /exec cvx
							] cvx
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource [
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								dstDataStr srcDataStrs devn_alt_datasource /exec cvx
								] cvx 0 () /SubFileDecode filter def
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get map_csa
				}{
					/CSD get get_csd /Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
					CSD get_csd begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: TU_d_line_M2#rgb.eps 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2008-05-01T09:44:39Z</xap:CreateDate>
  <xap:ModifyDate>2008-05-02T13:49:22Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>256</xapGImg:width>
     <xapGImg:height>120</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAeAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;VNbiB5ngWRWmiCtLEGBZQ9eJZeo5cTTFVTFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq0SFBJNANyT0AxV5P51/5yd/KfytNJafpB9Zv4qh7bS1WdVYdm&#xA;mZkh69aOSPDFWDaR/wA5A/mt+Z2oSaR+WvluDSoFot1r2oObhLZW6OaKkSv4JSQnw8FXtH5e+RV8&#xA;paXPHcajPrOtajL9a1jWLo1kuJ+IXZakRxoo4og6DFWVYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq0SAKnYDqcVfFv5zfnN5x/M7zXJ5I8jrPJoRla2it7&#xA;Ovq6gymjySsD/cbVUGi8fib/ACVXjHm7RLTQtYfR4bpby6sVEWpXETBoDdgkypC1BySOoj5ftMpI&#xA;+EjFX1/5O/O78k/JX5aaNY6BP9avjbwhNDtInN7PfSKBIJiVCh2k+0zGn8tRxGKveY2do1Z14OQC&#xA;yVrQ03FR1piq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FWPfmI95H+X/maSxr9dTSb5rWnX1RbOUpT/KpirBfyC/KjRPK/5a2c8K8Ne8w2CXGo6olPXQXU&#xA;YdIon/ZWIMNhsWHLFXgH5hf847ab+WnkzVvMHmLWo9TvpmWy8v2UKNEHmlfeWUsxJMcId+I2qNyc&#xA;VTL/AJxS/JW61fWoPPmtwFNG01+ejxSAj6zdIaCUV/3XC24Pd6fynFX2RirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqX+YdbtdB0DU9cvEkktNKtJ724SEA&#xA;yNHbxtK4QMVUsVXapHzxV4c3/Oaf5VMpVtJ1xlYUZTb2ZBB7H/SsVU7P/nMr8o7O0gs7XRtbhtba&#xA;NYYIVt7QKkcahVUf6X0AFMVee67+cf5E+aPNMfmHzjB5o1/6sT+j9InisItPt0LcgqwxXCs/Qci7&#xA;nl+1UUGKvo/yv+aXlbVvy4i85aZZ3VtoUf7iGzaKGOZFjmFsFWNJGjChulH6fdl2nwHLMQHMuNrN&#xA;VHT4zkldR7vM07Rvzd8t6vqltpttbXiT3T+nG0iRBATvuVlY/hmdm7Jy44GRMaHv/U6vTe0ODNkE&#xA;Iidy7wP1s4zVu9Yd5j/NLy/5f1aXS7y3u5LiIKzNCkbJR1DChaRD0Phmx0/ZmTLDjiY18f1Ol1nb&#xA;uHT5DjkJEjur9ab+VPNeneZtOkv7COaKGKZoGWdVVuSqrkgIzilHHfMfVaWWCXDKrq9nM0GvhqoG&#xA;cAQAa3+Hme9hP5of85C+S/y41+30PXLLUrm7ubRL1HsooHjEbySRAEyzwty5Qnt4b5jOcxAf85qf&#xA;lWSAdL1wA9zb2lB911irO/In5+flh52u0sNI1T0dUk/u9PvENvM/snKsbn2RicVeiYq7FXYqg9Z1&#xA;S30nSL7VblXe30+3lupkjALlIUMjBQSorRdqkYqxP8rPzd8t/mVp99faFbXltFp8qwTLfJFGxZ15&#xA;Ar6UswpTxIxVEfmZ+aflX8utFj1TX5JGNw5jsrO3UPPO6irBASqgKPtMxAHzIxViH5T/APOSPl/8&#xA;xvMsmgWWkXdhcpbvdLLM8boUjZVIPE1B+MdsVev4q7FUi8yeav0LdafZw6Veave6k0q29tYm1VgI&#xA;E5uzNdz2sYFD/NXFVun+ePLd3p4vZ7tdMAuGspbfUStrLHdJ9qBlkIHOhBHEkMCCCQa4qhb/APMf&#xA;y1Y6kmnXMjR3L3M1swYxKEW3hE8tw5Z1pEAQtftFtgpxVPtJ1bTtX0221PTbhbqwvI1ltrhPssjC&#xA;oO9CPcHcdDiqLxV2KuxV2KuxV2KuxVLfMmiW+veXdU0O5keK31W0nsZpY6c1S5iaJmWoIqA21Rir&#xA;wf8A6El8g/8AV91X77b/AKpYq+PL2BYLyeBSSsUjopPUhWIxV9YeWP8AnDryPq/lrSdVn1rU45tQ&#xA;sre6ljQ2/FWmiWRgtYiaAttir0jUPIWm+Q/yUu/LWnXE11aWrq6TXHH1CZrxJDXgFXYt4ZsOyv8A&#xA;GI/H7i6ft/8AxOf+b/ugwD8vP+U20f8A5iB+o50naH9xL3PE9j/41j/rPpTOLfTnz5+b3/Kd3v8A&#xA;xjg/5NLnXdk/3A+P3vnXtD/jcvcPuZ9+Rv8AyiV3/wAx8n/JmHNT23/fD+r+kvQ+y/8Ai8v65+6L&#xA;wL/nK+KKb89/KsMyLJFJp9gkkbgMrK2oXIKsDsQRmnekfS5/Kb8rCKf4N0P/ALhtp/1TxV4D/wA5&#xA;If8AOPGg6LoMvnjyVB+jH01kfU9OgLemYy4UTwCpMbRsQWVfh477U3Vesf8AOOf5j3nnr8t7e81K&#xA;T1dY02VtP1GU9ZXjVWjlI8XjdeR7tXFWS+ePzU8g+RkjPmbV4rKaccoLUK807jpyEUSu/GopyIp7&#xA;4qx7yt/zkf8AlD5k1CPTrPWvq17OwSCG9iktw7E0AWRx6dT2BapxVlv5hf8AKAeZv+2Vff8AUM+K&#xA;vBv+cK7mC18mea7m4f04ILuOWVzUhUSAsx28AMVYN/zlP+YnkfzrrPlVtA1VNRs7Jbhb5o1lQRiV&#xA;4v8Afip1VD08MVfRvlf80vyVuLS8by5qNkttodm11dfV7aSIW9pHRWanpL8IqNlxV4L5o/Pa3vP+&#xA;cg9KvLbzTO35e2k1s7LG06Wu0A9UvCFVnpJX7Sn2xV9Q+T/PflPzjYzX3lrUU1K0t5fQmlRZECyc&#xA;Q3GkiofssMVUPNGk6/Preh6to8NrcPpZuvWt7u4ktgwuIggKvHBc9CN6rirA9f8Ayr83Xl5PrYFj&#xA;eatqv179IWRnMNtC13FaW8XCR7adpY0gsEWX92jOdxTpirI9K/Li6tZIRcNbTpCl1F6jc3cia1t4&#xA;EP7wMTRoGJq3fqd8VZB5E0zUtK8m6NpepQQ219YWkVrcR20hliLQr6fNXKRE8+PP7O1ab9cVT7FX&#xA;Yq7FXYq7FXYq7FXYq7FX5bat/wAdW8/4zyf8TOKv0p/L3/lAPLP/AGyrH/qGTFUD+bH/ACgGq/8A&#xA;PD/qJjzYdlf4xH4/cXT9v/4nP/N/3QeM/l5/ym2j/wDMQP1HOk7Q/uJe54nsf/Gsf9Z9KZxb6c+f&#xA;Pze/5Tu9/wCMcH/Jpc67sn+4Hx+9869of8bl7h9zPvyN/wCUSu/+Y+T/AJMw5qe2/wC+H9X9Jeh9&#xA;l/8AF5f1z90Xgv8AzlT/AOT98o/8wOnf91G4zTvSPr/FWMfmgts35a+a1uqfV/0Pf+rX+X6s++Kv&#xA;A/8AnCq8W08t+c7qdmFrbSW0zeACRTM5Fdq0UYqwn8oNS8g+dfzI8w+d/wA1NSsoyrpJp+najKqw&#xA;yPMz8QEc/HHbRxqgU7bivTFWXf8AORFt+QWs+RrjUvKt9okPmfT3ie2j0x4IpLiNpFjlieOKgeiN&#xA;zBpUcdjSuKs6/K3zdf8Amf8A5xl1C61GUz31jpmpafPOxqzi3gcRlj15ekyVJ69e+KsY/wCcKIIZ&#xA;/J/mmCZBJDLeRJLGwqrK0BDAjwIxViX/ADlZ5K8o+XfMfk6DQtItNMhvPX+tR2sSxrJxlhA5hQK0&#xA;DHFX07p35X/l1pkV5Fp/lzT7WPUIGtb5IrdFE0DkFo5KD4lNOmKvlnzV5N8qW/8Azljp3lyDSbWL&#xA;QZJrNZNMWJRbsHtQzAx047tucVfXHl3yn5a8tWstroGmW2l20z+rLDaxrErPQLyIUDegAxVJfOGo&#xA;W2m+bfKV5fXC2lg017bPcSsEhEstsWiR3NFBb02416nbrirBl8z+aUtvM1/5a1K2Swi/TOsW000P&#xA;1qO4+pTRKqxuHT90/GRCyk9ivuqjrvz75g0mFntLeHhr1xd6fosaR/DHrL3NIPVK7skqSvI5PaI+&#xA;OKpFL+cPnaKTU0BtxcQxatwtpRbObf8ARrtHFI8UMxuBVkAkEqqpL/AQKVVV/N35i+Y9K8y6voF1&#xA;rFle2sdndRQ2a28EkjvHpL3TC6jEyTwlpAxUrE8RjopYMa4qm8PmzXtFk13UrnWo7yw0nUrGbUdK&#xA;MSB7bSLmyg9SWMKeapC0/qVpQ+k/djiqe3nmzzDb/l9Y65dPFp13q11bhrmeP93p9nf3QETTISAX&#xA;igkRGLHj6m7fDXFUl0C81jzF+YGmtc6vHf6Zob6qLWWGFPQu5LcWafWAVbj6kY1B7diNg0b8acji&#xA;r1fFXYq7FXYq7FX5bat/x1bz/jPJ/wATOKv0p/L3/lAPLP8A2yrH/qGTFV3nrSJ9X8palp9uC08k&#xA;YeJB1Z4nWVVH+sUpmXocox5oyPL9ezr+1dOc2mnCPMj7t/0PnTSNSuNI1e1v4l/fWcqyem21Sh3U&#xA;/PpnY5cYyQMTyIfNtPmlhyRmOcS9wh/OTyU9kJ5Jpop6VNoYnZ6+AYD0/wDhs5c9kZxKgBXff4L3&#xA;cfaPSmNkkHurf9X2vGPNfmCTzBr91qrx+kJyBHFWvFEUKoJ8aDfOk0uDwsYh3PE6/VnUZpZCKt7f&#xA;+VGi3GleT4BcIY5ryRrtoz1AcBUr80QHOY7VzDJmNchs912BppYtMOLYyPF+PgHzf/zlY6J+fXlN&#xA;3YKi2GnlmJoABqNzUk5rndPqs+bfKoFTrNiAOp+sw/8ANWKvnv8A5ya/P7y3L5ZuvJXlS+j1O+1O&#xA;kWp3tqwkghgDBmjWRaq7yU4njUBa13pirNv+cf8A8rb/AMtfk9Ppuop9W1nzEs9zdI4IaETxCKGN&#xA;x1qqAMw7EkYq8M/5xh8l/l7r/mHzD5X88aVHca3bhH0+C4klicGBnS7jAjdKspKGnWgPgcVewfmb&#xA;+XH/ADjr+Xnlhtf1jyok0XqxwQWsE0/rSySHogeZR8Kgsd+gxVOvKj+ULj8gNa1Hylosug6LqOn6&#xA;ncQ2M5LSFhDJE0hq8uz+lt8XTFWD/wDOEP8Ayi3mX/mOh/5M4qlX/OZn/KU+Rf8Ao4/5PQYq+qsV&#xA;fJPnR0T/AJzQ0oswUG408VJpu1ooA+knFX1tirFPzOv9Z0zyZquracljPHplnc3t5aajDJPHNHbQ&#xA;tN6ahJI+JJTq1fliqE0/zvptlcNo+vSwtc28psp9QtLSaHTI5PSEy2plkaVVf0qEjlx6L9rbFUJN&#xA;+bXl5jYtZWV46SXaJJbvp9ytw8VxYXd3bzWsXANJ6v1QioGw5cuOKq9p+Z35eXV1bPaiST9LtZwt&#xA;erZTelyv9rSO4m9Oil2+AK52bY0xVbL+Yfli8lin022Ml5eTWkFpd3Vq8SXlnNfwWc8ltMyr6qJ9&#xA;ZBG/dWoVNSqpal53/LnWNMv4b6OcWV/a0WX6tNGdStPWS3C2jqoadHluEjCr9r1BT4Wriqb2f5he&#xA;UdQuLrTZHkt5LZLgXkF7byQBRbQwTXEbeqoB4RXkbEdwSRUA4qn2kyWFxplldWMPo2ksCSWsZj9I&#xA;pFIoZV9MgFNqVWm2KozFXYq7FXYq7FXzfdf84UeV7i5lnPmS+UyuzlRDDQFjXFX0FoWlR6Romn6T&#xA;HIZY9PtobVJWADMsEYjDEDueOKo7FWH+Z/yu8ta9O92Veyvn3ee3oA58XQgqT7ihzY6btPLiFfVH&#xA;zdNruwsGoPF9Mu8fpDFT+QicqjXCF8Da1NPn6v8ADM/+Xf6H2/sdT/oUH+qf7H/jzIfLv5Q+WdJn&#xA;S5uC+pXKEFPXoIlI7iMdf9kTmHqO1suQUPSPL9bsdH7PYMJ4pXOXny+X67Zzmrd88i/N3/nHTRfz&#xA;K8yW2u32r3Ony21mlisMEcbqVjlll5EtvWsxH0YqwhP+cIvKYdS/mS/KVHICKEEjvQ70+7FWf+QP&#xA;+cavyw8mXsWpW9rNquqwEPBeak6ymJx+1HGixxKQdwSpYeOKvVcVeN/mX/zjN5Z83a+3mXSdSuPL&#xA;PmKRhJNeWi843lH+7TGGiZZPFkcV6nffFUgs/wDnEiG+1WC988edNT81RW5HC3lDxVUU+BpJJrpw&#xA;ppvwKn3GKvbb7y3p8/la58t2yCy0+ayk0+JIVAEMTxGEcF6fCp2xVin5Pfk9pv5ZabqFjY6hNqCa&#xA;hMk7vOiIVKJxoOOKoX82fyQ0r8x9S0a+vdTnsH0b1PSSFEcP6jox5culPTxV6Xirxv8AOH/nG3R/&#xA;zD1+LzDb6xNoespHHDLMkQuI5BESUfhzhZXANKh+w2xVlf5TflzqfkTRbyw1HzFceZLm7ufrBvbp&#xA;XRlHprGIwHluDQBP5sVZN5n0OLX/AC3q2hTStDFq1ncWMkyAFkW5iaIsoO1QHrirFLz8n9Du/M1x&#xA;rEkq/V7u4a7urP6ramVpnhELAXZjNwse3qcVavPvTbFUw0TyNqFlcWM2o+YLvVv0bLE9lHPHDGiJ&#xA;DZz2lKRqvJ5BdF5HPUgbAYqo6L+WVjpVpcW0d7LItxc2F0WZVBDafcrcou3ZytDiqhZflVBb/oqK&#xA;bVri4stASGDQ7Zo419CCC7t7pUdlAaVuNlHEGNKLXYsa4qluqflPeRaDDb2OoTajNoVrHb+VrOVo&#xA;rUW4gure5iLTrFN6kkf1OJUZ4ytF+JfiZsVSyP8AK7zTrGkOPMrqdR1TzENTv3jlQtFpxsI7Ce3d&#xA;o44kf14IPSZEWgDg1YpXFXr4AAoNgOgxVvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//2Q==</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -76.5352 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 76.5352 li
162.638 76.5352 li
162.638 0 li
clp
[1 0 0 1 0 0 ] concat
38.3853 44.5191 mo
40.8775 44.5191 42.231 42.8643 42.231 40.5425 cv
42.231 28.7007 li
47.5318 28.7007 li
47.5318 40.8072 li
47.4791 46.1363 43.2105 48.2291 38.3853 48.2291 cv
33.5601 48.2291 29.2916 46.1363 29.2388 40.8072 cv
29.2388 28.7007 li
34.5396 28.7007 li
34.5396 40.5425 li
34.5396 42.8643 35.8931 44.5191 38.3853 44.5191 cv
false sop
/0 
[/DeviceCMYK] add_csa
0.764706 0.0470589 0.00392157 0 cmyk
f
82.9195 41.6587 mo
82.9195 40.4117 li
82.9195 36.7281 80.8331 34.1285 77.0591 34.1285 cv
72.8453 34.1285 70.8824 37.3902 70.8824 41.2867 cv
70.8824 45.2105 72.5806 48.232 76.8482 48.232 cv
80.0298 48.232 82.3619 46.7222 82.7603 43.6998 cv
80.1099 43.6998 li
79.8169 45.6343 78.8374 46.4029 76.8755 46.4029 cv
74.3023 46.4029 73.4488 44.1143 73.4488 41.6587 cv
82.9195 41.6587 li
cp
73.5054 39.9087 mo
73.5235 37.8331 74.7798 35.9585 76.8755 35.9585 cv
79.313 35.9585 80.2662 37.629 80.2662 39.9087 cv
73.5054 39.9087 li
0.858824 0.850981 0.788236 1 cmyk
f
88.4932 28.7007 mo
85.9732 28.7007 li
85.9732 47.8355 li
88.4932 47.8355 li
88.4932 28.7007 li
f
15.5054 47.8345 mo
20.8062 47.8345 li
20.8062 32.4136 li
26.7447 32.4136 li
26.7447 28.7017 li
9.5669 28.7017 li
9.5669 32.4136 li
15.5054 32.4136 li
15.5054 47.8345 li
f
28.2388 19.3843 mo
26.9458 19.7901 25.6119 19.4654 25.6158 17.7359 cv
25.6177 15.1001 31.8082 12.8902 32.6666 10.5865 cv
32.8794 10.0123 32.8921 9.53956 32.6177 9.5542 cv
32.4205 9.56592 32.5748 9.85206 32.1412 10.2867 cv
29.5767 12.8521 25.2798 12.8482 21.983 14.3248 cv
19.8208 15.2955 13.4849 18.2769 14.9439 24.9273 cv
15.0132 25.2427 15.2017 26.3013 15.3951 26.3013 cv
15.6197 26.3013 15.6177 25.6724 15.6119 24.9087 cv
15.563 20.9488 20.2525 19.8443 21.7779 17.2574 cv
21.9605 16.9478 22.2759 16.5142 22.3511 16.7154 cv
22.3873 16.813 22.3638 16.9566 22.3023 17.232 cv
21.8248 19.358 19.6011 20.7222 20.231 22.2418 cv
21.0474 24.2144 23.4048 22.7437 24.1285 21.4761 cv
24.3228 21.1265 24.4312 20.9039 24.5611 20.9488 cv
24.6587 20.983 24.6548 21.3834 24.5943 21.7437 cv
24.2076 24.0318 23.6812 25.3169 22.0064 26.6187 cv
21.4712 27.0357 20.6285 27.1226 20.7388 27.4429 cv
20.7671 27.5259 21.1304 27.5171 21.4195 27.4878 cv
25.8785 27.2027 29.608 21.9449 30.5962 18.5103 cv
30.6998 18.2691 30.731 18.0416 30.6216 17.9566 cv
30.4869 17.8531 30.2916 18.0914 30.0923 18.2681 cv
29.5826 18.7154 28.8834 19.1822 28.2388 19.3843 cv
f
116.254 33.2491 mo
117.648 33.2491 118.218 32.4322 118.218 31.1822 cv
118.218 29.7178 117.359 29.0718 115.951 29.1133 cv
115.25 29.1133 li
115.25 33.2491 li
116.254 33.2491 li
cp
116.143 28.7007 mo
117.772 28.7007 118.699 29.5391 118.699 31.1822 cv
118.699 32.8238 117.772 33.6617 116.143 33.6617 cv
114.803 33.6617 li
114.803 28.7007 li
116.143 28.7007 li
f
121.949 31.6558 mo
121.901 30.9888 121.543 30.4878 120.829 30.4878 cv
120.155 30.4878 119.798 31.0508 119.743 31.6558 cv
121.949 31.6558 li
cp
119.73 32.0337 mo
119.743 32.7686 120.08 33.3873 120.925 33.3873 cv
121.413 33.3873 121.818 33.0372 121.921 32.5621 cv
122.354 32.5621 li
122.141 33.3873 121.626 33.7647 120.794 33.7647 cv
119.764 33.7647 119.283 32.8785 119.283 31.9371 cv
119.283 31.003 119.798 30.1099 120.822 30.1099 cv
121.976 30.1099 122.395 30.9551 122.395 32.0337 cv
119.73 32.0337 li
f
123.549 33.6607 mo
123.137 33.6607 li
123.137 28.6998 li
123.549 28.6998 li
123.549 33.6607 li
f
124.867 33.6607 mo
124.867 30.5899 li
124.172 30.5899 li
124.172 30.212 li
124.867 30.212 li
124.867 29.4766 li
124.867 28.8853 125.106 28.6172 125.698 28.6172 cv
125.829 28.6172 125.966 28.6661 126.089 28.6929 cv
126.089 29.0225 li
126.007 29.0093 125.918 28.9957 125.835 28.9957 cv
125.272 28.9957 125.259 29.2779 125.279 29.7715 cv
125.279 30.212 li
126.063 30.212 li
126.063 30.5899 li
125.279 30.5899 li
125.279 33.6607 li
124.867 33.6607 li
f
127.033 30.5899 mo
126.346 30.5899 li
126.346 30.212 li
127.033 30.212 li
127.033 29.4766 li
127.445 29.2979 li
127.445 30.212 li
128.229 30.212 li
128.229 30.5899 li
127.445 30.5899 li
127.445 32.899 li
127.438 33.2139 127.603 33.3863 127.919 33.3863 cv
128.043 33.3863 128.167 33.3794 128.277 33.3448 cv
128.277 33.7022 li
128.146 33.7369 127.995 33.7637 127.858 33.7637 cv
126.985 33.7637 127.033 33.2071 127.033 32.7398 cv
127.033 30.5899 li
f
115.25 35.7872 mo
115.25 38.9957 li
115.285 39.8965 115.8 40.439 116.617 40.439 cv
117.435 40.439 117.95 39.8965 117.984 38.9957 cv
117.984 35.7872 li
118.431 35.7872 li
118.431 39.0025 li
118.417 40.0674 117.819 40.8511 116.617 40.8511 cv
115.414 40.8511 114.817 40.0674 114.803 39.0025 cv
114.803 35.7872 li
115.25 35.7872 li
f
119.723 40.7481 mo
119.31 40.7481 li
119.31 38.0748 li
119.31 37.8077 119.289 37.5328 119.276 37.2994 cv
119.701 37.2994 li
119.723 37.8077 li
119.736 37.8213 li
119.977 37.3951 120.369 37.1963 120.815 37.1963 cv
121.941 37.1963 122.031 38.1924 122.031 38.5909 cv
122.031 40.7481 li
121.618 40.7481 li
121.618 38.522 li
121.618 37.9239 121.275 37.5738 120.711 37.5738 cv
120.031 37.5738 119.723 38.1441 119.723 38.7618 cv
119.723 40.7481 li
f
123.371 37.2994 mo
123.371 40.7481 li
122.958 40.7481 li
122.958 37.2994 li
123.371 37.2994 li
cp
123.405 36.3023 mo
122.923 36.3023 li
122.923 35.7872 li
123.405 35.7872 li
123.405 36.3023 li
f
124.477 37.2994 mo
125.665 40.1783 li
126.813 37.2994 li
127.267 37.2994 li
125.898 40.7481 li
125.432 40.7481 li
124.023 37.2994 li
124.477 37.2994 li
f
130.2 38.7418 mo
130.152 38.0748 129.794 37.5738 129.08 37.5738 cv
128.406 37.5738 128.049 38.1373 127.994 38.7418 cv
130.2 38.7418 li
cp
127.981 39.1197 mo
127.994 39.855 128.332 40.4732 129.177 40.4732 cv
129.664 40.4732 130.07 40.1231 130.172 39.6485 cv
130.604 39.6485 li
130.393 40.4732 129.877 40.8511 129.046 40.8511 cv
128.016 40.8511 127.534 39.9644 127.534 39.0235 cv
127.534 38.0889 128.049 37.1963 129.072 37.1963 cv
130.228 37.1963 130.646 38.0416 130.646 39.1197 cv
127.981 39.1197 li
f
131.835 40.7481 mo
131.423 40.7481 li
131.423 38.0748 li
131.43 37.8077 131.402 37.5328 131.388 37.2994 cv
131.814 37.2994 li
131.835 37.8077 li
131.849 37.8077 li
131.973 37.4566 132.282 37.2095 132.626 37.1963 cv
132.763 37.189 132.9 37.1963 133.038 37.2027 cv
133.038 37.6011 li
132.955 37.5943 132.866 37.5738 132.783 37.5738 cv
132.171 37.5738 131.849 38.0132 131.835 38.6729 cv
131.835 40.7481 li
f
134.721 37.1963 mo
135.374 37.1963 135.922 37.4219 135.979 38.1509 cv
135.532 38.1509 li
135.49 37.7178 135.105 37.5738 134.68 37.5738 cv
134.294 37.5738 133.903 37.7247 133.903 38.1304 cv
133.903 38.6392 134.569 38.5909 135.503 38.9205 cv
135.861 39.044 136.088 39.3536 136.088 39.7247 cv
136.088 40.501 135.366 40.8511 134.638 40.8511 cv
134.04 40.8511 133.353 40.5694 133.339 39.8067 cv
133.786 39.8067 li
133.82 40.3223 134.274 40.4732 134.741 40.4732 cv
135.181 40.4732 135.641 40.2676 135.641 39.7857 cv
135.641 39.2916 135.099 39.209 134.549 39.085 cv
134.006 38.9542 133.456 38.7969 133.456 38.1578 cv
133.456 37.4434 134.115 37.1963 134.721 37.1963 cv
f
137.298 37.2994 mo
137.298 40.7481 li
136.886 40.7481 li
136.886 37.2994 li
137.298 37.2994 li
cp
137.333 36.3023 mo
136.851 36.3023 li
136.851 35.7872 li
137.333 35.7872 li
137.333 36.3023 li
f
138.705 37.6768 mo
138.017 37.6768 li
138.017 37.2994 li
138.705 37.2994 li
138.705 36.5635 li
139.117 36.3848 li
139.117 37.2994 li
139.9 37.2994 li
139.9 37.6768 li
139.117 37.6768 li
139.117 39.9859 li
139.11 40.3008 139.274 40.4732 139.59 40.4732 cv
139.715 40.4732 139.839 40.4664 139.948 40.4322 cv
139.948 40.7891 li
139.817 40.8238 139.667 40.8511 139.529 40.8511 cv
138.656 40.8511 138.705 40.294 138.705 39.8272 cv
138.705 37.6768 li
f
140.903 37.2994 mo
142.064 40.1846 li
143.218 37.2994 li
143.665 37.2994 li
141.761 42.0669 li
141.308 42.0669 li
141.83 40.7481 li
140.401 37.2994 li
140.903 37.2994 li
f
147.546 37.5738 mo
146.714 37.5738 146.385 38.3848 146.385 39.0235 cv
146.385 39.6626 146.714 40.4732 147.546 40.4732 cv
148.377 40.4732 148.707 39.6626 148.707 39.0235 cv
148.707 38.3848 148.377 37.5738 147.546 37.5738 cv
cp
149.153 39.0235 mo
149.153 39.9302 148.645 40.8511 147.546 40.8511 cv
146.446 40.8511 145.938 39.9302 145.938 39.0235 cv
145.938 38.1163 146.446 37.1963 147.546 37.1963 cv
148.645 37.1963 149.153 38.1163 149.153 39.0235 cv
f
150.115 40.7481 mo
150.115 37.6768 li
149.421 37.6768 li
149.421 37.2994 li
150.115 37.2994 li
150.115 36.5635 li
150.115 35.9727 150.355 35.7042 150.946 35.7042 cv
151.077 35.7042 151.215 35.7535 151.337 35.7803 cv
151.337 36.1099 li
151.256 36.0967 151.167 36.0831 151.084 36.0831 cv
150.521 36.0831 150.507 36.3648 150.527 36.8584 cv
150.527 37.2994 li
151.311 37.2994 li
151.311 37.6768 li
150.527 37.6768 li
150.527 40.7481 li
150.115 40.7481 li
f
116.405 43.2862 mo
114.803 43.2862 li
114.803 42.8736 li
118.431 42.8736 li
118.431 43.2862 li
116.857 43.2862 li
116.857 47.8345 li
116.405 47.8345 li
116.405 43.2862 li
f
120.61 45.8287 mo
120.563 45.1617 120.205 44.6607 119.491 44.6607 cv
118.817 44.6607 118.459 45.2242 118.404 45.8287 cv
120.61 45.8287 li
cp
118.391 46.2066 mo
118.404 46.9419 118.742 47.5601 119.586 47.5601 cv
120.074 47.5601 120.48 47.21 120.583 46.7354 cv
121.015 46.7354 li
120.803 47.5601 120.288 47.9376 119.456 47.9376 cv
118.426 47.9376 117.944 47.0513 117.944 46.1104 cv
117.944 45.1758 118.459 44.2828 119.484 44.2828 cv
120.637 44.2828 121.057 45.128 121.057 46.2066 cv
118.391 46.2066 li
f
124.073 45.4439 mo
124.038 44.9146 123.702 44.6607 123.131 44.6607 cv
122.499 44.6607 122.107 45.3204 122.107 46.1041 cv
122.107 46.8936 122.499 47.5601 123.131 47.5601 cv
123.667 47.5601 124.038 47.23 124.073 46.7564 cv
124.519 46.7564 li
124.409 47.5464 123.956 47.9376 123.172 47.9376 cv
122.142 47.9376 121.661 47.0513 121.661 46.1104 cv
121.661 45.1758 122.176 44.2828 123.2 44.2828 cv
123.908 44.2828 124.485 44.709 124.519 45.4439 cv
124.073 45.4439 li
f
125.612 44.9083 mo
125.626 44.9083 li
125.866 44.482 126.258 44.2828 126.704 44.2828 cv
127.831 44.2828 127.92 45.2789 127.92 45.6778 cv
127.92 47.8345 li
127.507 47.8345 li
127.507 45.6084 li
127.507 45.0108 127.165 44.6607 126.601 44.6607 cv
125.92 44.6607 125.612 45.231 125.612 45.8487 cv
125.612 47.8345 li
125.2 47.8345 li
125.2 42.8736 li
125.612 42.8736 li
125.612 44.9083 li
f
129.15 47.8345 mo
128.738 47.8345 li
128.738 45.1617 li
128.738 44.8946 128.717 44.6192 128.703 44.3863 cv
129.129 44.3863 li
129.15 44.8946 li
129.164 44.9083 li
129.404 44.482 129.796 44.2828 130.242 44.2828 cv
131.369 44.2828 131.458 45.2789 131.458 45.6778 cv
131.458 47.8345 li
131.046 47.8345 li
131.046 45.6084 li
131.046 45.0108 130.703 44.6607 130.14 44.6607 cv
129.459 44.6607 129.15 45.231 129.15 45.8487 cv
129.15 47.8345 li
f
133.828 44.6607 mo
132.997 44.6607 132.667 45.4712 132.667 46.1104 cv
132.667 46.7496 132.997 47.5601 133.828 47.5601 cv
134.66 47.5601 134.989 46.7496 134.989 46.1104 cv
134.989 45.4712 134.66 44.6607 133.828 44.6607 cv
cp
135.436 46.1104 mo
135.436 47.0166 134.928 47.9376 133.828 47.9376 cv
132.729 47.9376 132.221 47.0166 132.221 46.1104 cv
132.221 45.2032 132.729 44.2828 133.828 44.2828 cv
134.928 44.2828 135.436 45.2032 135.436 46.1104 cv
f
136.554 47.8345 mo
136.142 47.8345 li
136.142 42.8736 li
136.554 42.8736 li
136.554 47.8345 li
f
138.884 44.6607 mo
138.052 44.6607 137.722 45.4712 137.722 46.1104 cv
137.722 46.7496 138.052 47.5601 138.884 47.5601 cv
139.715 47.5601 140.044 46.7496 140.044 46.1104 cv
140.044 45.4712 139.715 44.6607 138.884 44.6607 cv
cp
140.491 46.1104 mo
140.491 47.0166 139.983 47.9376 138.884 47.9376 cv
137.784 47.9376 137.276 47.0166 137.276 46.1104 cv
137.276 45.2032 137.784 44.2828 138.884 44.2828 cv
139.983 44.2828 140.491 45.2032 140.491 46.1104 cv
f
142.605 44.6607 mo
141.856 44.6607 141.54 45.4166 141.54 46.0489 cv
141.54 46.6802 141.863 47.4439 142.618 47.4439 cv
143.408 47.4439 143.711 46.7081 143.711 46.0342 cv
143.711 45.375 143.347 44.6607 142.605 44.6607 cv
cp
143.731 44.3863 mo
144.158 44.3863 li
144.144 44.6192 144.124 44.8946 144.124 45.1617 cv
144.124 47.23 li
144.124 47.9175 144.158 48.6387 143.395 48.9961 cv
143.12 49.127 142.935 49.1539 142.611 49.1539 cv
141.987 49.1539 141.245 48.9415 141.245 48.2261 cv
141.691 48.2261 li
141.74 48.6387 142.227 48.7759 142.667 48.7759 cv
143.203 48.7759 143.698 48.398 143.711 47.8218 cv
143.711 47.1753 li
143.698 47.1753 li
143.498 47.5811 143.024 47.8218 142.578 47.8218 cv
141.54 47.8218 141.094 47.0313 141.094 46.0826 cv
141.094 45.148 141.513 44.2828 142.563 44.2828 cv
143.065 44.2828 143.423 44.5235 143.698 44.921 cv
143.711 44.8946 li
143.731 44.3863 li
f
145.174 44.3863 mo
146.335 47.2715 li
147.49 44.3863 li
147.936 44.3863 li
146.033 49.1539 li
145.58 49.1539 li
146.102 47.8345 li
144.672 44.3863 li
145.174 44.3863 li
f
96.3882 47.8345 mo
96.3882 36.2837 li
99.4605 36.2837 li
99.4605 34.5318 li
96.3882 34.5318 li
96.3882 32.3834 li
96.3882 30.8453 97.1285 30.5816 98.5621 30.5816 cv
98.9839 30.5816 99.4097 30.6363 99.8335 30.6597 cv
99.8335 28.5689 li
99.2437 28.4351 98.6421 28.3033 98.0308 28.3033 cv
95.646 28.3033 93.8687 29.4986 93.8687 32.0455 cv
93.8687 34.5318 li
91.273 34.5318 li
91.273 36.2837 li
93.8687 36.2837 li
93.8687 47.8345 li
96.3882 47.8345 li
f
100.908 34.5318 mo
100.908 36.2837 li
103.188 36.2837 li
103.188 44.7613 li
103.188 46.5313 103.213 48.2315 106.954 48.2315 cv
107.536 48.2315 108.083 48.1768 108.677 48.0738 cv
108.677 46.1392 li
108.267 46.2378 107.749 46.2979 107.35 46.2979 cv
106.449 46.2979 105.708 45.8448 105.708 44.8941 cv
105.708 36.2837 li
108.782 36.2837 li
108.782 34.5318 li
105.708 34.5318 li
105.708 30.9009 li
103.188 31.6958 li
103.188 34.5337 li
100.908 34.5318 li
f
55.4874 30.9786 mo
59.4068 30.9786 li
63.8296 30.9786 65.6646 34.3155 65.6646 38.2691 cv
65.6646 42.2227 63.8296 45.5567 59.4068 45.5567 cv
55.4874 45.5567 li
55.4874 30.9786 li
cp
52.8326 47.8345 mo
59.4058 47.8345 li
67.5894 47.8345 68.4483 40.9083 68.4483 38.2691 cv
68.4483 35.6299 67.5894 28.7007 59.4058 28.7007 cv
52.8326 28.7007 li
52.8326 47.8345 li
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 11.0
%%AI8_CreatorVersion: 11.0.0
%%For: (Marc Vleugels) (Studio 3005)
%%Title: (TU_d_line_M2#rgb.eps)
%%CreationDate: 02-05-2008 15:49
%AI9_DataStream
%Gb!U'pNem4c7jQ^J9rDmFNF)@)Ej'*V"[3+&/&.pHggY,nQl$Slm\M16Qkj,c["*JIRu@;>F&hX9:f6:di#TpNHRJ6q+icg7H:Bd
%jV9Mm7:NNS`^R#uH*/E';&5geOAJ>F+>%Z*b-4l]%naN1V:P*J43^O(T8[C^.CZ'"jZ5LQ8+16<B'8(!9XA""Nl9A$nnXrHX;*e0
%<d>6V'-+m-=7YX!+5VS#nTP=(Cfd(CC97Ulf;aTXGhg=El7;]/Z8NO"MD-4baCJ*7O'+jNm=Zg%)Yq4e^T+.3rm@"OMd!gA+8!^.
%7]63t8k6Im[CXWRTLS&ob&Tf_`FtbX7.Q6T@(ZRT+mg"._2GUV<(ps4[,Vl]_8utF&is[6\&hYI=/5KXA@.St'>HRZ'I[hH]tn:?
%It.fn`$[B9f:oQ'-NmFMkjs^@Zdua+2[4BPksM$8E71`:RKeT?;J;AY0HC#2_ge3P+)PssmaZ(T=QWA"Lf?o7FbMWCSISlCnisOR
%4i1@2f"UG)&<u4f,U[g?\4&9(-M/^iF)mN.,rI/#A/I0RM:U<=\q(^lK`.8?W3C.c=NRmUUY]Z3j,sNZj#"?eqn5JL?=I;&NW):W
%PL,]sFn:*?0?ehuW3n'YjP/4$VhJXdeqmsGl.a!"btafnZ[O8t@(9X3U.YE64mbN#7N6?'S<>8RCT0=I8,L!FY^>%%kX8J"e]rLn
%>/ERPmB\_Kneo^ELAfH^<N";NNB/!qO(^3AYW#roNuS8U#5<%[oW,^4j^thrn!1MWNJ_*;50p?NK&.M.+=pHpB(nUj[!n$_o<L\R
%l%c,,Ok%"g)l#puVtJn\2Yo#;@g6EB5)pjqTpiB4[;U1Ts0N@g2Z@7h7sC9"I=TOPQBjf-m=3ZTSM!9!$W:kDUUT>k2lKs!m\A14
%!`^k.NBtfqkYA1:dQ`'R=mdKddus,1fKJU#LrW#(S;CV"kn=bfK7B=4q)=AhSU\,j+44V0jUk$]*]=8LX3o2@EiTu3LhpBU5`F==
%-=$0o@S/g6M=/Ld\;5Yj:^%_ZJukX':jA)P+A6r#`<iGW')B?mpd5^jkZp6d=^q$k+8Fk%Iea&l^S=^!,l7;[7B6F%]82PWWfbP(
%).jQ<MF9B(:\[Ln"=1571R9GcEYIM@NQe*g*XSaj&A`h6""dLsV2R:-g%-Hs:k\7=WdA>G)Z43DH&b(_q[0t2Ige#Qj8oO-DW#90
%fN`\uNl56_c+efIn?5:bWDW*^6iXk^.@u.N,_)mH</n?%:6u(H]H1AS:TN0'#''R=%4npp4;N;:J,ZWlF(dDWURR#mVW74)T<@^+
%1YqA^r@hp8#3@<W5!8uFmh#7q\^r7E2pnkps#2(jIiX=E9e'u4D(;0;B!k]U)f8hrb;9?uen_o/#DhRJH*lP$9<qnoTnlq4IsGHi
%:W\GJ^,$hTQ)/[([5.(Z3j#N7`XL/0s6_Y0F7:deH'%r*\EO#9pA\>ELND)R_iDLm!gl'RlR=!u3*O!SLpP8(pQ:?(KpN[GS]Z/Y
%3duPF:-47=rtjj1@fMd"0S(eMDr*#gM<(1Rs5W#:f/-mMfr4iK6N*%'>]tk88r^crr[[0m7/<I[-sGT>c&5c9q-V&)s7e(VZ*WEg
%bGOeO^M/)H)YMGH(?p>3_O/DkVtKLJFmqD7<`[`E^M@!Wo%mN_G6VFj(2Fuo)He%E_<>L.e+rI#R<J`4,t\qpdf7@1m-GG2N0%ZR
%%u)ndZqDM3I+4$\ON;ON=Dl`Gja&L^l?%ee([I5#9"eECf)&N#H<'jg+I]Jl#3GSKZS=.%ZQb$DZ3J[Njkeq/;smY\'g+p@o$O%C
%d#DmFn(#YXNc"Z2EJ?#8Jem-@YRq`,P!NJlgNS_Lp,6ut/j:BLb3aYe%-q*m#DR"nU]&44fLj=4],p@*]<r\BC^ljZhF<ujS>FoC
%dFiKc*=ee[jo1q(C]"]W(q%[t%.n)N4"%H8kEn1fa82:<'Q$+9nt61CY7]Z*AE3,:R.;7_Y)`$\A%Osse>eL:M])#Pg%g*`BcObc
%.0pk&U5\!ig(KQ7AtZe&Gh&U;[G+6^YUqdQI2Ah^mXH0d<_SBnb>m:;8KUFN_a2>;T"4h?Zba08LP9c0[#=sb<Z(n\]U,,LG/_)E
%N`Ua?bso;\*Pbthf<RX)FhZ,6cNc;01`K_.8IX>N#PLM*a>W1?Y.<j[s/Pb'(`;Z;PMI[605Jgbnc0H1fVt+)\6+1MgeUUJD1Ql<
%hI2F]aZdGU\/C<A5(^2AFF)J@eVd7Go<^<@jKZsYS$jHqlrAE2"H<Pp/U1'tEkC-F=N%"Oj(W$:[VmrBi>?LN@Cn:l#q/Um82\ng
%@UK+12rV!&4hX48::E8(e"Aq.LJ#T9(L7K3(IpFJ["7BEPd*`=A[Jg'$^#R\/O?[(AXpgF[-Y>-Wj7+Aa+!_fq(>tIdAmb:5d!-%
%0k0"qoWqf)okL9!C\#!cbCbq:J9D#-!ufjiKlWj4C'MFrm91MeahL;hp>3SJBM:)[n_1`mc/;>\g4MeCptd)I0l0a)G'b;O947R8
%)/[q+o>r[FI*#Z4I4&4[hKQa+nWBL<F6MaLgH>nkHI1o2DVG:-hW<jF)M<F9<S^c4B[1!+U:#\tLpdep]k`[GM95BrmYt[nCtE0W
%+icG,Jn<\MIrr\iggasUhh4\ABTj"g^^4(X+/kJC5LNmUPK$t#pH`<9oL+PK#SL/0d:eQo@b@oGVl!tX3:qu5X%KRa(k@H]RWs9C
%#i"u%Q+"4@KtoV&B#WEqR_Mt"c-":7ia3k`)3g+2S=WPgeQ;NTlV=X$p)3$n4eYE(3i_T1BUX$)rPiNJ_cF#@h9SjbIgioe61$_H
%#,\_dl*/i6=;KONB"X+@C[02_B/!d6@7si"q=>Wrjqr.?>J)m!X`E$q14rbo=d8gUV%??_UH.1GpMPXm7l@C!qMffJ*4`];?@qrc
%,6Ss"oEdjd?Q1:A8[Eo%CW8im7W`5MQ'J]j@-(faHegMU"0VB`<m\"#3KFXj+_thEoA(X7HU^T*$$;>#27@U[Qk8r<9l1W=8O?6P
%Q;Y$V08H*ons+jSUe7sg7Q27S"7ugmUK+d-%@3@5bS\`B(Yg/j_>W'Z4$rGD`>qe@3?jM/LSsN6pOPn]nf%UoEjJ4T.,4@MZ6DZ'
%O-DOA7r9>bN7/NK7rbd(@*FZ"JW\UNf<D_jn:\&Xs1?Y^RG%Q\-g/iMJ5'DFS_m<-*Ric1g"?BJBTt/U7aG='Z6N%QZmh`UNnKV`
%77T[Y,6KgC>Pl*S("EG4MhZ,$g_8uo)P5ToTj`^M:tWTLh$>61ffiACS'.I$")X@C+@F]c10h%LL+n0#lsW;hLM)6Lm>`3QLc3s4
%Z@TU?0/=6mj_qN@S,GVSIY\;0T=,uY@cW'gN:VRJ_S5GZ%MdL#g`1i"Q6p>u:=NI7W&5[0pXmKFI\l^uZ)o9Y+meF(>rU<D-7(M%
%?Y?T]I.V/<6]@-GMkBK=8aIDH>.\^lUrT/>)STu/*_7GX1Xa:hGBGaO3Za'2@B9V?0t&fFp/-FcDCboF0Wgi^bJ?Mi%MgDN?st5h
%(+/$K@1j%c*#q)TB:FHP?Or]Em,D;'_2j"U!p15&bWD74"ZQ&L\S7)d+dlDN1@M`m'/2']`4SS8cWKVs_fIIq&bki0EA'Ngp[XMe
%0CRh*?;!h`jD.s]qR:`P#9g0^ij^p0N'*-pq+2EkG;8Z%cK*f?4Bc"\Tc'8jKTZ(%(mtb@A1V=3bJd_20'4M?@W!ABjsK(sDA"Sa
%**fT9$!EC=,<:e`-fea^bJhWV5pkN!cGdbtfogDtn^u,SE\TKZ(NV,DO"c#4SY=`ZoS="3hbgJELcURVg]k2mRGoch^b0:t"aV-M
%ZcFK1=U5r5l-&GPTdJrqh^[49`7B-tpgU8<H8hHX5,ruE<mQJAl6l2/,41r7mAdW>=5Bl&@r:f"emZ>b;0XT$QO@m#O.6Td^3B1_
%aU-4CSA)K_>c!V>B3fdZ=q?bJG5SJh+e?Go>Q+3Un9QD:I]rL*GBSI>l/UOr6Edk&DXTN&^>:Ya-g0ad7[nnag>d+Ygd6.NcXdWY
%Sk3#L]0"i9e/&qIfCqH6,!dIe$\?G'M!VdP2nGnWWFNWVWuZ$6-46:Kkp@%dpRWG9gdC'"Wj%]DWVGGYgKgf01X2B*V7+.bSdK7+
%B:Hm@Q1RuBUV"[d-kAal0"]g`DfC;kT$MeU?</iSLQ<W1lFD/=Aa>uAoa/`YcCdDr]U[Hce(e[6.b@KgA*(GJQO:"cb"I2s0.o\&
%9L"r'CoslUg/l.KI_VhOf@JLb]eaC"4F+?KF.n!TT)*R]+Vo3/I<U0Y8a6]^';4?EQItP>qr7"o_?^"L]#n$>mW/RjDk0iQf'@2G
%+*u7;V)+-mIjOJ.1Bu[uT;9*FieHopch5LJi1Pts[5g_]NPo)>ih5bRQd,2-s$9F:WsdP8B$kPDrkaSVnJa:t_dO(!cdh`KhctN$
%/ah3!.VC,XKD(%<ad'9dp=u.pTNm'&gEqR4Y&qui=]j1^54j@kn"7,,<T`(\VXoLZ13V5.\SqubUQApY(HTM8!\4Z%7n)[\J'b=s
%Fml:R*9!PphDLk='k?fB3>-sQiu=Ri9ePiPK9hgi?)oG\WV]CF.)2'scT;A[mQKI??ap;o]l+=KI$Ln9ohF=0?fG.bJV0tl+.(1M
%K5T#;pA2o(54Fs.>YF@?ahOE5qocVGI))EGkN[)b[dP+K7PS'1H$t%?jdrN`Wb$J77i@on%E]EGcSGTS.LRt6PP9mopR/((s2l';
%=',BRmP!uZ'l0Gn^4YjGCH&C^aXECh#>=Tt`$ZQ^s7BT9&9rZ3^RX$Aj.P.u5n@:+o$:L+K0d&XHdLd2kqhZu3p_9B`AL^s:*^nY
%#F->c>d8FSq@@m35LbSb(!RdV&n?YZCXrss#<bi[F>j7*I9bqfMa'T/6''!O8?>oAm*5@Op$/c$(c^a@M/r8)1h_o]iEgVQ:m_VH
%Cb`YC<IJ0-nf@AbAZ$V0kfl`e[2UqNX?LhIhokf@[?t=99kh;Bn":11="f,WIa)471\RKWA*gEq$MReS>PB63oXaR`N1Fk]%f5a:
%pDQ#),hAs^XjdI8qK0Tfjbl/!5mu<Br8$</cu79;mkhad%/MT.(3<*EK6;So0@E/0o7MIh<(ck=@[=ntG<LSMmB$5ujR5u#W3YY+
%'I]:6gi"%IId:dP6";!to2Lt_R="q[.3:+Or9<6*%_CiRWMf:*[^]=h6+?Y\bY@#Cr[U8>h-8!>\4#:rF^<iKK8PT/m'0Kef%,&P
%dmkB7m2@eoK41%tr6G8W!=YG0?%^E/RBo\!d,]Jh2:JbS:B$^m\p%F23lqbQbL^B^kZ$L$K==aEI4bq3F$d22:7cg)%[Z=rC9-\#
%<!'+=G?:rXShcJD#OHEX#^H6\`9"JSo(8p%(3nKjMCDCF:VGcd!@0m2]\&F"Su9,.oiMNHRcR<,DRH.8H1%bSG[XFmkP6WPRJe00
%]`#@V?/@-V"[,S!=/hAuf2J/JO"toBpQP)rH[Ce=%Hg^NWE2t<E&ZBi47oM!Rn8Z20Zm*Q^)-FSaPAK6l(FrPgoZac#!FPX%h%[/
%8MT]*0CJZ(@4gF)-^B&XqUc("WcKiF>GCG_9sLT1pStmk!H5aHpr(mk*:U>J_Wu-W8\if!OHt9+l(ns`r/s9.T0E[->3YOSha/RG
%Bm#]Us#OHnU6tl,^=q9^4SZZCoLj8KX%0)KWNa%IEo;>6SkC'!G3MpunlZY?#0j\ql0+%NSrKpZbf9%.`%m=IPEY@2EctC6c9EU?
%.c%8[meEr6YkZ2Sp*p61Ei%::ebKb&keYPEm[MO72NM`s$albQgtqnhPnour)T$FiV:=X83=?nch,C$4FpfCVikb?.I=*]UXW0tV
%E#-s?gM:N.YU8]DF9^a[]Tu3\(JaN?c_m6MAODi_&,9`3-22DE'/r^IC+<W$#-4@s+.=DA]+kmj+5;>uX`fcag<D;(mEca^C^Fu]
%W#hecVpXn5\OcH<Hb=h6g$U<U>jbrcp@oDL/lebpf,'n?X)tth*Q\r8)Xb=7,7*3P?eXdGRD5(`ndh"XO3P\iq^Q"m_d!,A?!(hX
%GV%\H\R&S!?-qbgjdjh;Y-sWTr8sWjet]3r(KuOZa-#Mj,kiIDMo<E#h@W)I`t`^ae4)(k3Uj4*>/H1*\Oar"b0OL02dbcA@?B7$
%Ge7B8V-rq]CFe]538/5q,m'2r*b3PI/r)]qf>$15$\@)<l8a<)H[JJgF=6gg86YR'f6j)/?m3)>i3?^U6"K0Er@n6m:EdmHgWl3Z
%p7OkpB(]`fC7@&J?r4(fk<]SL='p!l<W67_O'X>7?eQVbT@mQ6PZ%AQDKPq4DL<8+WPe%L\Ld'r7f>=!X;"\Fn*UJ*PiCFJC%Z$i
%!QNm6FsNCP<"HRNj5Zbjq7NNilMGd.@<mnqjEOu08r9MPFL2gL%Fb'/WuBXYk*H+db;Gg],C.nF$"8:kVD11sm:pA2AH1qo>ith*
%;a$JW\DFHBJB>9,ruJ2=A;@+heFmd(JW`Pab+'-O)=Y3iJVI9aOaed6_J/,Y(^3Dl2j]1kj"\TXA\JM3Be6AGV@ea>s5:tH_ZOtu
%G>7-r5EXSOdITf0]XW@ILE+<uguq=FA'lh!6Qh/"Pos<L0dfY(Dn\@MLLI+(*L-#538F\gFNL[B-7gce*>`@s)OL%REX%S!ZPm)N
%r-E3rUqPh88fcZukp*OTE%^V^s&h\k/=V%a.4'u!#`b_VC#ruU\$XZDWlsN%jO9*uNu-"HDf(S%Q,*fGfTuGE2+J\49W+N9r2f!h
%oH00k[q'6.b@/V_aO1H4S0O0QqsFmGRJYq*mp-',+s_SpG+f6+'ghm&N.ft/>MM%<U_9P?GABgXl?fa'b<KRo1mYbCH7=rqB_)I-
%q'FAMTDSM\"LH3L[8LIJ\%B6-oi_5UY5YnZkZk6kcWZ;Dn4\l[=?1Qt(VKT!F7i=Ns4+lFcb%edlb6nXenQX#IU!"R9\d7j3gg;n
%p.MN,CUq#EjC,jR2S*5&A>&"Kr$.?pgVP+1Z6YAB.??Od%@mKqf,d4,&dq1/2RqVNN!N&j>]'^C9ZT?[8#%NAU05-t@.l8H`#TVM
%A,"P)_7R0=?i1d'Qgcc9>Sq<Y74`jp=]\(RqnYEZ%l;77<m=MtaN<M-`(*:_k>1kmql[9>j!P_7KJq+,#Yu.b-f3[fa[hGr-[s!/
%gb=*^[iOWAX#nKmNbMdAlhmi;-gCbnGA<,MO2anCZr.DXjd<UF,OGg_HX(19&F?LG<YdN@*-c^E[,j3Sa-U2G%BR;$o_:Td_GVKi
%B=(bPf2hXZgY&FV_mgN.Fn+ahC"MHnERsI(%X&qC\Loi20I@6K6BS2Y9CX';rj)6%l\2ZL7u/Sj/BM"3Y1EWeSU)59[e5&-PV4p$
%.6Wh)8SOd0q@GFc.Do;mA6hODHQ_E?2Y$Q8;PH;iX9`%<5Xd)3mU!aiQfOd[GXY_!n=$V5^(D:W?=O*"!_[QaB9rk`a^Me$(VZrB
%\bhumS"Gg3n-a]fh#/dYVc]VhCf>-OkBSo'p6+SdZ_5rd,2@XPrMcHhEOE"(bsWuUqoFTCKJ$RR8fu5@G@^BEVireQV+<.";TY2Z
%8PilTC*/ppYhL8#LOB5#n)>gDn3e+Qbc2_"7UkWJKcODkDE`L%SEgp\g;PBpkh\pLn-^V6*io/$rBkZApEue/JCb)S"QOWnhWr,D
%Z,h3\D#]l#=Nu%LhTYM4ZE<>hB>R;?YD/#V;J\\Y13,6m""G+Xr+T^R"`e:,G9]6E5CI[ehfL+%f(V*H["CV:l0H\LLc,\C9l#-^
%/O"c:EZbC^IL3hF5.3tr*b]nVMgBU2M=gf($#^i<#ba[RKK>-j%\YVTDaodO6+#O(d.[7pA^Vh:$P>cG'gc[VKa=B+UtCnT2!S0%
%jGntG6*s5C<C_LB(tN9h\/mqMOq8Q.0>U0s6*s5#:.Kd!8,UN\OcS6.aBAN43,7F!DN."OEURY(,=dQPR.h/sHgGl#"(P9iUA*[(
%p%j9\j87(V--p(r,@%*/(=pfa*g]76Wf9P,?'c\9Ef=53(i$2HO-]o":S?@clAR,LkLIKLEQ^)K%:n5mNVeAf/5"K-Jr.uNN^=;R
%Vk:3iAK78\*h3%u=?.pI`sTi9d%'22nI@[dHKbW<kU</Qg:38"8%!TG\fUQ!-Vt<c3HfU,j(#,@XD+s^hRXQiVZV\6GAebNr^F,P
%NQ$r&RsjjfA=Lis(%R)8Q:HA.?cXUbheLdq*#ZGHE>_h@VrPPTZ'f<5ZbQ5@GV&47#BY=G%Q'Z;@UCugLrPK&T`^`;T'NnCnCY5Q
%Va,_50jG)01*bWs"%4L'1$G]X"GTAL6pOiVK,Q&_fCD[5_UQ!>8X&V?LkNs#!&ZcrH=J-E=hi0'5NW=mg-btWL\<89P:+H05n$ES
%o-G>Cp1.^8I(JS?o!mTEM]ku&CK$-*P;`oN-cA%9\G;9.j@o2=s*K0_1Og4%D/G:@XZ-fNa32_C+udQ6nq9O[n8V`qMJMpj0o]J/
%1)$*9EG&7piU2GR.GaOThe5a"gCrS<c@8+bGc"UHLncqnSTEg1;>_`n2?KG:ag,fG2fbL"fCAJ(b>:XIpf.Z^h]e69iJ`"tA+[m>
%_rD^)aj;(V5&7sEN&kgKC:QIA^DE]3DaUJb8[:Cn<W&[sp?J"8r1,oD@k+kpX"Qr^`&8r@bN8Qo"[<DYVkR[hoBBn.[EP.A4-;Rl
%hU4?.j/+Vj#RSdpZs&L._J_Ve55n3_m)NVmI'+pKnh%t:o]1)<8hDDl2MbOs`-h-dZ@M!.jK;XY=sbW0T(>=9J69+$TL57SALiB(
%kZU280?KWaB^b@S$(>,hS0Lh1pKr8'f)*Q(cgf@-nLAac6Imf$C'mc7c4pNijbX5jc6oU5QZFA%P)NJ+ad'fs^$hTVC/q&6+0rT*
%NJdSGpHq@I,,#,4Gi8)G<)WHq(l9SMmQQ8/`UKk&cM6&jXM]p=qG4'6iUL?qqpAh@Vg\r7;@Uei=sF:,A'X2m*.:Ej,"7@8/e[d#
%iu,s#j7iP$\2\tO[:R;:E0T?^rdD-$9"->@:0MNF:M^upY[JplK'phIoleYFpR=,'=)unp6!m=!'WuUPGu?V-\CsmMae`@TL\u;s
%?sFkE8Q<"Kbi\FVTRHl^aX,HuIUR-]1;6M!17qnAl'5IoCP`:Vlb>%5.bWNB/ogSf67UiR!c.b82tr\RWY__%T$=)b2ng(/YOd*B
%7:mgrlgqBQ[9CBuq[5@WV(h;&(HYo(44*jg/]kt4+aRDN(@('+g4:4oE,/m.j9cdd/6'6^N-f+8\T!7`e&sF.mOp\-LRZKdIdc-.
%),r,e*T4%o:ZDh.IB/<d'.^M?p,mJ+F*D"8n+p)VH@-=3r4/-)?0g5?0S)+8pL.gDqt#M&(Pl<A`id>Q_8TOKP_Icak0<dJjN<M*
%qI&sh\RZ!"p%n?VL!dt1N&'Up"m((.dVa`5h;K!!*7cN.@Ne@=Bjl,WU"]?3@C13d:h->5fQq?hHb=:\/F9$G20s39qAj'4$bORQ
%;X3E)C.N>0m/t&J?1*=La30PcUssS#Y[G6^[h\)2lC32A_qo?'2.UiDB8l-hi+P+:GGioCpF:^J2!Sc60c)I7+'9Z,W\\an=[oq8
%3p"VlCIT"(>N$:#P^\CZ"1bM&`\-<rVJ4@[%Dh7^:#L5lmk_3V:QHQ`COB-$JAXfr83A7IUFUCT:Y0@qqWD(;>n-6/MJmd_cMLcj
%9[PUUJt.Sk>ks[foc:%fAM%`?11B>Wq3I]\kaQ,Oc*p(RL*NASBKJm6f;P_<;"Z4]#\`Al3s%]%KAG>`M>!)CQ_392EBn)`rol+I
%9PI1+mi^DbB]oH@I=*Zo$h@oaNXb47-Vl9$UtClL@!H.<FidS6IedR.n[QNC81Z;i1HKg-]3NWqkiC/Zj!0GVU2))rj,.k3LZDNF
%geh]>jaq:B#3M##PE@#L;'M\E;P;'3G;34PaGo'p+&(<k[kh$CRD`NeT<WYoTjl50B51Kn:5BL,^I[=mesiW#FL7:-(#8aB4kcH\
%/<b0m@<sl^A6#`!*eS@rECEC8pDD2aFRB4gfmqecjdhiY$0,RaKl^PlKitU;X,:m$lf)Q_::Di!D?BBi>*#[b%V<,(&5eRW<NeMC
%iF^MQjflJO"Jd#?cGW,Q-Ro!(A\j,9k6afF8QV=IPk=%mXU'X)h0h=L&_7I>GKf;sV6;(rTrMP(l`s63Im+_9c$?W$K"SP>or;GA
%8<R[tJW6r4"?fNH4HDJ*"H!Z*g`\AC@S=&%fP&[maAa$]FrX7>GYrMWaGA?!5&qc<b^n]NlIlek$<JRb`amg.+r,"a48nK\]5A+q
%j@4A=1?29GpJu=J81`tnS&:?>gc1jDs11L$Q^,5(mgMLGi$)=m'b.l9K7uT%OW.qt=MieAqd\p#<q;r-Dig1McFQ%.EO1/,)MjnZ
%($APsiN37Q^P0\LTg:'T?\ai#d*RLb<O<b6EY,-Wm$7+<V=`RCr66!!5sX!$)0,7YBEF2)Tgct@N*g_iUAg\mYWZ/[INc(*7s`.n
%jEsLbH$.6=mDOMIq;]HIPcWN&_T/5u%Xt#`H0!]6^TN"eMFf>)U"IaHFPb!X8naC>pZq*<G9q?-#]6kPl_@gAd(HiY+AuXK1IIsQ
%_<1Sk-HNV)I37G>go%3MM`lL+P0e45:Z9WH]#T7@hsZG9_rXZ_@Nk]_j(YY_n6,_Nq8t7OL:bKL\7&QuKr`:RKIK!SqC2VoRW(Ba
%@K_:G:E!`Ybq7u>1gr*cQ2Eq)@,9kr>_V)rYsR&Z3QOP-!nEPibO+#nJ`k*V<B;aP3G]FJ4IdB!T3#94q;i=rhV0j#9XHoG*AH8c
%^f[0kMg?R0)(E>'c:%2ciaq">6f5N*7Mdpe:;2DamY2pnhHi/<\!>h4Xai4T^8+96j,`_S6]J2q,%!eFW[GA%MCqS^<VRL=W_;#2
%fIE@EWPV^MM+m("_8+jZX"Y@bH8/t,6YYdh_1'i>XC*CZWhBQZl*qTKh*K^)=n2lSWR[JH-\l3pYbCX"CR;jnd^'4!JN?guHZ"f?
%eZDPKf=)MB-_'@YOlc:+3.E5PY^"i8oo-J?@,1[g6J$:=d4a+X3V,1SCsmsrnT#;aB$8H7;k@?&V>enMpF.f$=9$#3bJ]sERSkIm
%b)@bJY0M:SrX0JJhh:OL_IaA[N\e3]$HXX>k$C#F]KFJr$(5pg]J6jd.X6EDO%bFjB6#pFWV#&;*KPnQb7Va\)6&p?_O`X[ok3f^
%Y?HDO$!,5OTGgi_LWSi".b0H=f#9WIo(4_J[<ubjj[a4a9,U;IoLQA0qCXWN>KqT8oWR[\,Ki4h[7lIE/[[]@KS1$mHd4<n(bHB+
%epBHcbjsE1eM<;IW9)Ep_nT3p6^Lu"Xo>BINW2qUjl?b-?GD0jL^6pUl17a[YEos/o$_'+]@lLuB_NB"2`@2_^C.7>_pj+Kp*-c`
%.mHOj/Gk,e7XF%p45MoqBdDk06<8Mqh>8Gg>g7N!mtCqu6p*0gkP*ec^o1Urmj;EWl]g!9ptPr^7`9sKk@:\G!'(7:$$?PNporb)
%J$ui4!JX3[rA*NP!b8e0kEgXC?%MJ$^RsH@`mNBQ]_@8.4XP2,WS5KA2FGFY_lG@n12t,+dm@5d:=XB?XhD>GZMV;pg(\'M,<e`%
%IQW(X\VJ&HASQ:J.HYt140O)TWo!!QXXj+#Wa26r2UD,1r1RlWB<&(MW7cWug=;3[D"\sNG($66r*4^DU$C$HRFR(m?(\+)4MKKt
%W7k7m)i=O8LT4XPW<R_900WA&67roJP7L[*OMfWKK+Cto5#^jI8"SOlWn3e!b-Wp8jr^UHIAV>=Y@E@c:po34Z"O*1C=dG6F*#MU
%5?.#hR`]46`MWQ0Fbhj_P&WGX%omtjBJ<.\E/;pYcM5]^?[Sg+Q+kT4ar,Z,g7Bo'd*/_Kf5l0L-JrjD%orMg>L*48ec,B1Tg)Ks
%^1<WpcjlUb3SB1f6f_HHrLrM\ouLQ+<#q-Pj=I:m5%5"-khoP!ku4*hbN*#sB87n\rr(FdXRb]hmV',CnWDqd^W7Ao7<s'4ip<Wm
%ed\,,1?O&b0]gt2:IV04cONgB4n7p:hX^#QnIm6N@>aXB&B3?%<G<,3B8>-Q,HB1(Gg!4g?`#6tp1a\*EOKfB`M?RcN\/O'&n\`G
%lk%.h,AXBtf7f56cAo-"rN87E5[gtsNVfGl3#cu[L:.lpFa8.dibX)`Atnk_&B3>;=dO(LR@Rko6Bl+Y\1YNIcONgB4i8q$O!r:s
%hV7Y&o'?p`A53ee>FljeP\qH&(Zj<nMR,ZNf1p:'RU:%mqI3BhB87n\*lhb6b-OGH,;O[m[Q2)7`S$hTi>LKhAf#)U:U)V2\.(m3
%M-Y&/Kl5He:/RT'U,[KnF`!N:ljtQKeg?&'cONgB4_\L+.&/i5387s7LV$P'B3LOk_TpZ:`^^kidsjG@1-m@)W,H>GQC[m%=?4*e
%4bGe"T1o,r'RfJ[ZdFMqr;4&K^Rac6:(Nk6\8Q#@.3#b]?3@p54\gQ^qf[.mgDe/_;31Tt[dRLmU["d*PWE<gNGa,,HSu!0HYhcp
%Z[YD/:K27;S:@n3'XhIuFC*k+.`TA;%Sp:`mT1i"qhjn]I$H-K`HYLB9ij'pgid`1G89/QXlc"P@XMElrG66"%',H=N;m2&3.;%H
%HW3#kMXa5R<hEY=Q$N1`S&'PN0g>.LP*o=/:QTKT7E,$)?ceh4@bgA>s%UK-e<T\_Xg=Ct@XM/Ckj0e=_rQhQ?SQH>0iBh,G89.J
%=+;P3j,mHRrB"<(\>(\@cRQr4W_3\)0g>:XMO@G&1H`,BG89-]G\dR!j7I]X=#9kg]sD0qqJXr?W>N*]9E,@ffi3nl@nM5N1%($_
%r'eT7X30Rc.`Oi%(/n7m:\oe#hc5X4eL&MS@XS%,k/1/WLXn+W<K)9Lbbm;B'a+8#`Ai=/D9TJ9B2C<(M0V<X3;\U'd!'Y-<AFI\
%s5b%3j##='.+W$10oiY(B$L,.<K'`Q:#Xu/N;I8Cc+7A3G!%\J0\,:TrDCPDcYZj8:bg8F=G9Yr^T/4GdkA&2(oK=Vrq>ckYSH35
%\4c3*(#sjh6d;uI*5>u@jTTfN.`U:Obk[`cEIT%![9?%fCt=RF?,_'8(I2S:0og<0CW?CW@Q_m/?DjtDs,Gm-]OH8IhOdZa\:*DR
%C[^^A`^>(3;c\iIQmMR?MK'8)*rh)o.4`CcqL[\0/&o8D@0OHJ.`S%RpA@q0GW:b&g59n=(YSe^@XRh8VR*9>-T*,<c1hFS1L\7I
%i81)'`V;',Ams)$7)er^e`##.``g_[m-gslm<4WEhc5H84)9*@W&f>(>\6hRm[D<@<JMLpTJ&.<;Ym`bE4_PT4MF%\%_%RqdF#_.
%%_$5ka&^be;'#(+=[2fKE;%N8n#F:m1@7X!n#F:m6&j%`5H,.%CVuS;?tWddDX##SLc^BA>oc,g9A_P,%_$5k6e!@\\iP5MHK;<\
%iSj(@VQC@&er0JqFa/]q(s\d8S3;5t]BX@I[+QgM0sg.a]/KRg);QI:_aA'Y:K8G'cKP7sl>V5+C"ChnFr'=u3X^R`^TS,+anq7A
%Y@RW4FncZK#np9n]6r[(WXcM)M>EKe;]S%:`BmX]gJM2;I"1;/iHB)5Cq_8\/cladHfC5jLYMfG+N7qh*H(=PZMK&M*H(=Pn'*Gj
%Wt)US_^"SfHHr`Ugtm0Ic,e,0_ekG'q.f`LWl&](iVh'Cm&ItjY,iK,+&n$MrV>9E332=`]0AO+@TM%<r\i!%X2BFn/sB@lO'@t(
%</7gGnorXCj/Qp-;]Y;M;Z!N[E1<)C<LbkD%X6Y]Io@@OoD:.dUW]$q?^%sr4siR)Yko)Uk]>\Vq;)Zia:3/M#.qdW%YAsj^HW+U
%%jpr9rJdcYPVA\-;a4=:TK^AbnFAJX=!%.%Er&Zb>`Qd20=4M9Nagrm=r<-VqG-J^eaL-K5R6/2eN"*g5;PG*8j6)U5\e/Sr!&p,
%R-@Q,'!U+$U!b/lV&jU*KuNALS@O`Xlb5:W6&8b#-M#VW7I#4H^s`6Dr6=mNUV=V#Fsf4Do?Cg4?j[d*$SH<<\=I+/-sUH)oK7r?
%h2nj,7mBZ2lS+jr'lpm<ojs2N1t<DDK8_F,AUVX<T'$=:mR&k/)]<jdaE.A[R(DjWWI$f#$P,r*$#nA<AA0fT`CJs0K@-Z,Ok?HK
%jO9=fi:\N,g+i>eN;CQ@*e2ZM15Ls<$mNGg=3)6F*e3OeQt#'.>]MUJ3gsok..fIA0,fY)8Ubq#Q!?SZl&/mXMTmJD'PjU0>PNF"
%8-P5AQ@J<L6HMH1*0H[]?9Fqb![)S:ca_<6OOEfp&<jShB7aU%]AVlcf'nEp8ITf"E?(]Z2%kdjp9+3F0u<?<:.((WR#Mk6b1JlN
%]5d[KV9e0p<Pq]ck.(n8'#qBKlg#Tfo3FR.9('@s'`20-r^9bdSm.\S854N-KDQ&CiThih1Kf.L1J4b]G=7PPfMKUqiQ<s4IS%cC
%6jF+;K/B`(NeK+4\=BK[,;QtuUXTY@V;9P2Q``O'Ff3*HLP.+pp//Ff&X'C@n"-I?"0M)*FmG_bkrc[pSO?"\n>0EcC46"/:O)8"
%H^s$:#b/lS-BHcmC+I,%7T>^tK$1[Wgn(a!/<2Zt1;e*j4m&%d`)0'!e>&YWA:-,[A!l^QNpP/s#c:,S&p0Fo`O7SEA?]r6k^SBe
%$MCod@W.6`n(nR^S*H2*2<%ArnQ-3*:Qs)^]N(a,*NEis<$=.=Eh24PHr@?ncK^7>W`u+(2V$/-Qol(+o8P,`k:"At/f#W9_*p8c
%giO@TYu/#&>aNm;`$A5!bJkNLmt%+h&8(r+b]aC<+fp!k.6_eXI])dEciNk5VC0\b1,6EPSTcfkWdAiif`^2&c9LE>CM^Lu2C@36
%P8#=E>.:4:j1d!*mRuseA';*no2mVE>%*L?j1ZCioGHj[iCRq!Mo8FH%n<P[Vk9s=ZEl$?T+>^CN3+LOW9%Cn'4*8Ort^@X]fgp]
%q=^.ifgipKo:F-#InM[u/[K);^Y4';[6@VCLPh2?0:bn4Q<=S2ldisWg#Iq^lMY&;P\M*%f12fO9!L(HJ:;5NlU+Q9CAH.Ub@@>Z
%8@AB\P:6%70=.n,OB`YB/ouHM3a;jcH^G1L-IM_4Q*:;T0R=fpr*Bf(D],GC3[fUU92GJn(]O?KmtQ!5m1Nn2+^lj%*IAl,QmUja
%YYdWkL,\m2Q>@b0AfDW\F3MW"b!jCQj:E+[guGP!R-;04j"kYZ0\e%Wk]`pskcj&pfW_*L?cId7hts+bME^%NBCBIHl>0q[k$l)[
%^J/KSeeG)e+(8KFOfJf=(@_=U3'Y;@ObjRb8u%P^mN)F*YSfI0k#>Q[^C*mWFZK?T@i4ZWgit_n=#h)G(S+Mcdo;B4gZr,4`Mis$
%(H4VJ(KU!O/,OtNDS*,YW:H05&,VoY_HV#i]Y;#,[2^WmmXE>k9suc:eb1iV0fYT\\>s.L\`:o'=EkUqg;a%?l)!0*GEks2*=[a@
%Qr-t31s@8k5.>l%U&R+XQM;$t_p_'+anp'el_D!t05Th7KjJ[faR!4thlk8Cg8[!=SE(#uCRrZ?3?`ZnZG+j_Amg)$eGAk.k;&Ag
%m>>.7c_n:ioCE!l^G3CZMJD:9.m?-r\<F=LK"KfAQ=9G>?hZ>2p"+PU]30$$E]6GdLV)dl/TS=ImlBh3m/*/s*[L0`f>Dj&HX"+<
%EGsSbX1dA(I(@j)5:aErBBcWZ9F`-@$f0#s67hC`\T4fo8a;;uf'49[q0/+c\Wc>Q9Meg5bI,d8c,8*"@_9*P=;%F]e)e'^Uc*^F
%</Iec'hZZ]kM%it.6Em1g3heq!qNDbS^$p]p8t4#SmRqsUQlRAE.?0pDq*BF^OEP?SF!e,@EZ:%7pNR.oh^%de!9O-9>$U3Q"7Fo
%YIrsioIbamp$M-kd[/+0MEn'cmd4QH49UMl[ji#4_!UN0Kr`r0\%dG-lh.[?C4CN6e)c7:muRBUr%cY=^<I*G]$`$>UM?@TdG!Vi
%-Ec1EqX]EYpft#m]GWeHS6R<Y0,o-"bDj,/qP*q;$r)$oB,i!=AG>1G'$JijY?j$0>'e6E^C57JrnE$,F(V]LejjLk0n$d5?)4[,
%^KuFhT+YrnR?nZc4'!RS^T5;Y_q[VQG*cF3%eJB:rJNc!1g?MHD%="8;OdXM<^C*f0'."MiX7;9H[!5MF8(n_;!-W.BAj)DZ+W4*
%\(hGdI?=?amW\3`Mf&CZ-dt-2PsJlW1i2"uPiM=Yp2g1@+gk=?l^>!;q:+!ch8ahZ,;q*S*#p"LMlQcMQXY/A&3]4BGUK;+JmII#
%;ouY:#1Br?$>!)`)Q0bD]@EfqC?t(&VKR>L+H@3b$MUTTS1M.U+$6*km&0KE,B%C:%!/o2PLLiDs..HEZ;^NYaF6<RL6:+hmAbF>
%`)I[8"$L^+l8DPU5tbG&Mt[tMlp3<>\?`VLaF/KLjXY+fQggo_PWM',0(\VDppKpqGYqR'k$km=YFiH6HanmMP)X;Ge*%2OJ@1>Y
%ZGiI%`I(*WPqse+2t]kN]c>@0MDs.W\Ct7[?feF,F,/#Pf>:/CNR*$k+4$V#2[OY5Fb%p90&8]nqlruD6t2SQi`E>QG-[pHkATbu
%d`8i+SP6@n>tn\^go]]K%ke(!F;-qhjA0[#_VE/REjej%jKZ;rVi^k%hC6*"Y<F_TfSd(t]XuBh2R_Y.=Ltm6EGDepE8=dLduC_>
%^&.o*^Fbm.EAa"DbI2sRDKaI1:9b<Xh8SsR9<B$hM-I47rRC92\ih+kWNs&676&,"FGp);XMEg0Q?.c''$/;9:XL0I5s&1>#Wf-f
%Bt!Q.Cr1:4LWh#tK,_W!lCs8hUEk,E8:G!7;:<TJh-S.2%n2_"nbgC,ALGr#2$_gge'Vt1rG$?&7SfAZ?4Q<d[B$4LD<?1Fgor-4
%;L&!kjpVq+jBJU#AZggSG*6Q'<k8Jk'Sam"pmNml,<t*A*Z"<2:Wh8Y"02:>Z[$#p@khsr5J*ne'jdIm*U;JMSbjaikds.WN/q?*
%4X@RnIN_q_T$tY%F5\qD[FEIAokeG*^0JmPhsYV5`BI>omh`+L_UCfUQ9NK(mW6F(F#TZqFmb(Tm*84Nj"1mBmYf\r_Fnb9*gh$I
%2##D^m8CnRDI"l+l4<&:>9C`qDW9]S<4C2g;mQQ0SD@^gALP4YDg,:*Kt#TC%SR<,beW^f%K-2&HK/G,/7d(54\.$P!RP_&&c+\-
%j0lb$:X;,Ka8*tb4hgKYeeBu=aPC3?i8/_>KY^\-j@]AglR5]B/aW0)980jEq_[/L2nU>9p12U<n\p^Ya\Foj"c6&)p+tmpB@iPD
%Hh]q(::pKNk24MR:5HHRlm[/Ug&-O\0_Wl`I5>*@h71^XSG-Af/m]@bHk1Vcgd_)EEI<T*2TsiJaa/=0)DI@VEjbn<AC,3hdUBt`
%:I'RJ#DLchRj8nrkA1:I%-*a*[Wi/mE_F<H/)cIKNa_ru:_F^#(;LVI2Jc?d3KV]+=+r03!-I=K-^d\905\Cb-?t$_/\Z4hBu[<Y
%ZLrNnc4oOS>.u2qXf=>)ikE*ge=6'MX%3YJ[*"*irQ"lRlg!LbJL41Y>7FE<g'9au=,]9O_rkcocJs@is60nLBjPC0C$@$eXk]2R
%2e7c-+YRoE]2d7CQ2l0QHj`#W1uPjD*%^.+-.P[FENp"&_"0$jT-`E:.:62Vm6.@/T4_r:2R"6%^E/@B8e-Ob-0iUgc$-1sheL$>
%*3HrF_^;MljLLn&&Ag7X:#PX=I/3.JjD1Z9T/djTqcgI=XDN9eQK_fSqi!O$(MriD75"],mA\:NV2c\[D_jU:T`!D^laeWaRq=p0
%%j%5\jbDmF)*HR)"-'B8?<"8W7gfQH)c9JGM9hej76qr[DE?b3RV,%&jsps(7.OXE%]e>I94JtXZ5HLbd='g3=(If:l>K\jii\UC
%oekjK\npMj[)DiMY0prfpB2@n_N\J%I"sTZ\K[cuAQ-D$Q<#tRj/2s*?eadf[c;:[%Q+QsV5AGp5LPmNmP'(eYc8;t@pg,?mjHIf
%CTdt):Z<sKQ-OhZ/"*a&nd:7.Y_6?F^CM)4p(O+?T5HBe%oqr<dFS^:VSa:B%F5=kQ9_'ZD"=gk]?lruJC(>MJF$T+K(](F!k[TD
%-%42-Y2q1k5<?j"UuOF6K;]9e4<HiLVrkf:6Tu[F&+-ITXu?VpaFoEAN4Gqp&g6B3?P3mfU+55FX/`4kqm:mgC9.D-gaD=Tq+oWr
%nRQO"MFZtSE1(K_d)EtOqY[_oQ'U^QMN\4H=T^]fldCd9p"u'UQ-ALt+hfSB5$i&D4QN)aa)W++@gFK0(YcEQQ)3Y5rr)D4QsVKn
%p)-s$WOc1ZX,eqU"MiS2I<BQgV`,!KVle\GC*Q[QRI;$A@WB+h==lCnW;"i3KC%?:Ah@)2)a4sB#G97?Z4JNj&*?0R4RZ/cnt=L)
%EZ`WJ]T!_6?)/6Vbmg]NLkVu?NX%Y"fB24#.[f/qR@Mj;NoT9uDKNZ4W"0:#<cS9o;[fVScWl#`n4HK*nf(as!@+3qX=TtoQrR//
%Q[97dYX51fj8<IiM(bb&X*=/KCqaKVlW,,*e]YJ__+,Ns>ZNZ'#(MCk*bE(]E[=e33iV;o5@5IN#JQ>IJSdQL4n52-.6_kA?sU54
%aX9pCT8Og::Sh%]oU@S$orm6-UVTQ%KRIg-AuclK)u'?AI>jKM=8nmkj1rFd`$Pk"XaD,[K]>X*^rb4HF_@'%:;I9"h.K?jMtt6T
%I0m!GCj[%pi8HdNHlCi;3;RojNOO,EhE%-KZa8*8C&g]gF/bf(67TCV;6?!cX,)D8n=pCfCkL>P]Fo9_=:do/?&6[l?/3X#c'=ja
%K5_NFV@0PpU-7Y1CM1n`l_p4$$ZiSs@W(7#cQ+sQ"jN<-6Tfa4_8adn9LH19m\27>\D-1`O#AH"D`5sr.td(-qZ7(V)N@8jo?mH?
%9A`V@WBM-qb#e#gKM:uNZUGn[,?`/sSk$'TQL%.r'jXtea4ECYgO7dlCa=5HIX0:=\*(#AhmZrVo&-3H*NQ9f[[UViiOQ5dZ-dp>
%<c;kO[V@Il:K"`\?C;:`q*%XFSQj<dI%96+CCLd_r2rHIE+=g\qj<"*RkM3fAds'Vo-r:=<JD=LD>$mgX?o,tRG=:?(>GF-;sq8Y
%0Boh&_#p.tkCki</Xnl2^"'[os5n-bgE3B%N1>g`OQU6&j6Qp@:oOPC82#T@Y4O/$`a++B_WDXM-.&7e-/^LBU`OlUBml'u:s/Ga
%8"eAE5'<P%Sp2*J^^gdFPHqEk?EB_&U;Re,[nBDt_C>7TY7%=?5Mj515KL%#G-8WO3F,:E>*nnK[W7KfYGB[%Ch"j!mQ2hDojP"q
%4'Guq!)AhtKa^#]>l(b`^'(=e*'35K'&i*?&@BU-STdoNc'lL=XdN$a[m0A"j.$aiONrCdj%FJdf#.'LGL.W(:Xm5K:E]6t@cLKm
%W1Wr!'r0j/!2>YPYsaSih!C<;>q6Sa@&%SO\=Tk904$b<Pg7mhT)@6a&#Df*6g5sa8A0scBnPFJ;-I8YH[I.gJ_m"%.<4fkE&p!O
%Ok<&m9nX.V9!"',q`t;JQf9FShT$$SMu+m`rKKhu5AnP.iQ5..RN&P-%9ge=g]qZ:kH\li]B00!DU^kj)c?96>lBQ+TQg+p]2mNc
%I9b[,9DG1Dfu)$kUTg4@E9gqSFCq#'gj\Z=Alqg"TgEb$/pf)5@&hQ3n!T'H7[J3(G-[g>Su1Gr+?<_Rr?7_$@^Eo%m'bL>_pttD
%\3`YF$gb;d?`8#Hh0.pIO8p[EM!aQ;.qiI'_nOY'eT-.grua+4]AC"!Ud4%,FG^Z!^MXEd,Gfp10/<h>WP&L;+t"+[JN;@e`t6rN
%R&&L=f_g(TjS%s'jm:%UrZ^^'Q,>gHNWI8j%%dC=E=C!#a+;I,*61J&#;UdL*!<814HTB&iu$Q)NWY\63KAs7>R*$6EZ>/sXRe^>
%:QAr+q$VNlo-_R5)!c5_aSa/"%*Z\9+S-u$1&+`qa+;I,*63SPiB34tPN/&1c'&b%5itiHNVK%Gc29O*A?telk"h"IkkPU-+S-u$
%0gIJVJW.op9I>%Rh0ae4pO7M,:.:i=drPGYgS1><d(1/_5P(FMre,,?`JB8a]mkFe/$,kS2?8[%/LZ>M"V\3I%5uYNZh$Rp.sG+K
%\T,&&@5TWb\ad@Hb9%Wf2892hNR\W0K[jh(;d3Oua*[<`_V=D0%j8I_L?U`(RuR6lP,5]r%i-d@[`gCgS@.SV"H$\^/bNrt8/OdC
%C4PjdnAbLj"\JAA%PE&d(jnR2$>[hu+ZZ\JU/6,3^>@9S+5a,ef)!fXmHf)$Me]ed7,<24jPl6dp(7L@FB@edU%IqLg!;%-eD0Ig
%FWIub]W^C)763^5N?Ou%3]7d^s.jF$QnOtI%ga(3QtHACQ"G:L)ne6Ojl>RZg!Y:/*"?q\/q)WTIQm%6P2U)NgFntod'.N;"srF_
%/f'6c'7;uar:A$C7UB)@Y+1gFjaKohnq2HsW'BEZq7C2\Jt4H3gFBiN4!Jo@o:MGjEN3s@4nH0-H(#W-dac);k^F`Ir=c@N<^*l,
%4M?!cSB&3VbXRdTp%M_YlY)cOhiIMN,K7"+im(a\1$meKp:2*1&%IVk<IUou>HaFk=?[;D\i<HcQ6EJu9'/'NF!$hE4llSU'H[Rq
%TrE4DdC=U#?!V-1L"pG9gfRoHrKc/$a<h>gN<sk'!Cu>QlparK<"cj<7Q!rga=j#!_e-#pen`bSmH@#M/$bR,jSA+b[8Z;>C0.hC
%%!%o]YZ5HLU<2V2qD&Ec*i)K+;lrJI>c/[/%m(YdlrNd[jJq:"2#IZZ;hdIaXbTH+*#+R]@(`U*Q=-nlg[FgLk>ZT5gtlu+I(a1L
%:<q>QNAggL[E%0<,hFN44a;92cQ'RbMe,-qN^mX^7!@G9)r8u<e?RlfeIK$+'8=_a"PuM[p[l8_*X_XCKq7j2`=F&RO.0k7'J?fl
%IJ-WB><:O2A6/hng4`^dlS`u4BD94&I>i__?,^\%7ota+^Z-l6VT`gsVa_H^F(%&;nbI;d[rM#&TA)?9]pi5_Qfj@Pc/%h?YZ&Nh
%>^UT!7[[It1jA-BmIR6doh%Qk^kV1gfESUr?o"+#\5iF8/&XjXDZ+h*eTsB*2uXr$>0(=<k#5UpC%*.21X#O!f2H^3CrQ/3/\-3V
%]H1$25fbOq_!-0r$JG'UCtMulUK'5CQ--t4gJ8H:K*=C7>,_/1X_OGJr:4ScI9B\o@_U_o]$j4bl1)31f^fl^%kJ/hZ(u^_bt\;)
%_@CmAL5msY_)KTo1[Nsu$ej<@9bf<!LBmVbA5"bE3DV:X)/6>S)!(AFK26ipU80,>SCAY)@5JdJ\`ClDpkX<:9TXJn3YqrDlnSO6
%"DbES!Jns^I,]@R0=/*K4$Gi)iSB3@h$\[[`H!>nF/N4>0dFg-<PegGS!3f0+'.p)8[VWg*-MAR/`pR[V<oM+_UK4aDf+$YqsVbF
%Fo035Fb]X1Qt1?2&b_k$+$g:cHb#3^`RfKKiHroEW6gSr(=lMFef!)aRO!ke$8?:n9p3/+*&HJ"(Rr2F:H`fmZR"o<"S/Za>S^_D
%q]]-^X)"eT[IF$`&i6"aL+QY34+M*iJ[Oj[V:k;kaBK]F/BQp4p$+<Oq]"S]AS7Vq,O'ejU!DKG@2eE.mc^df"@gY]ZQ0Q"rYG>k
%J*IN[](k?ac.X1i;1.r`B'g's@Xe,eZZ_+3=8M!Uc.X2Dn$)^_GK<_;qBt\BAtjSBdq7tWOh#`-dq7tW@;`S65Af!)Bjb6AjJU6`
%3t8Qa:O_$!Zd[9JnE-Xn3]i>fI8>=GXL$Ah7)tjj2XB]dbi&!QVp.7a/`N7l2XB]dnEPDldq5/A"r-[N:RcKM)O8G4r3TU>Vr?M,
%k,6Hb3t8<3DgpEAZd\,TXJ9gEAs&WR^?b"):RcKM)Ms(@kA8Bs3t86u]_Q9Jc;#V\`KQoPlg-H<^UWj`At>IsF7I@JRrrlmiFG`5
%g8qX00Fr/8kobQ!+J:65o$_3ASH]cIT2%(_G+'e*Mr^e\3]eo+o?0q!F`s4%]$BH9brRrRGBo".AuF%Ve'KO!^J'aZcU44FFrHs#
%9pl>(,!-5knrtSE+]-%^@W-_LXL$Apn,G.KG(T';bS'L&E\ks8,B4PrIbLm0du;ff>2L3/Vm2ci-`Ndb4"V*B'8>FD-Wh#tR]1b,
%SHa+N7)mi[ZI><^g!!6]F`n\[2\=@'%("D:ei*oD^Y>p2XTef_A@'ER6]-0\dq5/AL:3p;5Af!)Bs95MY7$^Y3t9Le`a0H8F`n\W
%r*uo<Qo[;<V<-@q!iF7<6S14i\q$cddir5'$^`t:%5S.-?5G;<G+*E:2#=e6WO(&m=1[tOJ;^ecnF82VfP3"B0(k..9@fH$O+QTu
%r@!^coJ#>!4h41A@@`>o&LV_gSQ#a[4M)Z65DsjkZP2r;7-UO#Zc<mH1S-ZQB.8Sumlmg%hpAK^(GQNjS%3G[Qh_C0li%,Ae\s^g
%_eMBEH$?F&;"Ec6Hp<_qQgKEj^&3?Uq=up!mTf,thaS_V^heuH4E,SfI%RJn.eAAGo>94]`fgrfOYH#pGN[C<H81ItScGsJm00#.
%.T<N-+#B2-C5EVt$Dm[t-Fmd1H'"[].+O+N6hP,F*]ZK\*k?9I':P8mr._r^P1no5(<Hk2(dtu-69?DCN6G,tpo)T@O6@G^H\\G[
%hdT%5N&-IH%#X6FNaW"o>oKLlLPq'IfFN#h4102k."QJXFQGf&Z*s]1T[g;="&LIeA;=_\LDRG!AG66P,UBg7*i*&&6Q5*#'G#(:
%bpPYgM(f!Xp,d60iJ6)q2u0&Zb$KR.RbEA5jG2$E,ad(^CH$#MT+p]L9f[B1rn2TB&Q@]q:>&m(ILbgfS+E[1s'@fmjb3EO+FSFg
%5K]MOasE/9q`;Ed%3K!?-9`p!+!+>7N?S6Q'd5+%\M.^XC24XW)*qr%-tSB6!;Itnq9fqDXOj'](bIbUCCtENS,8auqn;o>CCkf$
%Q&]LXl-a&&KH;[BbaJX\.cofZ,86&@9M7#L77Xud0_LVJDPoS,QUQhQN1;a_h>+Tf2.?%:gdc\$KSo3;<.p7:WKoWlGS6,pOsX5A
%*A_A(g-,I<`sg/b%7&.r_`'_G0QQ2tJ+/h6RlSk-c7]ibeB;@J.a$WM7;s2AoiGAfrE)@%OKJq3CP`9k]M48ood_n7/(gaKB:2dD
%dqi%I_*H[XoHq`:/`o5T1X5RR7^3&;RenpZ=AqC_4G<N<c6SG2STlDlSk>s2P0uurgE43r06KcXpD:TYZ<s#nlo5=q-_P_;Xa/qY
%DVQO[3M&cQ5l/U?!^J,-h9-j$2.X&_p0(X!DSJstlgtN<rjnDX*k5YT.c"5`<Sm:=^0Ft]A0e_B-1#C-ls"19h_=#p!E8^"cYTjg
%rQ1;0r'OLe]RC!J8p2,m*:19t5'qT]50k6dG<"5Gl1rQdl")0i3''&c)_=>t?qt8kp62[,G?_<Ipl!p>3NkItHX9<M-.4Y]ZnaeI
%@*UK]O*>i-?csEoXa\^I2rjZX0dKqd3>nM\T)WF^Z3B$&aRcV2G*PcaMo9')\Z?6p?#1XuAnq!.]3,'1er0#pqB#tBiP2B6jTR4c
%a>*fV";fr?/'Ui&ZPkF(,I,kFFDm7V<!J=W]A392RRGNY8b)X2(JRAYL0N%?5_OK<V>suB7(65_mPVjMe+!Cn^E^W%B8d1IrW@Wi
%_(T-qqKGnrSjXZm\S)^^?GJdF<Ct9+/4<\SJkq&$KS1PLK(BMR=cn-1(g1RV7b;8&NNN7Ud_4nWCIb`LogBCuS*:5^;0:6Sq)^Do
%FZ'l>KZ\9aD.W_*D'l4g9pB2Bbl#B59MlG6U5?7Fq1mYI^k%oM!TC+,-3?j['4a$WLM%Nn+M3ar37GqOfo7g7!>[H:2DRRA,G()4
%JgbDN.gs?Rj/%FK#nG`B(t20?&u)*NNb0VsBdSZCR1gl:1D=@Z_qfALi=`.7_&s%Z;L/2VM)sHj#mIPd+.=bFdCXEee.SK&"'$Tq
%+nNbo&j0,nab!%b9FN<N5;bkBmD$2b/.$>R)_iKoZN0Z0O]QrsfKTUC2%_*b</F75@8RW20H5T+E+COD#^Y"?NW*4?LbN1ij"6([
%K<rJ=Fr(Dq29d2='!X\[/gAM57#Lklb\==)A*0MUcu_$c8f9ST.Zoe5)Ctk"(WO?78:+@c"C%Oa,:]ja%'pZ@K[+;Ad1@S]dYc,R
%@T8U*Wi?0D0VU18EYOgE;aKnVJ4`5['-]*`&<0<gMSbQ@'LC1cJ2'g<4*2&gk+fJC-7!\>8':E074("I+>+i-]E7D1JOCfXJgu9_
%&DK/U$8dAL<Rh4"lb![W&V5$:n>b:KhU)IgTIK01PSO7R(,SIrQRn4l)$5,H2,9jg/cql3*g4OtJ-sBA"=G>:9FtS^._J5q6PT_)
%!NO"F[ph\OFVQkP?K*tN[m<`aX2^o2K#&06<aF6`Q=N3.$&O:K>Dlnk!+XZaS00M&`.TCM.U`e=o-+8j-sZ9T*EQb<)E'9#LmF-E
%d34K,=D66qbq'EgG-J2>qaD1Jo_(^S>rGg$QK&$a)2/[i72mKZ^]^B`+J>SW.D?o[!075LP2-MN?aEQ_5ts"5LoR*c)jgkrf-Jil
%0VU2A'Ef%:J>M7NqPU.)N[+TBW6M@L'r<[A!<fA-P$uUdnO+G\L-3BVO!5qQ)N(9)](-sF@)JbPJO_1B&V)h^()R'5l3Em&#(23u
%$@d]\TW^lf$8J'TXCDW@Pt29W(<@mdlmL5X_=&M?A5uJU-J/NA(!-AE!:m\9-ZfgY>o_@L-qMEB0NCj*1bp.=#Fb1u@@DjdJ6j^e
%)VXJ>Lk6.d&QD..g2];a"aET?22!W(6r5DL_&uMR+R6922gIpPM6O@VcoE=B<C*>ZhAD&@)I,f:[Mgi]Nbf4j"^-r.$>C+a$>-*6
%W^^#[OB!8+-`J6MG[+O!-@fE"AXrg3*aaLN/JHh=a71p1#s]CI)?A1c3W**t8Rj-P!!GQq-4WF4"Uq1M&IChHB\2MUcmh.DQ\Yu:
%QY\Op5iPf?%d6fIbYd:E.4P>.3CtH4<(V`l)A4Y49dNd_WWuTucj5FD&/co?M7c+<_?$)*O;6WL'7#?=!s6=s-NK!H,,2`hGB?D!
%!&?<T8`3R9@)nt,"mcq_V[G)N3!1]lNi\$<Mkq:i!p]j@JD:oO"_Xsa)5r(g5QE96SY2r.U4EoPW&t+&!\=gV:#tM219V<sQ&&P[
%QSd7FHghCH#on,I"@q"'CCYA>.`.M#;:#=7aukG0$QpXV#sZ<96pubWIrZ1cI!dPs?G_CB.ns?41kd\".VAIFRKrVJc4^2UULkZt
%C5.!VCBA??GRDBK7ar>q"g?m&FNYcUo0_%"VTBA6&N7&4(_gZJJ`orKE=Fu4-DVfuM=BF@#fn2F'Pna.#('\gnNEWl0Rc9Z.oCXM
%'2i7T9bUQ<@(,"f@bNY4!.6!3`!?B"9[\nLJ/Ke?+@Ju_ES$qL'*Xt]32SrL0MrR7_2^bf9*>;s)+)\di@$F*?6k+,KoncVNr^ad
%0E[$'(XXR0RqR)0H,-'S<A^3od\Qr*,Z'r0M?Y=/2?s/U,UDp_+hE3Yb_,s_KTu_4D$?Yd8&b]<-c2l+6mqOH"hd606STljO<T8F
%&uR]N;?WE5$Z'sCP,aGO%B31B_2i&/!CY:nWK99^5QDHA%3-K#X<Q(`ePU^NL;ee__/a6JK[*Y#AVFt);pj"!!f/JP4:<n-S+Vs"
%i[M1H%0fmEd).FBj#ETQWPQ;8Lb+Ac5Qh;19iGj6iW^eC0kdu#k6/,U3<LH3b]$],'F]/q-6Dhc253K?<hjlJF@RP\;$Uj3%F9ZS
%"_9H"]>;Xu#`SO$(9GTm"H?$[,4hrZb^A#SC@h\G:(Wq*=YR3_^f2]p(s$&I&1.C*%%-^j#6nBCPaCB_TgT$<jomT4W9aKl5Tg%1
%/5R:;$ROimn]k/r>%Ii2+KI"!:=F<;!WqIH$O.eA+:]6>E=*F+^bQT+SYr:460Js^R(5,*+s7_R%',@1UZ[]@TLp%0Rhu]uXg7Vg
%-9B6M#e2<pK.J3&DgGh#1Un6A$nI'?6e'mZl5LtW#_HGEX%mIJQo,K<>n;m*"4[8^>m*GpFU*kR(L;&U%YRup0^j<rBO>Q+(a@cJ
%!\^9!!c>j^Z6;UNJO"`)(eB>ha[m]2LfWOK!8?uH.1i?j,#Mj=KrGpVTuchg.AB7"UZ:U%@YeODblSe%WanIF-gP1#3a3Jt(=>le
%!MGNBiei'6Ebb$HFf,WY6!:TtR'A^]*NPl".=uOL4-aJl<S'\)r$1TSZl4d>8-'H7*(ZgB1MqY'P4%N<+<"*kp?o:r##[m!0M!B+
%"26JEqgr@qN"?W"W"Kt5j3;NRH3OjI$&%"I`4ohd8Z%\iojl`O`c)EWMF#E[;asRs2(6hV<Cntt&!8Zb8dHn%+<V#HStQ7`@bAiQ
%o,<>(a;+oQatuX7i8PUI!Jui*YTe^Rfp;^QNH[\SS*b=J#T08YLDgr<SA#7=T1JW/:NX8N0l-uLPLrp7oeETN'B40,#?cik*hd!V
%;4(&a["4#Xkl\d]"i1KHc2g;&fF*9\;&$fg<2o9'':Zjh:kJcQe<j8pAT29T:&pBm[UkgpS6e[SNhWIK:UEQHTaSeJ113NdAojI?
%Xrkl4QWRGn8iMd>3MFF-)#D)l10X<6+GPY6]fF=LalFCV,d7Bt4N23Si"lfm"!4DA?e#Wa=tko8Wk&9Yfl3,mOG$YcmX3KCaXm(`
%Y&Q4Z!^$ZM=qmil<&/-m9_=)gnqQ'iQ]t!i79)_pK'W^pY$qYWg'XBH`=T%7@0/-A1MA;$GU^L#%)`8`#tQ<r-[%VsfJcd$Tm\3.
%P!eN.,33=,D2"]PU`rf?E!*<U%O9>c#QrPS77L:W-F-k4E8t':J8/FfH);>%Kdop:AS3+iIBu*o\%DsA%uC;Ep-caSU+i"eD<Zne
%(k.Yp%<U(0A#'.(%SgW4JNYNF#,5k"'6L(1nZk><\@bOp,*J]K>NQ#Y,-5O#Y6ABG5(VsWS0ef-QPc,D@`V&NjElT@aG\>lARWEr
%I"[V!\J(j@L2N),B#90$,%s)E>Ck6P6kPqET=E,I7>"*j+D.(FZYOFQ_mCM:W-T4KibM!2PqG_Lg0bVQoVKV1ZSFM1Adi=T+,3Ki
%<l-ZadqDRATn8#M8Y)rTCOI$c-;#EF3C_obg;tK47%'S_GT6c\#F=iq![/-di#A(/[Ldt"H5^;/M?G8?3h6G6Jr&VSam9]e^f)&>
%'9us**UF2Fe2cR16kqB]?pcahI&"Wg?jas_d^uSgd)FMO"AR0L6P?c!W+u`;P:/fFNYBeR;lL0<APmV;#R:'q$,Zj$N[LBUMTe[=
%S=[gE.69W;4D-HRJZb+=\jA0p7fj8[.Mjs;0mQ@@AAO!8#u'B%CAitjOf1N-<KpUZ$]?QUW^AW'3bY&![K?Cri\M2gRZY9s6?('c
%2-j?%M(9d'dkuHk#.oZ=S-g"(-97tK1T&24)R;Pt0aL'[!J6iiSIf+.<Fa#Q%%SV?,+X?\Wj9k5B&O*7hI+nH0lEI$n>dn"$.rjF
%%C8b;lW##<CNL*oUbX92Mh*V2:SI:\57f?`gq?FacB5i2A-a;XU!agTKqd5(U(_-I_n>;h.<rKk@MD4G.0a??@s/WHGuqIDVB=%!
%KmD8X"2t^J2IW+q4tCYaGGBd5l7?0*e<=u.5K74[ak99"2$9Qa[aOC@%!Cq?o0!JYC-$:mDn8e&<fL^Lin3(;K"u\G'gbA&M.9_W
%KZ3nf'-UnK)UGsE#I?V;aTusEZ\>3sMA!E=\4X]tdNg"m8</8$3L0[VIhgR590=72X5rcBUPU`3'2an'@%-"qn;q<'k?M^3H;jFD
%"R@]KRVfXDS1ktSB3kX;98<;<UrGM*\#G1]erm:(NE2_46q9a*^bc`WO@He0m`(DcemOFk@A.5@ZI$%+E_iiIg4X:'6p7saqC:r1
%R?Bm4C>pL-"."Xl0G@i%M?5\oh356,=E9g6#\G3ZMTiLqc89PnN1LlB24auXYVLR20mCsI15g+Zbg@sE`_*X(N19pSe$J??R*!V>
%]3^jV)f6F\9]W]$KU%\?6FJWNkXiJp_6[VmN+>@g>Oh@4PsFj*#9fh?R,0SG)XeOtKcXS8#u$Fl$KH4s-#Z[aNs:P6roQ`Wf`4tW
%hQjr(5RU(:4DrBDU(*'D1mrZ-2N/dd@)R,6+Nu)dqlU099,@7W:*1XtF;9Y0`!DgKZPdKnN'0bN<%+"a/e-/2_3fG/7#E#cZgp3q
%>l8!L]54iKUBs>UF!GX]9Q3KT:S^!8]#<&295rX!;@?&:_Z5b!agqp9@R[f[lrF1*D2e&e7%f%Y@q$,a(eUQs0Q>VX)ce4IBf$KZ
%kt+,b$6e>5aohf]fpNCtAh"+maL8s)W^q2>3#V<?C^BMh:X+)&#"G^ECLkEtR@](eJ2HTr-E1NCk_'[J;41HE)4:V&Td,+6qcXP`
%^f_bRgIHZ/\BnsH'KNgA&X_)p3OqU_E.h[54TQ_Il,4>r+I!XL<_.$WF&$aB&0uSgCb2qJ>1Nq2fpq\cq5tXXBG)@Wd*jpmD!<cu
%SfHVHYlW0EK:`!\\mo3$!0bCn$G2RR-Ya?.;;ahXJjN-d?F)nc0%/@1N[ufhL1@_3m2?4.>BjX19U(qa0X,B3G;5F];f%g5B]CqE
%-V9HAE9'"2AlhAcjWt.1$YHQ*h28*D\!bs)fM$/"9W#h$<+7Udr$iV9)4%>N#?D#:Q"2./!<g:Fbk-kUbk`kF)sno]9f0m(Ht^?T
%FpbMa14kl=L`t`-.!PlKju"m'!'rVBEFOm4NoSenWgOSm:(T916r?tU4Tf:(9+9Sf2<>3uG<$R;A76Hr*(TP;!4M]$J`[rY;<\*1
%N2a.c/E4_r?ciBL"35f6J2(`Z\9L=?bgn08]7)Gdr6n/a_:k,U@^\h?&/9^(CC=aq1C"=f,j%N,#d7'\_IK#F8[T-Y0s+qX*OE_,
%)cgM>0`!P4MNMsr0q3%f5E"2K#3lcr(lbA)AN$l'1m&dIfWFoO0to2F@fRjV=Wj1FQuF3/dkhr0c"S_fEZ-9EOo0N`LG6Lnl:qM5
%'9o&.dNX[mBafN2>1R=,fjGmC.2YXg7*N#?QqI=,N2Mb28R#S2N(Hj:\f0UmK#T\]5V6sWgQ;ZEV4%k2UeB]mRiPYt@?&:.RY?sU
%b/2oua?;W.?Xe@=P=I;2X"17e[SgI0!b+nI"*%#MJuOnF.lM]/<=DMR;\*:V:tAd=#j8!t)VYo-Z,X+X(04I3(?Y&\c,<sU+%@"`
%q*]jJQ85e6hLaGOaaVhPk2f9Y,'@?NgRMuq/;D$_O!(]$BBCYKS>jA16jNal7LlQVP6GACD8@c`Z?igdc5Mc&9a`JXQ&W?-P@o>&
%D_aIZ]W%T1TWp#+;/]cP\\NeVAmiF`Nj<u:\;m8M`LBmfb\Vt^!KsB;4g>Q>4<%m@AbBSBm[i<0GZ2Iq'Mc(o#P*d@_oAc96'u1r
%%]Y9q,-\)i!Z:d8'!Xa@67b.t3j0GTdBW266,PPr0dVn]5T7u\M+Gt`iY]c\Hi]C^ArC&1#>ak99V'4V#89uYd55,R]$kBtrjsH'
%8e:FT,UYtkN8_Q[e;<j6^l/PjW/E3u."E%97\V*='-(*S`E](Yg1hlO8T#BI_38W>"MA/ZP9`csSco3W=b0#t0Hq@$UmhE`,I'.h
%7Yn/&&1q$B>XkcDSgFn&X['M`#!6mNqSYWQEZrNDHNjlo=X)Kc:V=J\D&c>kmVG9`O^tn_LhE)E>o;SE9Fk,;V`W".gFs\/[@B^^
%5:81C^-s9HZHOeJHg7!>K;Y"n7);5q(P0AFeO[msH;Y1.-$DH53E<I1'Ouu0@E]_<@Wqi4Od(,F0K_+Tkq8&+QeK704hHUCm$N#V
%L)jpoA0iCV7b@_T'8n-s.;?BWgtX=8A_@AWjN+nNS#8f3OB$?DRP8h7H,ZJu&4;V<_"Qq\0?DMSNp+K$<oN=G0rAII<HDhU$O#0]
%cpUbgK_7Htj:@De6",n$d0CrDU5:3!ib2&TXr7H_,iK5HX_Tau@K'Ph!5qE/1Rk'%Xj\OY"VZ6*4?O3iL*N'4Qnr-$"RJoOG7m.B
%<b``_$oK)];C$f?abm<;#b]jC-3+7jj$n`:!iD!P)9J<1rEB9G]1+k$`jS,j.54t`*;]M^CpI4tH9o!ei`S-:9#fiKL<9qY@UW;e
%49nJE;e:Fq3p6p39ZFj^HE<,<JJSaj/ts->Ye3J*C^=iK%aub8Kl*Y`3J\4fj/NA^BW@(^6[mrPfJ&$U,#&-6R7\=['(PT8HH2C'
%!>$g_!)_/Z)hKKr&Vqd<XY>L3;U\geCf:O)6mTUa"L40lrM/mt!6eV>k$:1g8!E<\e44(A%hWXq^.U6U]rP;3AZ[AbAM@ge6"Y>C
%X;d!R2G5HsfiUI4d7gQZe;:R5,-C736u3,5=*-T?F^c,d=9FtAXGr6Gi8VQaYt&LY@lf?:PI,I4ZVX_&)q9fpU2c]9JeU#I%B(H@
%YfCR1Kt<QIL@teL8uiVi^,"=Wej(RT@\[FbMI$^LVS"e*CGA1pBumcajGnt>4;*R;b4XIgYM<gBHBENgr3';2ghq<?j[$!V:SRMg
%XZu%AC=3#nkMHPr=3Tg3=T5B5q0rDp2qpF~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 4160 6042 a Fd(Delft)30 b(Center)h(fo)m(r)g(Systems)f(and)
f(Control)p 0 TeXcolorgray -600 1550 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/XYZ null null 1]
/DOCVIEW pdfmark end
 -600 1550 a -600
1550 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -600 1550 a -600 1550 a
SDict begin H.S end
 -600 1550 a -600 1550
a
SDict begin 13.6 H.A end
 -600 1550 a -600 1550 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -600 1550 a -600 1550 a

 -600
1550 a -600 1550 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 -600 1550 a


 pgfr

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 4.24876 7.21417 ] concat

 pgfs


 -373 1321 a

 -373 1321
a -373 1321 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 save

 /pgffc{1 setgray}def

 0.0 0.0 moveto

 198.06808 0.0 lineto

 198.06808 198.06703 lineto

 0.0 198.06703 lineto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 save

 save

 0.3985 pgfw
 0.75 TeXcolorgray
 22.63635 0.0 moveto

 22.63635 198.06703 lineto

 50.9318 0.0 moveto

 50.9318 198.06703 lineto

 79.22723 0.0 moveto

 79.22723 198.06703 lineto

 107.52267 0.0 moveto

 107.52267 198.06703 lineto

 135.81812 0.0 moveto

 135.81812 198.06703 lineto

 164.11356 0.0 moveto

 164.11356 198.06703 lineto

 192.409 0.0 moveto

 192.409 198.06703 lineto

 pgfstr
 0 TeXcolorgray
 restore

 restore

 save

 save

 0.3985 pgfw
 0.75 TeXcolorgray
 0.0 0.0 moveto

 198.06808 0.0 lineto

 0.0 28.29529 moveto

 198.06808 28.29529 lineto

 0.0 56.59058 moveto

 198.06808 56.59058 lineto

 0.0 84.88586 moveto

 198.06808 84.88586 lineto

 0.0 113.18115 moveto

 198.06808 113.18115 lineto

 0.0 141.47644 moveto

 198.06808 141.47644 lineto

 0.0 169.77173 moveto

 198.06808 169.77173 lineto

 0.0 198.06703 moveto

 198.06808 198.06703 lineto

 pgfstr

0 TeXcolorgray
 restore

 restore

 save

 save

 0.19925 pgfw
 0.5 TeXcolorgray
 22.63635 0.0 moveto

 22.63635 4.2527 lineto

 50.9318 0.0 moveto

 50.9318 4.2527 lineto

 79.22723 0.0 moveto

 79.22723 4.2527 lineto

 107.52267 0.0 moveto

 107.52267 4.2527 lineto

 135.81812 0.0 moveto

 135.81812 4.2527 lineto

 164.11356 0.0 moveto

 164.11356 4.2527 lineto

 192.409 0.0 moveto

 192.409 4.2527 lineto

 22.63635 198.06703 moveto

 22.63635 193.8143 lineto

 50.9318 198.06703 moveto

 50.9318 193.8143 lineto

 79.22723 198.06703 moveto

 79.22723 193.8143 lineto

 107.52267 198.06703 moveto

 107.52267 193.8143 lineto

 135.81812 198.06703 moveto

 135.81812 193.8143 lineto

 164.11356 198.06703 moveto

 164.11356 193.8143 lineto

 192.409 198.06703 moveto

 192.409 193.8143 lineto

 pgfstr
 0 TeXcolorgray
 restore

 restore

 save

 save

 0.19925 pgfw
 0.5 TeXcolorgray
 0.0 0.0 moveto

 4.25198 0.0 lineto

 0.0 28.29529 moveto

 4.25198 28.29529 lineto

 0.0 56.59058 moveto

 4.25198 56.59058 lineto

 0.0 84.88586 moveto

 4.25198 84.88586 lineto

 0.0 113.18115 moveto

 4.25198 113.18115 lineto

 0.0 141.47644 moveto

 4.25198 141.47644 lineto

 0.0 169.77173 moveto

 4.25198 169.77173 lineto

 0.0 198.06703 moveto

 4.25198 198.06703 lineto

 198.06808 0.0 moveto

 193.81609 0.0 lineto

 198.06808 28.29529 moveto

 193.81609 28.29529 lineto

 198.06808 56.59058 moveto

 193.81609 56.59058 lineto

 198.06808 84.88586 moveto

 193.81609 84.88586 lineto

 198.06808 113.18115 moveto

 193.81609 113.18115 lineto

 198.06808 141.47644 moveto

 193.81609 141.47644 lineto

 198.06808 169.77173 moveto

 193.81609 169.77173 lineto

 198.06808 198.06703 moveto

 193.81609 198.06703 lineto

 pgfstr

0 TeXcolorgray
 restore

 restore

 0.0 0.0 moveto

 0.0 198.06703 lineto

 198.06808 198.06703 lineto

 198.06808 0.0 lineto

 0.0 0.0 lineto

 closepath

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 15.66656 -10.70506 ] concat

 pgfs


 -373 1321 a
 0 setgray
 -373 1321 a Fc(\000)p Fb(2)-373
1321 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 43.962 -10.70506 ] concat

 pgfs


 -373 1321 a
 0 setgray
 -373 1321 a Fc(\000)p Fb(1)-373 1321
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 76.49994 -10.70506 ] concat

 pgfs


 -373 1321 a
 0 setgray
 -373 1321 a Fb(0)-373 1321 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 104.79538 -10.70506 ] concat

 pgfs


 -373 1321
a
 0 setgray
 -373 1321 a Fb(1)-373 1321 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 133.09082 -10.70506 ] concat

 pgfs


 -373 1321 a
 0 setgray
 -373 1321
a Fb(2)-373 1321 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 161.38626 -10.70506 ] concat

 pgfs


 -373 1321 a
 0 setgray
 -373 1321 a Fb(3)-373
1321 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 189.6817 -10.70506 ] concat

 pgfs


 -373 1321 a
 0 setgray
 -373 1321 a Fb(4)-373 1321 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -9.28984 -3.43489 ] concat

 pgfs


 -373
1321 a
 0 setgray
 -373 1321 a Fb(0)-373 1321 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -9.28984 24.86038 ] concat

 pgfs


 -373 1321 a
 0 setgray
 -373
1321 a Fb(1)-373 1321 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -9.28984 53.15567 ] concat

 pgfs


 -373 1321 a
 0 setgray
 -373 1321 a Fb(2)-373
1321 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -9.28984 81.45096 ] concat

 pgfs


 -373 1321 a
 0 setgray
 -373 1321 a Fb(3)-373 1321 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -9.28984 109.74625 ] concat

 pgfs


 -373
1321 a
 0 setgray
 -373 1321 a Fb(4)-373 1321 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -9.28984 138.04153 ] concat

 pgfs


 -373 1321 a
 0 setgray
 -373
1321 a Fb(5)-373 1321 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -9.28984 166.33684 ] concat

 pgfs


 -373 1321 a
 0 setgray
 -373 1321 a Fb(6)-373
1321 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -9.28984 194.63213 ] concat

 pgfs


 -373 1321 a
 0 setgray
 -373 1321 a Fb(7)-373 1321 y


 pgfr

 restore

 restore

 0.0 0.0 moveto

 198.06808 0.0 lineto

 198.06808 198.06703 lineto

 0.0 198.06703 lineto

 closepath

 clip

 newpath

 save

 0 setgray

 1.0959 pgfw

 192.409 0.0 moveto

 192.3805 1.79547 lineto

 192.29506 3.58917 lineto

 192.15274 5.37927 lineto

 191.9537 7.16391 lineto

 191.69815 8.9414 lineto

 191.38632 10.70981 lineto

 191.01854 12.46747 lineto

 190.59517 14.21262 lineto

 190.11667 15.94337 lineto

 189.58347 17.65813 lineto

 188.99614 19.35512 lineto

 188.35527 21.03256 lineto

 187.6615 22.68889 lineto

 186.91553 24.32234 lineto

 186.11809 25.9313 lineto

 185.27002 27.51414 lineto

 184.37215 29.06927 lineto

 183.42538 30.59517 lineto

 182.4307 32.09024 lineto

 181.38905 33.55298 lineto

 180.30156 34.98195 lineto

 179.16925 36.37573 lineto

 177.99329 37.7328 lineto

 176.77486 39.05194 lineto

 175.5152 40.33179 lineto

 174.21556 41.57095 lineto

 172.87726 42.7683 lineto

 171.50165 43.92258 lineto

 170.09009 45.03261 lineto

 168.64404 46.09732 lineto

 167.16493 47.1156 lineto

 165.65427 48.08644 lineto

 164.11356 49.00888 lineto

 162.54434 49.88196 lineto

 160.94823 50.70479 lineto

 159.32681 51.4766 lineto

 157.68172 52.19655 lineto

 156.01462 52.86394 lineto

 154.32718 53.4781 lineto

 152.6211 54.03844 lineto

 150.8981 54.54436 lineto

 149.15991 54.99536 lineto

 147.4083 55.39099 lineto

 145.645 55.73082 lineto

 143.87184 56.01457 lineto

 142.09055 56.24188 lineto

 140.30293 56.41255 lineto

 138.51082 56.52646 lineto

 136.71597 56.58345 lineto

 134.92024 56.58345 lineto

 133.12541 56.52646 lineto

 131.33328 56.41255 lineto

 129.54567 56.24188 lineto

 127.76437 56.01457 lineto

 125.99121 55.73082 lineto

 124.22792 55.39099 lineto

 122.4763 54.99536 lineto

 120.73811 54.54436 lineto

 119.01512 54.03844 lineto

 117.30904 53.4781 lineto

 115.6216 52.86394 lineto

 113.9545 52.19655 lineto

 112.3094 51.4766 lineto

 110.68799 50.70479 lineto

 109.09187 49.88196 lineto

 107.52267 49.00888 lineto

 105.98195 48.08644 lineto

 104.47128 47.1156 lineto

 102.99217 46.09732 lineto

 101.54613 45.03261 lineto

 100.13457 43.92258 lineto

 98.75896 42.7683 lineto

 97.42065 41.57095 lineto

 96.12102 40.33179 lineto

 94.86136 39.05194 lineto

 93.64293 37.7328 lineto

 92.46696 36.37573 lineto

 91.33467 34.98195 lineto

 90.24716 33.55298 lineto

 89.20552 32.09024 lineto

 88.21083 30.59517 lineto

 87.26407 29.06927 lineto

 86.3662 27.51414 lineto

 85.51813 25.9313 lineto

 84.72069 24.32234 lineto

 83.97472 22.68889 lineto

 83.28094 21.03256 lineto

 82.64008 19.35512 lineto

 82.05275 17.65813 lineto

 81.51955 15.94337 lineto

 81.04105 14.21262 lineto

 80.61768 12.46747 lineto

 80.2499 10.70981 lineto

 79.93806 8.9414 lineto

 79.68251 7.16391 lineto

 79.48347 5.37927 lineto

 79.34116 3.58917 lineto

 79.25572 1.79547 lineto

 79.22723 0.0 lineto

 pgfstr

 restore

 save

 0 setgray

 1.0959 pgfw

 192.409 0.0 moveto

 192.39476 0.89774 lineto

 192.35202 1.79456 lineto

 192.28087 2.68964 lineto

 192.18135 3.58197 lineto

 192.05357 4.4707 lineto

 191.89764 5.35492 lineto

 191.71378 6.23375 lineto

 191.50209 7.10628 lineto

 191.26283 7.97168 lineto

 190.99623 8.82906 lineto

 190.70258 9.67752 lineto

 190.38214 10.5163 lineto

 190.03525 11.34444 lineto

 189.66226 12.16113 lineto

 189.26355 12.96562 lineto

 188.8395 13.75706 lineto

 188.39056 14.53465 lineto

 187.91719 15.29756 lineto

 187.41985 16.04509 lineto

 186.89903 16.77649 lineto

 186.35527 17.491 lineto

 185.78912 18.18784 lineto

 185.20114 18.86642 lineto

 184.59193 19.52596 lineto

 183.9621 20.16586 lineto

 183.31227 20.78548 lineto

 182.64313 21.38414 lineto

 181.9553 21.96126 lineto

 181.24954 22.51628 lineto

 180.5265 23.04863 lineto

 179.78697 23.5578 lineto

 179.03163 24.04321 lineto

 178.26128 24.50441 lineto

 177.47667 24.94095 lineto

 176.67862 25.35236 lineto

 175.8679 25.73827 lineto

 175.04536 26.09827 lineto

 174.2118 26.43196 lineto

 173.36809 26.73907 lineto

 172.51505 27.01923 lineto

 171.65355 27.27219 lineto

 170.78445 27.49765 lineto

 169.90865 27.6955 lineto

 169.02701 27.86542 lineto

 168.14041 28.00725 lineto

 167.24977 28.12093 lineto

 166.35597 28.20628 lineto

 165.4599 28.26323 lineto

 164.56248 28.29175 lineto

 163.66461 28.29175 lineto

 162.7672 28.26323 lineto

 161.87112 28.20628 lineto

 160.97733 28.12093 lineto

 160.08669 28.00725 lineto

 159.2001 27.86542 lineto

 158.31845 27.6955 lineto

 157.44264 27.49765 lineto

 156.57356 27.27219 lineto

 155.71207 27.01923 lineto

 154.85902 26.73907 lineto

 154.01529 26.43196 lineto

 153.18173 26.09827 lineto

 152.35919 25.73827 lineto

 151.54848 25.35236 lineto

 150.75043 24.94095 lineto

 149.96584 24.50441 lineto

 149.19548 24.04321 lineto

 148.44014 23.5578 lineto

 147.70059 23.04863 lineto

 146.97755 22.51628 lineto

 146.27179 21.96126 lineto

 145.58397 21.38414 lineto

 144.91483 20.78548 lineto

 144.265 20.16586 lineto

 143.63518 19.52596 lineto

 143.02597 18.86642 lineto

 142.43799 18.18784 lineto

 141.87183 17.491 lineto

 141.32808 16.77649 lineto

 140.80725 16.04509 lineto

 140.3099 15.29756 lineto

 139.83653 14.53465 lineto

 139.3876 13.75706 lineto

 138.96356 12.96562 lineto

 138.56483 12.16113 lineto

 138.19186 11.34444 lineto

 137.84497 10.5163 lineto

 137.52452 9.67752 lineto

 137.23087 8.82906 lineto

 136.96426 7.97168 lineto

 136.725 7.10628 lineto

 136.51334 6.23375 lineto

 136.32945 5.35492 lineto

 136.17352 4.4707 lineto

 136.04575 3.58197 lineto

 135.94624 2.68964 lineto

 135.87508 1.79456 lineto

 135.83235 0.89774 lineto

 135.81812 0.0 lineto

 pgfstr

 restore

 save

 0 setgray

 [ 2.98883 2.98883 ] 0.0 setdash

 1.0959 pgfw

 107.52267 0.0 moveto

 107.52267 2.85811 lineto

 107.52267 5.71622 lineto

 107.52267 8.57433 lineto

 107.52267 11.43243 lineto

 107.52267 14.29054 lineto

 107.52267 17.14865 lineto

 107.52267 20.00677 lineto

 107.52267 22.86488 lineto

 107.52267 25.72299 lineto

 107.52267 28.5811 lineto

 107.52267 31.43921 lineto

 107.52267 34.29732 lineto

 107.52267 37.15543 lineto

 107.52267 40.01355 lineto

 107.52267 42.87166 lineto

 107.52267 45.72977 lineto

 107.52267 48.58788 lineto

 107.52267 51.44598 lineto

 107.52267 54.3041 lineto

 107.52267 57.1622 lineto

 107.52267 60.02032 lineto

 107.52267 62.87843 lineto

 107.52267 65.73654 lineto

 107.52267 68.59465 lineto

 107.52267 71.45271 lineto

 107.52267 74.31084 lineto

 107.52267 77.16895 lineto

 107.52267 80.02705 lineto

 107.52267 82.88516 lineto

 107.52267 85.74327 lineto

 107.52267 88.60138 lineto

 107.52267 91.45949 lineto

 107.52267 94.31761 lineto

 107.52267 97.17572 lineto

 107.52267 100.03383 lineto

 107.52267 102.89194 lineto

 107.52267 105.75005 lineto

 107.52267 108.60815 lineto

 107.52267 111.46626 lineto

 107.52267 114.32439 lineto

 107.52267 117.1825 lineto

 107.52267 120.0406 lineto

 107.52267 122.89871 lineto

 107.52267 125.75682 lineto

 107.52267 128.61493 lineto

 107.52267 131.47304 lineto

 107.52267 134.33116 lineto

 107.52267 137.18927 lineto

 107.52267 140.04738 lineto

 107.52267 142.90549 lineto

 107.52267 145.7636 lineto

 107.52267 148.6217 lineto

 107.52267 151.47983 lineto

 107.52267 154.33794 lineto

 107.52267 157.19604 lineto

 107.52267 160.05415 lineto

 107.52267 162.91226 lineto

 107.52267 165.77037 lineto

 107.52267 168.62848 lineto

 107.52267 171.4866 lineto

 107.52267 174.34471 lineto

 107.52267 177.20282 lineto

 107.52267 180.06093 lineto

 107.52267 182.91904 lineto

 107.52267 185.77715 lineto

 107.52267 188.63525 lineto

 107.52267 191.4934 lineto

 107.52267 194.3515 lineto

 107.52267 197.20961 lineto

 107.52267 200.06772 lineto

 107.52267 202.92583 lineto

 107.52267 205.78394 lineto

 107.52267 208.64204 lineto

 107.52267 211.50017 lineto

 107.52267 214.35823 lineto

 107.52267 217.21634 lineto

 107.52267 220.07445 lineto

 107.52267 222.93256 lineto

 107.52267 225.79068 lineto

 107.52267 228.64879 lineto

 107.52267 231.5069 lineto

 107.52267 234.365 lineto

 107.52267 237.22311 lineto

 107.52267 240.08122 lineto

 107.52267 242.93933 lineto

 107.52267 245.79745 lineto

 107.52267 248.65556 lineto

 107.52267 251.51367 lineto

 107.52267 254.37178 lineto

 107.52267 257.22989 lineto

 107.52267 260.088 lineto

 107.52267 262.9461 lineto

 107.52267 265.80423 lineto

 107.52267 268.66234 lineto

 107.52267 271.52045 lineto

 107.52267 274.37856 lineto

 107.52267 277.23666 lineto

 107.52267 280.09477 lineto

 107.52267 282.9529 lineto

 pgfstr

 restore

 save

 0 setgray

 [ 2.98883 1.99255 0.3985 1.99255 ] 0.0 setdash

 1.0959 pgfw

 76.39769 33.95435 moveto

 76.32933 36.10786 lineto

 76.12451 38.25269 lineto

 75.78407 40.38023 lineto

 75.30939 42.4819 lineto

 74.70236 44.54922 lineto

 73.96544 46.57388 lineto

 73.1016 48.54773 lineto

 72.11429 50.46284 lineto

 71.00752 52.31143 lineto

 69.78572 54.08614 lineto

 68.45383 55.77977 lineto

 67.0172 57.3855 lineto

 65.48161 58.8969 lineto

 63.85327 60.30786 lineto

 62.1387 61.61275 lineto

 60.34483 62.8062 lineto

 58.47888 63.88351 lineto

 56.54837 64.8403 lineto

 54.56105 65.67271 lineto

 52.52495 66.37743 lineto

 50.44823 66.95157 lineto

 48.3393 67.39282 lineto

 46.2066 67.69945 lineto

 44.05876 67.87021 lineto

 41.90443 67.9044 lineto

 39.75226 67.80186 lineto

 37.61092 67.56306 lineto

 35.48904 67.18895 lineto

 33.39516 66.68095 lineto

 31.33772 66.04123 lineto

 29.32497 65.27228 lineto

 27.36507 64.37721 lineto

 25.4659 63.35966 lineto

 23.63506 62.22371 lineto

 21.87996 60.97392 lineto

 20.20766 59.61533 lineto

 18.6249 58.15343 lineto

 17.13805 56.59402 lineto

 15.75308 54.94351 lineto

 14.47559 53.20848 lineto

 13.31073 51.3959 lineto

 12.26315 49.5131 lineto

 11.33711 47.56769 lineto

 10.53633 45.56741 lineto

 9.86401 43.52036 lineto

 9.32289 41.43483 lineto

 8.91513 39.31915 lineto

 8.64236 37.18188 lineto

 8.5057 35.03165 lineto

 8.5057 32.87703 lineto

 8.64236 30.72678 lineto

 8.91513 28.58952 lineto

 9.32289 26.47385 lineto

 9.86401 24.38832 lineto

 10.53633 22.34125 lineto

 11.33711 20.34099 lineto

 12.26315 18.39555 lineto

 13.31073 16.51276 lineto

 14.47559 14.70018 lineto

 15.75308 12.96515 lineto

 17.13805 11.31464 lineto

 18.6249 9.75523 lineto

 20.20766 8.29333 lineto

 21.87996 6.93474 lineto

 23.63506 5.68495 lineto

 25.4659 4.549 lineto

 27.36507 3.53146 lineto

 29.32497 2.6364 lineto

 31.33772 1.86743 lineto

 33.39516 1.22772 lineto

 35.48904 0.71971 lineto

 37.61092 0.34561 lineto

 39.75226 0.1068 lineto

 41.90443 0.00426 lineto

 44.05876 0.03845 lineto

 46.2066 0.20921 lineto

 48.3393 0.51584 lineto

 50.44823 0.95709 lineto

 52.52495 1.53123 lineto

 54.56105 2.23595 lineto

 56.54837 3.06836 lineto

 58.47888 4.02516 lineto

 60.34483 5.10248 lineto

 62.1387 6.29593 lineto

 63.85327 7.6008 lineto

 65.48161 9.01176 lineto

 67.0172 10.52316 lineto

 68.45383 12.12889 lineto

 69.78572 13.82253 lineto

 71.00752 15.59724 lineto

 72.11429 17.44583 lineto

 73.1016 19.36095 lineto

 73.96544 21.33478 lineto

 74.70236 23.35944 lineto

 75.30939 25.42676 lineto

 75.78407 27.52843 lineto

 76.12451 29.65598 lineto

 76.32933 31.8008 lineto

 76.39769 33.95435 lineto

 pgfstr

 restore

 save

 0 setgray

 [ 2.98883 1.99255 0.3985 1.99255 ] 0.0 setdash

 1.0959 pgfw

 65.07951 22.63623 moveto

 65.03392 24.07188 lineto

 64.89738 25.5018 lineto

 64.67044 26.92014 lineto

 64.35397 28.32126 lineto

 63.9493 29.69946 lineto

 63.45802 31.04924 lineto

 62.88211 32.36514 lineto

 62.2239 33.64188 lineto

 61.48607 34.87427 lineto

 60.67152 36.05745 lineto

 59.7836 37.18651 lineto

 58.82585 38.257 lineto

 57.80212 39.26462 lineto

 56.71657 40.20525 lineto

 55.57353 41.07513 lineto

 54.37761 41.8708 lineto

 53.13364 42.58899 lineto

 51.84663 43.22685 lineto

 50.52174 43.78183 lineto

 49.16435 44.25162 lineto

 47.77988 44.63437 lineto

 46.37392 44.92856 lineto

 44.95212 45.133 lineto

 43.52023 45.2468 lineto

 42.08401 45.26959 lineto

 40.64922 45.20125 lineto

 39.22166 45.04207 lineto

 37.80707 44.7926 lineto

 36.41115 44.45398 lineto

 35.03952 44.0275 lineto

 33.69771 43.51483 lineto

 32.39111 42.91815 lineto

 31.12498 42.23978 lineto

 29.90442 41.48245 lineto

 28.73434 40.64925 lineto

 27.61949 39.74353 lineto

 26.56432 38.76894 lineto

 25.57307 37.72935 lineto

 24.64977 36.629 lineto

 23.79811 35.47234 lineto

 23.02153 34.26395 lineto

 22.32315 33.00874 lineto

 21.70578 31.71178 lineto

 21.17192 30.37827 lineto

 20.72372 29.01358 lineto

 20.36298 27.6232 lineto

 20.09113 26.21277 lineto

 19.90929 24.78795 lineto

 19.81819 23.35445 lineto

 19.81819 21.918 lineto

 19.90929 20.4845 lineto

 20.09113 19.05968 lineto

 20.36298 17.64923 lineto

 20.72372 16.25887 lineto

 21.17192 14.89418 lineto

 21.70578 13.56065 lineto

 22.32315 12.26369 lineto

 23.02153 11.00848 lineto

 23.79811 9.8001 lineto

 24.64977 8.64345 lineto

 25.57307 7.54308 lineto

 26.56432 6.50351 lineto

 27.61949 5.5289 lineto

 28.73434 4.62318 lineto

 29.90442 3.78998 lineto

 31.12498 3.03265 lineto

 32.39111 2.35428 lineto

 33.69771 1.7576 lineto

 35.03952 1.24495 lineto

 36.41115 0.81845 lineto

 37.80707 0.47983 lineto

 39.22166 0.23036 lineto

 40.64922 0.07118 lineto

 42.08401 0.00284 lineto

 43.52023 0.02563 lineto

 44.95212 0.13943 lineto

 46.37392 0.34387 lineto

 47.77988 0.63806 lineto

 49.16435 1.02081 lineto

 50.52174 1.4906 lineto

 51.84663 2.0456 lineto

 53.13364 2.68344 lineto

 54.37761 3.40163 lineto

 55.57353 4.19731 lineto

 56.71657 5.06718 lineto

 57.80212 6.00781 lineto

 58.82585 7.01543 lineto

 59.7836 8.08592 lineto

 60.67152 9.215 lineto

 61.48607 10.39816 lineto

 62.2239 11.63055 lineto

 62.88211 12.90729 lineto

 63.45802 14.22319 lineto

 63.9493 15.57297 lineto

 64.35397 16.95117 lineto

 64.67044 18.3523 lineto

 64.89738 19.77063 lineto

 65.03392 21.20055 lineto

 65.07951 22.63623 lineto

 pgfstr

 restore

 save

 0 setgray

 [ 1.0959 1.99255 ] 0.0 setdash

 1.0959 pgfw

 160.4057 0.22475 moveto

 159.48132 1.43936 lineto

 158.51884 2.62404 lineto

 157.51929 3.77759 lineto

 156.48363 4.89886 lineto

 155.4129 5.9867 lineto

 154.30823 7.04 lineto

 153.17065 8.05777 lineto

 152.0014 9.03888 lineto

 150.80157 9.98244 lineto

 149.57242 10.88742 lineto

 148.31519 11.75296 lineto

 147.03113 12.57817 lineto

 145.72153 13.36223 lineto

 144.38768 14.10437 lineto

 143.03099 14.80377 lineto

 141.65279 15.45981 lineto

 140.25446 16.07178 lineto

 138.83742 16.63905 lineto

 137.40309 17.16113 lineto

 135.95293 17.63739 lineto

 134.48839 18.06743 lineto

 133.01093 18.45078 lineto

 131.52205 18.78706 lineto

 130.02325 19.07591 lineto

 128.51605 19.3171 lineto

 127.00195 19.51028 lineto

 125.48248 19.65541 lineto

 123.95918 19.7522 lineto

 122.43358 19.80064 lineto

 120.9072 19.80064 lineto

 119.38159 19.7522 lineto

 117.85829 19.65541 lineto

 116.33882 19.51028 lineto

 114.82472 19.3171 lineto

 113.31752 19.07591 lineto

 111.81873 18.78706 lineto

 110.32985 18.45078 lineto

 108.85239 18.06743 lineto

 107.38785 17.63739 lineto

 105.93768 17.16113 lineto

 104.50336 16.63905 lineto

 103.08632 16.07178 lineto

 101.68799 15.45981 lineto

 100.30978 14.80377 lineto

 98.9531 14.10437 lineto

 97.61926 13.36223 lineto

 96.30965 12.57817 lineto

 95.02559 11.75296 lineto

 93.76836 10.88742 lineto

 92.5392 9.98244 lineto

 91.33937 9.03888 lineto

 90.17012 8.05777 lineto

 89.03255 7.04 lineto

 87.92787 5.9867 lineto

 86.85715 4.89886 lineto

 85.82149 3.77759 lineto

 84.82193 2.62404 lineto

 83.85945 1.43936 lineto

 82.93507 0.22475 lineto

 pgfstr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 95.91658 -23.78246 ] concat

 pgfs


 -373
1321 a
 0 setgray
 -373 1321 a Fa(x)-373 1321 y


 pgfr

 restore

 restore

 save

 save

 [0.0 1.0 -1.0 0.0 -18.88234 96.16351 ] concat

 pgfs


 -373 1321 a
 0 setgray
 -373
1321 a Fa(y)-373 1321 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -600 1550 a


 pgfr

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 -600 1550 a


 pgfr

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 263.45113 19.79979 ] concat

 pgfs


 -600
1550 a

 -600 1550 a -600 1550 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 save

 restore

 save

 restore

 0.0 0.0 moveto

 198.07265 0.0 lineto

 198.07265 227.7381 lineto

 0.0 227.7381 lineto

 closepath

 clip

 newpath

 save

 /pgfsc{0.8725 setgray}def

 /pgffc{1 setgray}def

 198.07265 113.86905 moveto

 197.87721 120.08633 lineto

 197.2917 126.2791 lineto

 196.31845 132.4229 lineto

 194.96124 138.49345 lineto

 193.22545 144.46684 lineto

 191.11795 150.31946 lineto

 188.64708 156.02823 lineto

 185.8225 161.57063 lineto

 182.65544 166.92476 lineto

 179.15839 172.06952 lineto

 175.34512 176.98457 lineto

 171.2307 181.65054 lineto

 166.83136 186.04901 lineto

 162.16446 190.16261 lineto

 157.24841 193.97513 lineto

 152.10263 197.47148 lineto

 146.74742 200.63791 lineto

 141.20393 203.4619 lineto

 135.494 205.9323 lineto

 129.64023 208.03938 lineto

 123.66563 209.77481 lineto

 117.59386 211.13176 lineto

 111.44885 212.10483 lineto

 105.25485 212.69022 lineto

 99.03632 212.8856 lineto

 92.81776 212.69022 lineto

 86.62376 212.10483 lineto

 80.47876 211.13176 lineto

 74.40698 209.77481 lineto

 68.4324 208.03938 lineto

 62.57861 205.9323 lineto

 56.8687 203.4619 lineto

 51.3252 200.63791 lineto

 45.97 197.47148 lineto

 40.82422 193.97513 lineto

 35.90817 190.16261 lineto

 31.24127 186.04901 lineto

 26.84193 181.65054 lineto

 22.7275 176.98457 lineto

 18.91423 172.06952 lineto

 15.41719 166.92476 lineto

 12.25012 161.57063 lineto

 9.42555 156.02823 lineto

 6.95467 150.31946 lineto

 4.84717 144.46684 lineto

 3.11137 138.49345 lineto

 1.75418 132.4229 lineto

 0.78091 126.2791 lineto

 0.19542 120.08633 lineto

 0.0 113.86905 lineto

 0.19542 107.65173 lineto

 0.78091 101.45897 lineto

 1.75418 95.31519 lineto

 3.11137 89.24461 lineto

 4.84717 83.27122 lineto

 6.95467 77.41861 lineto

 9.42555 71.70984 lineto

 12.25012 66.16743 lineto

 15.41719 60.81332 lineto

 18.91423 55.66856 lineto

 22.7275 50.7535 lineto

 26.84193 46.08752 lineto

 31.24127 41.68906 lineto

 35.90817 37.57545 lineto

 40.82422 33.76295 lineto

 45.97 30.26659 lineto

 51.3252 27.10016 lineto

 56.8687 24.27617 lineto

 62.57861 21.80577 lineto

 68.4324 19.69868 lineto

 74.40698 17.96326 lineto

 80.47876 16.60631 lineto

 86.62376 15.63326 lineto

 92.81776 15.04785 lineto

 99.03632 14.85248 lineto

 105.25485 15.04785 lineto

 111.44885 15.63326 lineto

 117.59386 16.60631 lineto

 123.66563 17.96326 lineto

 129.64023 19.69868 lineto

 135.494 21.80577 lineto

 141.20393 24.27617 lineto

 146.74742 27.10016 lineto

 152.10263 30.26659 lineto

 157.24841 33.76295 lineto

 162.16446 37.57545 lineto

 166.83136 41.68906 lineto

 171.2307 46.08752 lineto

 175.34512 50.7535 lineto

 179.15839 55.66856 lineto

 182.65544 60.81332 lineto

 185.8225 66.16743 lineto

 188.64708 71.70984 lineto

 191.11795 77.41861 lineto

 193.22545 83.27122 lineto

 194.96124 89.24461 lineto

 196.31845 95.31519 lineto

 197.2917 101.45897 lineto

 197.87721 107.65173 lineto

 198.07265 113.86905 lineto

 closepath

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 0.8725 setgray

 0.99628 pgfw

 198.07265 113.86905 moveto

 197.87721 120.08633 lineto

 197.2917 126.2791 lineto

 196.31845 132.4229 lineto

 194.96124 138.49345 lineto

 193.22545 144.46684 lineto

 191.11795 150.31946 lineto

 188.64708 156.02823 lineto

 185.8225 161.57063 lineto

 182.65544 166.92476 lineto

 179.15839 172.06952 lineto

 175.34512 176.98457 lineto

 171.2307 181.65054 lineto

 166.83136 186.04901 lineto

 162.16446 190.16261 lineto

 157.24841 193.97513 lineto

 152.10263 197.47148 lineto

 146.74742 200.63791 lineto

 141.20393 203.4619 lineto

 135.494 205.9323 lineto

 129.64023 208.03938 lineto

 123.66563 209.77481 lineto

 117.59386 211.13176 lineto

 111.44885 212.10483 lineto

 105.25485 212.69022 lineto

 99.03632 212.8856 lineto

 92.81776 212.69022 lineto

 86.62376 212.10483 lineto

 80.47876 211.13176 lineto

 74.40698 209.77481 lineto

 68.4324 208.03938 lineto

 62.57861 205.9323 lineto

 56.8687 203.4619 lineto

 51.3252 200.63791 lineto

 45.97 197.47148 lineto

 40.82422 193.97513 lineto

 35.90817 190.16261 lineto

 31.24127 186.04901 lineto

 26.84193 181.65054 lineto

 22.7275 176.98457 lineto

 18.91423 172.06952 lineto

 15.41719 166.92476 lineto

 12.25012 161.57063 lineto

 9.42555 156.02823 lineto

 6.95467 150.31946 lineto

 4.84717 144.46684 lineto

 3.11137 138.49345 lineto

 1.75418 132.4229 lineto

 0.78091 126.2791 lineto

 0.19542 120.08633 lineto

 0.0 113.86905 lineto

 0.19542 107.65173 lineto

 0.78091 101.45897 lineto

 1.75418 95.31519 lineto

 3.11137 89.24461 lineto

 4.84717 83.27122 lineto

 6.95467 77.41861 lineto

 9.42555 71.70984 lineto

 12.25012 66.16743 lineto

 15.41719 60.81332 lineto

 18.91423 55.66856 lineto

 22.7275 50.7535 lineto

 26.84193 46.08752 lineto

 31.24127 41.68906 lineto

 35.90817 37.57545 lineto

 40.82422 33.76295 lineto

 45.97 30.26659 lineto

 51.3252 27.10016 lineto

 56.8687 24.27617 lineto

 62.57861 21.80577 lineto

 68.4324 19.69868 lineto

 74.40698 17.96326 lineto

 80.47876 16.60631 lineto

 86.62376 15.63326 lineto

 92.81776 15.04785 lineto

 99.03632 14.85248 lineto

 105.25485 15.04785 lineto

 111.44885 15.63326 lineto

 117.59386 16.60631 lineto

 123.66563 17.96326 lineto

 129.64023 19.69868 lineto

 135.494 21.80577 lineto

 141.20393 24.27617 lineto

 146.74742 27.10016 lineto

 152.10263 30.26659 lineto

 157.24841 33.76295 lineto

 162.16446 37.57545 lineto

 166.83136 41.68906 lineto

 171.2307 46.08752 lineto

 175.34512 50.7535 lineto

 179.15839 55.66856 lineto

 182.65544 60.81332 lineto

 185.8225 66.16743 lineto

 188.64708 71.70984 lineto

 191.11795 77.41861 lineto

 193.22545 83.27122 lineto

 194.96124 89.24461 lineto

 196.31845 95.31519 lineto

 197.2917 101.45897 lineto

 197.87721 107.65173 lineto

 198.07265 113.86905 lineto

 pgfstr

 restore

 save

 0.8725 setgray

 0.99628 pgfw

 99.03632 14.85248 moveto

 99.03632 212.8856 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 98.83824 212.88536 moveto

 98.81381 212.8853 lineto

 98.78639 212.88522 lineto

 98.75555 212.88512 lineto

 98.72093 212.885 lineto

 98.68204 212.88484 lineto

 98.63835 212.88466 lineto

 98.58926 212.8844 lineto

 98.53413 212.88408 lineto

 98.4722 212.88367 lineto

 98.40263 212.88316 lineto

 98.3245 212.88254 lineto

 98.23671 212.88173 lineto

 98.13809 212.8807 lineto

 98.02734 212.87944 lineto

 97.90292 212.87782 lineto

 97.76317 212.87578 lineto

 97.60619 212.87321 lineto

 97.42984 212.86996 lineto

 97.23175 212.86588 lineto

 97.0093 212.8607 lineto

 96.7594 212.85419 lineto

 96.47873 212.84598 lineto

 96.1635 212.8356 lineto

 95.80946 212.82251 lineto

 95.41187 212.806 lineto

 94.9654 212.78516 lineto

 94.46408 212.75888 lineto

 93.90126 212.72571 lineto

 93.26945 212.68391 lineto

 92.56032 212.6312 lineto

 91.76462 212.5647 lineto

 90.872 212.48087 lineto

 89.87102 212.3752 lineto

 88.74905 212.24208 lineto

 87.49219 212.0744 lineto

 86.08519 211.8633 lineto

 84.51157 211.59767 lineto

 82.75359 211.26375 lineto

 80.79247 210.84428 lineto

 78.60873 210.31808 lineto

 76.18263 209.65892 lineto

 73.49501 208.83472 lineto

 70.52838 207.80661 lineto

 67.26869 206.52788 lineto

 63.70738 204.94318 lineto

 59.8444 202.98814 lineto

 55.69182 200.58955 lineto

 51.27818 197.66667 lineto

 46.65344 194.1343 lineto

 41.89355 189.9078 lineto

 37.1045 184.91089 lineto

 32.4237 179.08583 lineto

 28.01761 172.40611 lineto

 24.07416 164.88913 lineto

 20.78873 156.607 lineto

 18.34467 147.69185 lineto

 16.89104 138.33261 lineto

 16.52174 128.76195 lineto

 17.26129 119.23442 lineto

 19.06087 110.00006 lineto

 21.80605 101.27893 lineto

 25.3338 93.24184 lineto

 29.45425 86.00067 lineto

 33.97266 79.60825 lineto

 38.70702 74.06589 lineto

 43.50003 69.3351 lineto

 48.22482 65.35065 lineto

 52.78581 62.03241 lineto

 57.11623 59.29482 lineto

 61.1739 57.05373 lineto

 64.93631 55.23071 lineto

 68.39594 53.75542 lineto

 71.55598 52.56651 lineto

 74.4272 51.61165 lineto

 77.02501 50.84682 lineto

 79.3676 50.2355 lineto

 81.47443 49.74779 lineto

 83.36522 49.35919 lineto

 85.05927 49.04993 lineto

 86.57507 48.80399 lineto

 87.92992 48.60858 lineto

 89.1399 48.45338 lineto

 90.21979 48.33018 lineto

 91.18303 48.2324 lineto

 92.0419 48.15486 lineto

 92.80746 48.09334 lineto

 93.48965 48.04456 lineto

 94.09743 48.00586 lineto

 94.63882 47.9752 lineto

 95.12102 47.9509 lineto

 95.55046 47.93163 lineto

 95.93286 47.91635 lineto

 96.27338 47.90425 lineto

 96.57657 47.89465 lineto

 96.84651 47.88704 lineto

 97.08684 47.88101 lineto

 97.30081 47.87624 lineto

 97.49132 47.87245 lineto

 97.6609 47.86946 lineto

 100.41171 47.86946 lineto

 100.58131 47.87245 lineto

 100.7718 47.87624 lineto

 100.9858 47.88101 lineto

 101.22612 47.88704 lineto

 101.49606 47.89465 lineto

 101.79926 47.90425 lineto

 102.13976 47.91635 lineto

 102.52217 47.93163 lineto

 102.9516 47.9509 lineto

 103.43379 47.9752 lineto

 103.9752 48.00586 lineto

 104.58298 48.04456 lineto

 105.26517 48.09334 lineto

 106.03072 48.15486 lineto

 106.8896 48.2324 lineto

 107.85284 48.33018 lineto

 108.93274 48.45338 lineto

 110.1427 48.60858 lineto

 111.49754 48.80399 lineto

 113.01335 49.04993 lineto

 114.7074 49.35919 lineto

 116.59819 49.74779 lineto

 118.70502 50.2355 lineto

 121.04762 50.84682 lineto

 123.64542 51.61165 lineto

 126.51665 52.56651 lineto

 129.6767 53.75542 lineto

 133.13632 55.23071 lineto

 136.89871 57.05373 lineto

 140.9564 59.29482 lineto

 145.28682 62.03241 lineto

 149.84781 65.35065 lineto

 154.5726 69.3351 lineto

 159.36562 74.06589 lineto

 164.09996 79.60825 lineto

 168.61838 86.00067 lineto

 172.73883 93.24184 lineto

 176.26659 101.27893 lineto

 179.01175 110.00006 lineto

 180.81134 119.23442 lineto

 181.55089 128.76195 lineto

 181.1816 138.33261 lineto

 179.72797 147.69185 lineto

 177.2839 156.607 lineto

 173.99846 164.88913 lineto

 170.05502 172.40611 lineto

 165.64893 179.08583 lineto

 160.96812 184.91089 lineto

 156.17906 189.9078 lineto

 151.41919 194.1343 lineto

 146.79445 197.66667 lineto

 142.38081 200.58955 lineto

 138.22823 202.98814 lineto

 134.36525 204.94318 lineto

 130.80394 206.52788 lineto

 127.54424 207.80661 lineto

 124.57762 208.83472 lineto

 121.88998 209.65892 lineto

 119.46388 210.31808 lineto

 117.28015 210.84428 lineto

 115.31905 211.26375 lineto

 113.56107 211.59767 lineto

 111.98743 211.8633 lineto

 110.58044 212.0744 lineto

 109.32358 212.24208 lineto

 108.20161 212.3752 lineto

 107.20064 212.48087 lineto

 106.308 212.5647 lineto

 105.5123 212.6312 lineto

 104.80318 212.68391 lineto

 104.17137 212.72571 lineto

 103.60855 212.75888 lineto

 103.10722 212.78516 lineto

 102.66077 212.806 lineto

 102.26317 212.82251 lineto

 101.90913 212.8356 lineto

 101.5939 212.84598 lineto

 101.31323 212.85419 lineto

 101.06334 212.8607 lineto

 100.84087 212.86588 lineto

 100.64279 212.86996 lineto

 100.46645 212.87321 lineto

 100.30946 212.87578 lineto

 100.16971 212.87782 lineto

 100.04527 212.87944 lineto

 99.93452 212.8807 lineto

 99.83592 212.88173 lineto

 99.74814 212.88254 lineto

 99.67 212.88316 lineto

 99.60042 212.88367 lineto

 99.53848 212.88408 lineto

 99.48337 212.8844 lineto

 99.43428 212.88466 lineto

 99.3906 212.88484 lineto

 99.3517 212.885 lineto

 99.31708 212.88512 lineto

 99.28624 212.88522 lineto

 99.25882 212.8853 lineto

 99.23439 212.88536 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 98.83824 212.88528 moveto

 98.81381 212.88521 lineto

 98.78639 212.8851 lineto

 98.75555 212.88496 lineto

 98.72093 212.8848 lineto

 98.68204 212.8846 lineto

 98.63835 212.88432 lineto

 98.58926 212.88399 lineto

 98.53413 212.88356 lineto

 98.4722 212.88304 lineto

 98.40265 212.88235 lineto

 98.32451 212.8815 lineto

 98.23672 212.88045 lineto

 98.13812 212.87909 lineto

 98.02737 212.87738 lineto

 97.90297 212.87523 lineto

 97.76323 212.87251 lineto

 97.60626 212.86908 lineto

 97.42995 212.86475 lineto

 97.23192 212.8593 lineto

 97.00954 212.85242 lineto

 96.75974 212.84373 lineto

 96.4792 212.83276 lineto

 96.16417 212.81895 lineto

 95.81041 212.80151 lineto

 95.41324 212.7795 lineto

 94.96733 212.75174 lineto

 94.46681 212.71674 lineto

 93.90512 212.67259 lineto

 93.27492 212.61694 lineto

 92.56807 212.54677 lineto

 91.7756 212.45836 lineto

 90.88754 212.34697 lineto

 89.89304 212.20671 lineto

 88.78017 212.03017 lineto

 87.53616 211.8081 lineto

 86.14728 211.52905 lineto

 84.59918 211.17871 lineto

 82.8771 210.73953 lineto

 80.96632 210.1898 lineto

 78.85297 209.50319 lineto

 76.525 208.64778 lineto

 73.97351 207.5856 lineto

 71.19484 206.27193 lineto

 68.19289 204.65526 lineto

 64.98213 202.67783 lineto

 61.5911 200.27713 lineto

 58.06609 197.38892 lineto

 54.47447 193.95175 lineto

 50.90688 189.91399 lineto

 47.47714 185.24219 lineto

 44.31877 179.9309 lineto

 41.57692 174.0118 lineto

 39.39584 167.56015 lineto

 37.90302 160.69601 lineto

 37.19235 153.57825 lineto

 37.31049 146.39151 lineto

 38.24963 139.32764 lineto

 39.94861 132.56567 lineto

 42.30246 126.25453 lineto

 45.17722 120.50188 lineto

 48.42683 115.3702 lineto

 51.90843 110.87988 lineto

 55.49341 107.01654 lineto

 59.07431 103.74062 lineto

 62.56725 100.99689 lineto

 65.9111 98.72258 lineto

 69.06496 96.85349 lineto

 72.00462 95.3282 lineto

 74.71898 94.09067 lineto

 77.20654 93.09128 lineto

 79.47269 92.28728 lineto

 81.52734 91.64238 lineto

 83.38324 91.12642 lineto

 85.05455 90.71437 lineto

 86.55608 90.38586 lineto

 87.9025 90.12428 lineto

 89.10802 89.91617 lineto

 90.18611 89.75073 lineto

 91.1493 89.61934 lineto

 92.00925 89.51498 lineto

 92.7765 89.43217 lineto

 93.46077 89.36647 lineto

 94.07079 89.31435 lineto

 94.61444 89.273 lineto

 95.09886 89.24025 lineto

 95.53041 89.21425 lineto

 95.91478 89.19365 lineto

 96.25711 89.1773 lineto

 96.56195 89.16435 lineto

 96.83344 89.15411 lineto

 97.07515 89.14597 lineto

 97.29036 89.13953 lineto

 97.48196 89.13441 lineto

 97.65257 89.13036 lineto

 97.80444 89.12715 lineto

 97.93967 89.12462 lineto

 98.06004 89.12257 lineto

 98.16722 89.121 lineto

 98.26262 89.11974 lineto

 99.81001 89.11974 lineto

 99.9054 89.121 lineto

 100.01257 89.12257 lineto

 100.13297 89.12462 lineto

 100.26819 89.12715 lineto

 100.42004 89.13036 lineto

 100.59067 89.13441 lineto

 100.78227 89.13953 lineto

 100.99748 89.14597 lineto

 101.2392 89.15411 lineto

 101.51067 89.16435 lineto

 101.81552 89.1773 lineto

 102.15785 89.19365 lineto

 102.54222 89.21425 lineto

 102.97377 89.24025 lineto

 103.45818 89.273 lineto

 104.00183 89.31435 lineto

 104.61186 89.36647 lineto

 105.29611 89.43217 lineto

 106.06337 89.51498 lineto

 106.92332 89.61934 lineto

 107.88652 89.75073 lineto

 108.96461 89.91617 lineto

 110.17014 90.12428 lineto

 111.51656 90.38586 lineto

 113.01808 90.71437 lineto

 114.68939 91.12642 lineto

 116.54527 91.64238 lineto

 118.59995 92.28728 lineto

 120.86609 93.09128 lineto

 123.35365 94.09067 lineto

 126.06801 95.3282 lineto

 129.00768 96.85349 lineto

 132.16153 98.72258 lineto

 135.50539 100.99689 lineto

 138.9983 103.74062 lineto

 142.57922 107.01654 lineto

 146.1642 110.87988 lineto

 149.64578 115.3702 lineto

 152.89542 120.50188 lineto

 155.77017 126.25453 lineto

 158.12402 132.56567 lineto

 159.823 139.32764 lineto

 160.76215 146.39151 lineto

 160.88028 153.57825 lineto

 160.16962 160.69601 lineto

 158.67679 167.56015 lineto

 156.49571 174.0118 lineto

 153.75385 179.9309 lineto

 150.59549 185.24219 lineto

 147.16576 189.91399 lineto

 143.59816 193.95175 lineto

 140.00653 197.38892 lineto

 136.48154 200.27713 lineto

 133.0905 202.67783 lineto

 129.87973 204.65526 lineto

 126.87779 206.27193 lineto

 124.09912 207.5856 lineto

 121.54764 208.64778 lineto

 119.21965 209.50319 lineto

 117.10631 210.1898 lineto

 115.19553 210.73953 lineto

 113.47345 211.17871 lineto

 111.92535 211.52905 lineto

 110.53647 211.8081 lineto

 109.29245 212.03017 lineto

 108.1796 212.20671 lineto

 107.18509 212.34697 lineto

 106.29703 212.45836 lineto

 105.50455 212.54677 lineto

 104.7977 212.61694 lineto

 104.16751 212.67259 lineto

 103.6058 212.71674 lineto

 103.1053 212.75174 lineto

 102.6594 212.7795 lineto

 102.2622 212.80151 lineto

 101.90846 212.81895 lineto

 101.59343 212.83276 lineto

 101.3129 212.84373 lineto

 101.0631 212.85242 lineto

 100.8407 212.8593 lineto

 100.64268 212.86475 lineto

 100.46637 212.86908 lineto

 100.3094 212.87251 lineto

 100.16966 212.87523 lineto

 100.04524 212.87738 lineto

 99.9345 212.87909 lineto

 99.8359 212.88045 lineto

 99.74812 212.8815 lineto

 99.66998 212.88235 lineto

 99.60042 212.88304 lineto

 99.53848 212.88356 lineto

 99.48337 212.88399 lineto

 99.43428 212.88432 lineto

 99.3906 212.8846 lineto

 99.3517 212.8848 lineto

 99.31708 212.88496 lineto

 99.28624 212.8851 lineto

 99.25882 212.88521 lineto

 99.23439 212.88528 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 98.83824 212.88521 moveto

 98.81381 212.8851 lineto

 98.78639 212.88496 lineto

 98.75555 212.8848 lineto

 98.72093 212.88461 lineto

 98.68204 212.88434 lineto

 98.63835 212.884 lineto

 98.58926 212.88358 lineto

 98.53413 212.88306 lineto

 98.4722 212.88239 lineto

 98.40265 212.88155 lineto

 98.32452 212.8805 lineto

 98.23674 212.87915 lineto

 98.13814 212.87746 lineto

 98.0274 212.87534 lineto

 97.90303 212.87263 lineto

 97.7633 212.86923 lineto

 97.60637 212.86494 lineto

 97.4301 212.85956 lineto

 97.23215 212.85272 lineto

 97.00983 212.84412 lineto

 96.76018 212.83327 lineto

 96.47981 212.81956 lineto

 96.16504 212.8023 lineto

 95.81165 212.78052 lineto

 95.41498 212.75304 lineto

 94.9698 212.71837 lineto

 94.47034 212.67468 lineto

 93.9101 212.61958 lineto

 93.28195 212.55019 lineto

 92.57802 212.46272 lineto

 91.78967 212.3526 lineto

 90.90744 212.21396 lineto

 89.92116 212.03958 lineto

 88.81987 211.82043 lineto

 87.5922 211.54532 lineto

 86.22627 211.20032 lineto

 84.71033 210.76843 lineto

 83.03319 210.22891 lineto

 81.18503 209.55664 lineto

 79.15854 208.72157 lineto

 76.95035 207.68845 lineto

 74.56299 206.41644 lineto

 72.00725 204.85974 lineto

 69.30498 202.96861 lineto

 66.4919 200.69157 lineto

 63.62048 197.97919 lineto

 60.76169 194.78922 lineto

 58.00514 191.09348 lineto

 55.45657 186.88547 lineto

 53.23163 182.18793 lineto

 51.44629 177.05807 lineto

 50.20407 171.58917 lineto

 49.58278 165.90611 lineto

 49.62311 160.15547 lineto

 50.32239 154.49078 lineto

 51.63495 149.05678 lineto

 53.47928 143.97488 lineto

 55.74956 139.33414 lineto

 58.32928 135.18742 lineto

 61.10352 131.55363 lineto

 63.96823 128.4232 lineto

 66.836 125.76584 lineto

 69.6381 123.53815 lineto

 72.3243 121.69011 lineto

 74.86058 120.1704 lineto

 77.2267 118.92958 lineto

 79.41293 117.92242 lineto

 81.41762 117.1088 lineto

 83.24466 116.45406 lineto

 84.90178 115.92876 lineto

 86.39897 115.50842 lineto

 87.74759 115.17268 lineto

 88.95938 114.905 lineto

 90.04616 114.69179 lineto

 91.01932 114.52219 lineto

 91.8897 114.38736 lineto

 92.66736 114.28026 lineto

 93.36168 114.19519 lineto

 93.9812 114.12767 lineto

 94.53375 114.07411 lineto

 95.02634 114.03163 lineto

 95.46536 113.99794 lineto

 95.85652 113.97122 lineto

 96.20503 113.95004 lineto

 96.51544 113.93323 lineto

 96.79187 113.91992 lineto

 97.03807 113.90936 lineto

 97.2573 113.901 lineto

 97.4525 113.89436 lineto

 97.6263 113.88911 lineto

 97.78107 113.88495 lineto

 97.91881 113.88165 lineto

 98.04147 113.87901 lineto

 98.15067 113.87695 lineto

 98.24788 113.8753 lineto

 98.33444 113.874 lineto

 98.41148 113.87299 lineto

 98.48009 113.87216 lineto

 98.54115 113.8715 lineto

 99.53148 113.8715 lineto

 99.59254 113.87216 lineto

 99.66113 113.87299 lineto

 99.73817 113.874 lineto

 99.82474 113.8753 lineto

 99.92195 113.87695 lineto

 100.03116 113.87901 lineto

 100.15382 113.88165 lineto

 100.29156 113.88495 lineto

 100.44633 113.88911 lineto

 100.62012 113.89436 lineto

 100.81534 113.901 lineto

 101.03456 113.90936 lineto

 101.28076 113.91992 lineto

 101.55719 113.93323 lineto

 101.8676 113.95004 lineto

 102.21611 113.97122 lineto

 102.60727 113.99794 lineto

 103.04628 114.03163 lineto

 103.53888 114.07411 lineto

 104.09142 114.12767 lineto

 104.71095 114.19519 lineto

 105.40527 114.28026 lineto

 106.18294 114.38736 lineto

 107.05331 114.52219 lineto

 108.02647 114.69179 lineto

 109.11324 114.905 lineto

 110.32504 115.17268 lineto

 111.67365 115.50842 lineto

 113.17085 115.92876 lineto

 114.82797 116.45406 lineto

 116.655 117.1088 lineto

 118.65968 117.92242 lineto

 120.84593 118.92958 lineto

 123.21204 120.1704 lineto

 125.74832 121.69011 lineto

 128.43451 123.53815 lineto

 131.23663 125.76584 lineto

 134.1044 128.4232 lineto

 136.96912 131.55363 lineto

 139.74335 135.18742 lineto

 142.32307 139.33414 lineto

 144.59335 143.97488 lineto

 146.43767 149.05678 lineto

 147.75024 154.49078 lineto

 148.44951 160.15547 lineto

 148.48985 165.90611 lineto

 147.86856 171.58917 lineto

 146.62634 177.05807 lineto

 144.84099 182.18793 lineto

 142.61606 186.88547 lineto

 140.06747 191.09348 lineto

 137.31093 194.78922 lineto

 134.45215 197.97919 lineto

 131.58073 200.69157 lineto

 128.76765 202.96861 lineto

 126.06538 204.85974 lineto

 123.50964 206.41644 lineto

 121.12227 207.68845 lineto

 118.9141 208.72157 lineto

 116.88759 209.55664 lineto

 115.03944 210.22891 lineto

 113.3623 210.76843 lineto

 111.84636 211.20032 lineto

 110.48044 211.54532 lineto

 109.25275 211.82043 lineto

 108.15147 212.03958 lineto

 107.16518 212.21396 lineto

 106.28296 212.3526 lineto

 105.49461 212.46272 lineto

 104.79068 212.55019 lineto

 104.16254 212.61958 lineto

 103.6023 212.67468 lineto

 103.10281 212.71837 lineto

 102.65764 212.75304 lineto

 102.26099 212.78052 lineto

 101.9076 212.8023 lineto

 101.5928 212.81956 lineto

 101.31245 212.83327 lineto

 101.0628 212.84412 lineto

 100.84047 212.85272 lineto

 100.64253 212.85956 lineto

 100.46626 212.86494 lineto

 100.30933 212.86923 lineto

 100.1696 212.87263 lineto

 100.04521 212.87534 lineto

 99.93448 212.87746 lineto

 99.83589 212.87915 lineto

 99.74811 212.8805 lineto

 99.66998 212.88155 lineto

 99.60042 212.88239 lineto

 99.53848 212.88306 lineto

 99.48337 212.88358 lineto

 99.43428 212.884 lineto

 99.3906 212.88434 lineto

 99.3517 212.88461 lineto

 99.31708 212.8848 lineto

 99.28624 212.88496 lineto

 99.25882 212.8851 lineto

 99.23439 212.88521 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 98.83824 212.88513 moveto

 98.81381 212.885 lineto

 98.78639 212.88484 lineto

 98.75555 212.88466 lineto

 98.72093 212.8844 lineto

 98.68204 212.88408 lineto

 98.63835 212.88368 lineto

 98.58928 212.88318 lineto

 98.53415 212.88255 lineto

 98.47221 212.88174 lineto

 98.40266 212.88072 lineto

 98.32454 212.87947 lineto

 98.23677 212.87785 lineto

 98.13817 212.87582 lineto

 98.02745 212.87328 lineto

 97.90309 212.87004 lineto

 97.76338 212.86595 lineto

 97.6065 212.86082 lineto

 97.4303 212.85434 lineto

 97.2324 212.84618 lineto

 97.01021 212.83583 lineto

 96.7607 212.82283 lineto

 96.48056 212.80641 lineto

 96.16609 212.78569 lineto

 95.81317 212.75955 lineto

 95.41711 212.72661 lineto

 94.97284 212.68507 lineto

 94.47461 212.63274 lineto

 93.91614 212.56677 lineto

 93.29051 212.4837 lineto

 92.59013 212.37909 lineto

 91.8068 212.24751 lineto

 90.93163 212.08203 lineto

 89.95528 211.87419 lineto

 88.86801 211.61343 lineto

 87.65996 211.28677 lineto

 86.32149 210.87828 lineto

 84.84384 210.36868 lineto

 83.21991 209.73479 lineto

 81.44527 208.94907 lineto

 79.51967 207.97955 lineto

 77.4489 206.78976 lineto

 75.24687 205.33952 lineto

 72.93805 203.58623 lineto

 70.55989 201.4875 lineto

 68.16472 199.00493 lineto

 65.82066 196.10918 lineto

 63.61046 192.78624 lineto

 61.6277 189.04382 lineto

 59.97014 184.91687 lineto

 58.72989 180.4702 lineto

 57.98236 175.79729 lineto

 57.77577 171.01373 lineto

 58.1238 166.2467 lineto

 59.0035 161.62146 lineto

 60.35878 157.24893 lineto

 62.1089 153.21558 lineto

 64.15927 149.57855 lineto

 66.41238 146.36537 lineto

 68.77687 143.5776 lineto

 71.17354 141.1967 lineto

 73.5383 139.19041 lineto

 75.82275 137.5189 lineto

 77.99301 136.13943 lineto

 80.02753 135.00981 lineto

 81.9147 134.09074 lineto

 83.65048 133.34682 lineto

 85.23636 132.74722 lineto

 86.67755 132.2656 lineto

 87.98172 131.87978 lineto

 89.15788 131.5714 lineto

 90.21577 131.32533 lineto

 91.16525 131.12927 lineto

 92.016 130.97324 lineto

 92.77725 130.84915 lineto

 93.45772 130.75055 lineto

 94.06543 130.67224 lineto

 94.6078 130.61008 lineto

 95.09161 130.56075 lineto

 95.52303 130.5216 lineto

 95.90755 130.49055 lineto

 96.25021 130.46594 lineto

 96.5555 130.44643 lineto

 96.82742 130.43094 lineto

 97.06964 130.41867 lineto

 97.28534 130.40895 lineto

 97.47743 130.40126 lineto

 97.64847 130.39513 lineto

 97.80077 130.39029 lineto

 97.93637 130.38646 lineto

 98.05707 130.38342 lineto

 98.16457 130.38101 lineto

 98.26024 130.3791 lineto

 98.34544 130.37756 lineto

 98.42128 130.37639 lineto

 98.48878 130.37543 lineto

 98.5489 130.37466 lineto

 98.60242 130.37408 lineto

 98.65004 130.3736 lineto

 98.69246 130.37323 lineto

 99.38017 130.37323 lineto

 99.42259 130.3736 lineto

 99.47021 130.37408 lineto

 99.52373 130.37466 lineto

 99.58383 130.37543 lineto

 99.65135 130.37639 lineto

 99.72719 130.37756 lineto

 99.81238 130.3791 lineto

 99.90807 130.38101 lineto

 100.01556 130.38342 lineto

 100.13626 130.38646 lineto

 100.27187 130.39029 lineto

 100.42415 130.39513 lineto

 100.5952 130.40126 lineto

 100.78728 130.40895 lineto

 101.00299 130.41867 lineto

 101.2452 130.43094 lineto

 101.51714 130.44643 lineto

 101.82242 130.46594 lineto

 102.16508 130.49055 lineto

 102.5496 130.5216 lineto

 102.981 130.56075 lineto

 103.46483 130.61008 lineto

 104.0072 130.67224 lineto

 104.61491 130.75055 lineto

 105.29536 130.84915 lineto

 106.05663 130.97324 lineto

 106.90738 131.12927 lineto

 107.85686 131.32533 lineto

 108.91475 131.5714 lineto

 110.09091 131.87978 lineto

 111.39508 132.2656 lineto

 112.83627 132.74722 lineto

 114.42215 133.34682 lineto

 116.15793 134.09074 lineto

 118.0451 135.00981 lineto

 120.07962 136.13943 lineto

 122.24988 137.5189 lineto

 124.53433 139.19041 lineto

 126.89908 141.1967 lineto

 129.29575 143.5776 lineto

 131.66023 146.36537 lineto

 133.91336 149.57855 lineto

 135.96371 153.21558 lineto

 137.71385 157.24893 lineto

 139.06914 161.62146 lineto

 139.94882 166.2467 lineto

 140.29686 171.01373 lineto

 140.09027 175.79729 lineto

 139.34274 180.4702 lineto

 138.1025 184.91687 lineto

 136.44493 189.04382 lineto

 134.46217 192.78624 lineto

 132.25195 196.10918 lineto

 129.90791 199.00493 lineto

 127.51274 201.4875 lineto

 125.13458 203.58623 lineto

 122.82576 205.33952 lineto

 120.62372 206.78976 lineto

 118.55295 207.97955 lineto

 116.62737 208.94907 lineto

 114.85272 209.73479 lineto

 113.22878 210.36868 lineto

 111.75113 210.87828 lineto

 110.41267 211.28677 lineto

 109.20462 211.61343 lineto

 108.11734 211.87419 lineto

 107.14099 212.08203 lineto

 106.26584 212.24751 lineto

 105.4825 212.37909 lineto

 104.78212 212.4837 lineto

 104.15648 212.56677 lineto

 103.59802 212.63274 lineto

 103.0998 212.68507 lineto

 102.65552 212.72661 lineto

 102.25946 212.75955 lineto

 101.90652 212.78569 lineto

 101.59206 212.80641 lineto

 101.31194 212.82283 lineto

 101.06242 212.83583 lineto

 100.84023 212.84618 lineto

 100.64233 212.85434 lineto

 100.46613 212.86082 lineto

 100.30925 212.86595 lineto

 100.16954 212.87004 lineto

 100.04517 212.87328 lineto

 99.93445 212.87582 lineto

 99.83586 212.87785 lineto

 99.7481 212.87947 lineto

 99.66997 212.88072 lineto

 99.6004 212.88174 lineto

 99.53847 212.88255 lineto

 99.48335 212.88318 lineto

 99.43428 212.88368 lineto

 99.3906 212.88408 lineto

 99.3517 212.8844 lineto

 99.31708 212.88466 lineto

 99.28624 212.88484 lineto

 99.25882 212.885 lineto

 99.23439 212.88513 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 98.83824 212.88504 moveto

 98.81383 212.8849 lineto

 98.78639 212.88474 lineto

 98.75555 212.88449 lineto

 98.72093 212.8842 lineto

 98.68204 212.88383 lineto

 98.63835 212.88336 lineto

 98.58928 212.88278 lineto

 98.53415 212.88203 lineto

 98.47223 212.88109 lineto

 98.40268 212.87993 lineto

 98.32455 212.87843 lineto

 98.2368 212.87657 lineto

 98.13821 212.87419 lineto

 98.02751 212.87122 lineto

 97.90317 212.86746 lineto

 97.76349 212.8627 lineto

 97.60664 212.85669 lineto

 97.43051 212.84914 lineto

 97.23273 212.8396 lineto

 97.01064 212.82756 lineto

 96.76132 212.81236 lineto

 96.48145 212.79323 lineto

 96.16734 212.76909 lineto

 95.81493 212.73862 lineto

 95.41962 212.70026 lineto

 94.9764 212.65187 lineto

 94.47963 212.59091 lineto

 93.92328 212.51414 lineto

 93.3006 212.41754 lineto

 92.6044 212.296 lineto

 91.82692 212.14322 lineto

 90.96004 211.9514 lineto

 89.99532 211.71082 lineto

 88.92432 211.40964 lineto

 87.739 211.03326 lineto

 86.4322 210.56412 lineto

 84.99846 209.9812 lineto

 83.43503 209.25964 lineto

 81.74318 208.37076 lineto

 79.9299 207.2822 lineto

 78.00983 205.95862 lineto

 76.00737 204.3633 lineto

 73.95863 202.4606 lineto

 71.91286 200.21962 lineto

 69.93268 197.61888 lineto

 68.09258 194.65182 lineto

 66.47466 191.33223 lineto

 65.16217 187.69826 lineto

 64.23044 183.81383 lineto

 63.73744 179.76604 lineto

 63.71538 175.65834 lineto

 64.1657 171.60048 lineto

 65.0589 167.69696 lineto

 66.33913 164.03674 lineto

 67.93222 160.68607 lineto

 69.75531 157.68544 lineto

 71.7258 155.05081 lineto

 73.76833 152.77725 lineto

 75.81909 150.84445 lineto

 77.82753 149.22214 lineto

 79.7564 147.87495 lineto

 81.58032 146.76616 lineto

 83.2838 145.86021 lineto

 84.85924 145.12444 lineto

 86.30492 144.52977 lineto

 87.62326 144.05107 lineto

 88.81953 143.6669 lineto

 89.90079 143.35939 lineto

 90.87498 143.11374 lineto

 91.75058 142.91785 lineto

 92.53598 142.7618 lineto

 93.23936 142.63766 lineto

 93.86853 142.53897 lineto

 94.43074 142.46056 lineto

 94.93274 142.39828 lineto

 95.3807 142.34888 lineto

 95.78021 142.30965 lineto

 96.13643 142.27853 lineto

 96.45389 142.25386 lineto

 96.73677 142.2343 lineto

 96.98877 142.21878 lineto

 97.21324 142.20648 lineto

 97.41316 142.19675 lineto

 97.59119 142.18903 lineto

 97.74974 142.18288 lineto

 97.8909 142.17802 lineto

 98.0166 142.17418 lineto

 98.12851 142.17113 lineto

 98.22813 142.16872 lineto

 98.31685 142.1668 lineto

 98.39581 142.16528 lineto

 98.46613 142.16408 lineto

 98.52873 142.16312 lineto

 98.58444 142.16237 lineto

 98.63405 142.16177 lineto

 98.6782 142.1613 lineto

 98.71751 142.16092 lineto

 98.75252 142.16061 lineto

 98.78368 142.16039 lineto

 99.28894 142.16039 lineto

 99.32011 142.16061 lineto

 99.3551 142.16092 lineto

 99.39442 142.1613 lineto

 99.43858 142.16177 lineto

 99.48819 142.16237 lineto

 99.5439 142.16312 lineto

 99.6065 142.16408 lineto

 99.6768 142.16528 lineto

 99.75578 142.1668 lineto

 99.84448 142.16872 lineto

 99.94412 142.17113 lineto

 100.05603 142.17418 lineto

 100.18173 142.17802 lineto

 100.32288 142.18288 lineto

 100.48143 142.18903 lineto

 100.65947 142.19675 lineto

 100.85939 142.20648 lineto

 101.08386 142.21878 lineto

 101.33586 142.2343 lineto

 101.61874 142.25386 lineto

 101.9362 142.27853 lineto

 102.29242 142.30965 lineto

 102.69193 142.34888 lineto

 103.13988 142.39828 lineto

 103.64188 142.46056 lineto

 104.2041 142.53897 lineto

 104.83327 142.63766 lineto

 105.53664 142.7618 lineto

 106.32205 142.91785 lineto

 107.19765 143.11374 lineto

 108.17184 143.35939 lineto

 109.2531 143.6669 lineto

 110.44937 144.05107 lineto

 111.7677 144.52977 lineto

 113.21338 145.12444 lineto

 114.78882 145.86021 lineto

 116.49231 146.76616 lineto

 118.31622 147.87495 lineto

 120.2451 149.22214 lineto

 122.25354 150.84445 lineto

 124.3043 152.77725 lineto

 126.34683 155.05081 lineto

 128.31732 157.68544 lineto

 130.14041 160.68607 lineto

 131.73349 164.03674 lineto

 133.01373 167.69696 lineto

 133.90694 171.60048 lineto

 134.35725 175.65834 lineto

 134.33517 179.76604 lineto

 133.8422 183.81383 lineto

 132.91046 187.69826 lineto

 131.59798 191.33223 lineto

 129.98006 194.65182 lineto

 128.13995 197.61888 lineto

 126.15976 200.21962 lineto

 124.114 202.4606 lineto

 122.06525 204.3633 lineto

 120.0628 205.95862 lineto

 118.14273 207.2822 lineto

 116.32945 208.37076 lineto

 114.63759 209.25964 lineto

 113.07416 209.9812 lineto

 111.64041 210.56412 lineto

 110.33362 211.03326 lineto

 109.14832 211.40964 lineto

 108.07732 211.71082 lineto

 107.11258 211.9514 lineto

 106.24571 212.14322 lineto

 105.46823 212.296 lineto

 104.77203 212.41754 lineto

 104.14935 212.51414 lineto

 103.59299 212.59091 lineto

 103.09624 212.65187 lineto

 102.65302 212.70026 lineto

 102.25769 212.73862 lineto

 101.90529 212.76909 lineto

 101.59119 212.79323 lineto

 101.31131 212.81236 lineto

 101.06198 212.82756 lineto

 100.8399 212.8396 lineto

 100.64212 212.84914 lineto

 100.46597 212.85669 lineto

 100.30914 212.8627 lineto

 100.16946 212.86746 lineto

 100.0451 212.87122 lineto

 99.9344 212.87419 lineto

 99.83583 212.87657 lineto

 99.74808 212.87843 lineto

 99.66995 212.87993 lineto

 99.60039 212.88109 lineto

 99.53847 212.88203 lineto

 99.48335 212.88278 lineto

 99.43428 212.88336 lineto

 99.3906 212.88383 lineto

 99.3517 212.8842 lineto

 99.31708 212.88449 lineto

 99.28624 212.88474 lineto

 99.2588 212.8849 lineto

 99.23439 212.88504 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 98.83824 212.88496 moveto

 98.81383 212.8848 lineto

 98.78639 212.8846 lineto

 98.75555 212.88434 lineto

 98.72093 212.884 lineto

 98.68205 212.88358 lineto

 98.63837 212.88306 lineto

 98.58928 212.88237 lineto

 98.53416 212.88152 lineto

 98.47223 212.88048 lineto

 98.4027 212.87912 lineto

 98.32457 212.87741 lineto

 98.23683 212.87529 lineto

 98.13826 212.87257 lineto

 98.02757 212.86916 lineto

 97.90326 212.86485 lineto

 97.76363 212.85944 lineto

 97.60683 212.85257 lineto

 97.43077 212.84393 lineto

 97.2331 212.83304 lineto

 97.01115 212.81929 lineto

 96.76204 212.80194 lineto

 96.48248 212.78006 lineto

 96.16881 212.7525 lineto

 95.81699 212.71774 lineto

 95.42252 212.67392 lineto

 94.9805 212.61876 lineto

 94.48544 212.54926 lineto

 93.93149 212.46178 lineto

 93.3122 212.35175 lineto

 92.62077 212.21347 lineto

 91.85 212.03989 lineto

 90.99255 211.82224 lineto

 90.04105 211.54979 lineto

 88.9885 211.20947 lineto

 87.82886 210.78548 lineto

 86.5576 210.25888 lineto

 85.17276 209.60747 lineto

 83.6761 208.80568 lineto

 82.07463 207.82469 lineto

 80.38232 206.63335 lineto

 78.6219 205.19948 lineto

 76.82663 203.49231 lineto

 75.04134 201.48572 lineto

 73.32253 199.16252 lineto

 71.7366 196.51938 lineto

 70.35603 193.5713 lineto

 69.25311 190.35503 lineto

 68.49203 186.92972 lineto

 68.12059 183.37418 lineto

 68.16315 179.78033 lineto

 68.61687 176.24419 lineto

 69.4522 172.85568 lineto

 70.61734 169.69002 lineto

 72.04579 166.80188 lineto

 73.66457 164.22342 lineto

 75.40205 161.9656 lineto

 77.19359 160.02182 lineto

 78.98499 158.37271 lineto

 80.73386 156.9909 lineto

 82.40918 155.84508 lineto

 83.99014 154.90309 lineto

 85.46437 154.13419 lineto

 86.82607 153.51022 lineto

 88.0743 153.00624 lineto

 89.21167 152.60074 lineto

 90.24307 152.27545 lineto

 91.17482 152.01515 lineto

 92.014 151.8073 lineto

 92.76799 151.64156 lineto

 93.44412 151.50957 lineto

 94.04955 151.40457 lineto

 94.59099 151.32109 lineto

 95.07477 151.25478 lineto

 95.50667 151.20215 lineto

 95.89204 151.16035 lineto

 96.23573 151.1272 lineto

 96.54213 151.1009 lineto

 96.8152 151.08003 lineto

 97.05852 151.06349 lineto

 97.27528 151.05037 lineto

 97.46834 151.03998 lineto

 97.6403 151.03175 lineto

 97.79344 151.0252 lineto

 97.92978 151.02002 lineto

 98.05121 151.01593 lineto

 98.1593 151.01266 lineto

 98.25555 151.0101 lineto

 98.34126 151.00806 lineto

 98.41754 151.00642 lineto

 98.48546 151.00516 lineto

 98.54591 151.00414 lineto

 98.59976 151.00333 lineto

 98.64769 151.00269 lineto

 98.69034 151.00218 lineto

 98.72832 151.00177 lineto

 98.76213 151.00145 lineto

 98.79222 151.00122 lineto

 98.81905 151.001 lineto

 98.84288 151.00085 lineto

 99.22975 151.00085 lineto

 99.25359 151.001 lineto

 99.28041 151.00122 lineto

 99.31049 151.00145 lineto

 99.34431 151.00177 lineto

 99.3823 151.00218 lineto

 99.42494 151.00269 lineto

 99.47285 151.00333 lineto

 99.5267 151.00414 lineto

 99.58716 151.00516 lineto

 99.65509 151.00642 lineto

 99.73137 151.00806 lineto

 99.81708 151.0101 lineto

 99.91333 151.01266 lineto

 100.02142 151.01593 lineto

 100.14284 151.02002 lineto

 100.27919 151.0252 lineto

 100.43231 151.03175 lineto

 100.60428 151.03998 lineto

 100.79735 151.05037 lineto

 101.01411 151.06349 lineto

 101.25742 151.08003 lineto

 101.53049 151.1009 lineto

 101.83688 151.1272 lineto

 102.18057 151.16035 lineto

 102.56596 151.20215 lineto

 102.99786 151.25478 lineto

 103.48164 151.32109 lineto

 104.02309 151.40457 lineto

 104.62851 151.50957 lineto

 105.30464 151.64156 lineto

 106.05861 151.8073 lineto

 106.89781 152.01515 lineto

 107.82956 152.27545 lineto

 108.86096 152.60074 lineto

 109.99834 153.00624 lineto

 111.24657 153.51022 lineto

 112.60825 154.13419 lineto

 114.08247 154.90309 lineto

 115.66345 155.84508 lineto

 117.33878 156.9909 lineto

 119.08765 158.37271 lineto

 120.87904 160.02182 lineto

 122.67058 161.9656 lineto

 124.40805 164.22342 lineto

 126.02684 166.80188 lineto

 127.45528 169.69002 lineto

 128.62044 172.85568 lineto

 129.45575 176.24419 lineto

 129.90948 179.78033 lineto

 129.95204 183.37418 lineto

 129.5806 186.92972 lineto

 128.81952 190.35503 lineto

 127.71658 193.5713 lineto

 126.33601 196.51938 lineto

 124.7501 199.16252 lineto

 123.0313 201.48572 lineto

 121.246 203.49231 lineto

 119.45073 205.19948 lineto

 117.6903 206.63335 lineto

 115.99799 207.82469 lineto

 114.39651 208.80568 lineto

 112.89987 209.60747 lineto

 111.51503 210.25888 lineto

 110.24376 210.78548 lineto

 109.08414 211.20947 lineto

 108.03157 211.54979 lineto

 107.08006 211.82224 lineto

 106.22261 212.03989 lineto

 105.45186 212.21347 lineto

 104.76042 212.35175 lineto

 104.14114 212.46178 lineto

 103.58719 212.54926 lineto

 103.09213 212.61876 lineto

 102.6501 212.67392 lineto

 102.25565 212.71774 lineto

 101.90382 212.7525 lineto

 101.59015 212.78006 lineto

 101.31058 212.80194 lineto

 101.06146 212.81929 lineto

 100.83954 212.83304 lineto

 100.64186 212.84393 lineto

 100.46579 212.85257 lineto

 100.309 212.85944 lineto

 100.16937 212.86485 lineto

 100.04504 212.86916 lineto

 99.93436 212.87257 lineto

 99.8358 212.87529 lineto

 99.74806 212.87741 lineto

 99.66994 212.87912 lineto

 99.60039 212.88048 lineto

 99.53845 212.88152 lineto

 99.48335 212.88237 lineto

 99.43427 212.88306 lineto

 99.39058 212.88358 lineto

 99.3517 212.884 lineto

 99.31708 212.88434 lineto

 99.28624 212.8846 lineto

 99.2588 212.8848 lineto

 99.23439 212.88496 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 98.83824 212.88489 moveto

 98.81383 212.8847 lineto

 98.78639 212.88448 lineto

 98.75555 212.88417 lineto

 98.72093 212.88379 lineto

 98.68205 212.88332 lineto

 98.63837 212.88274 lineto

 98.5893 212.88197 lineto

 98.53416 212.88101 lineto

 98.47224 212.87982 lineto

 98.40271 212.8783 lineto

 98.3246 212.8764 lineto

 98.23686 212.87398 lineto

 98.1383 212.87094 lineto

 98.02765 212.86711 lineto

 97.90337 212.86227 lineto

 97.76376 212.85616 lineto

 97.60703 212.84845 lineto

 97.43105 212.83875 lineto

 97.23349 212.82649 lineto

 97.01173 212.81102 lineto

 96.76285 212.79152 lineto

 96.48363 212.76694 lineto

 96.17043 212.73595 lineto

 95.81929 212.6969 lineto

 95.42581 212.6477 lineto

 94.98514 212.58574 lineto

 94.492 212.50775 lineto

 93.94075 212.40967 lineto

 93.32529 212.28639 lineto

 92.63922 212.13165 lineto

 91.876 211.93759 lineto

 91.0291 211.69475 lineto

 90.09233 211.39137 lineto

 89.06029 211.01344 lineto

 87.92897 210.54405 lineto

 86.6967 209.96349 lineto

 85.36511 209.24889 lineto

 83.94046 208.37468 lineto

 82.43526 207.31313 lineto

 80.86984 206.03564 lineto

 79.27386 204.51486 lineto

 77.68738 202.7277 lineto

 76.16068 200.65898 lineto

 74.7529 198.30592 lineto

 73.52849 195.6821 lineto

 72.55164 192.82043 lineto

 71.87933 189.77377 lineto

 71.5538 186.61229 lineto

 71.59637 183.4179 lineto

 72.00426 180.27586 lineto

 72.75085 177.266 lineto

 73.78993 174.45497 lineto

 75.06224 171.89113 lineto

 76.5029 169.60281 lineto

 78.0483 167.59949 lineto

 79.64105 165.87517 lineto

 81.23315 164.41252 lineto

 82.78702 163.1871 lineto

 84.2752 162.17108 lineto

 85.67937 161.3359 lineto

 86.98853 160.65425 lineto

 88.19762 160.10112 lineto

 89.30586 159.65437 lineto

 90.31564 159.29492 lineto

 91.23126 159.0066 lineto

 92.05838 158.77591 lineto

 92.80331 158.59167 lineto

 93.4726 158.44476 lineto

 94.07275 158.32779 lineto

 94.61014 158.23473 lineto

 95.09074 158.16075 lineto

 95.52013 158.10197 lineto

 95.90349 158.05533 lineto

 96.24554 158.0183 lineto

 96.5506 157.9889 lineto

 96.82256 157.9656 lineto

 97.06493 157.9471 lineto

 97.28088 157.93245 lineto

 97.47327 157.92084 lineto

 97.64464 157.91162 lineto

 97.79726 157.90431 lineto

 97.93318 157.89851 lineto

 98.0542 157.89394 lineto

 98.16196 157.89029 lineto

 98.2579 157.8874 lineto

 98.34334 157.88513 lineto

 98.41939 157.88332 lineto

 98.4871 157.88188 lineto

 98.54741 157.88075 lineto

 98.60106 157.87984 lineto

 98.64885 157.87914 lineto

 98.69138 157.87856 lineto

 98.72925 157.87811 lineto

 98.76295 157.87775 lineto

 98.79297 157.87746 lineto

 98.81967 157.87724 lineto

 98.84346 157.87709 lineto

 98.86462 157.87695 lineto

 98.88348 157.87683 lineto

 99.18915 157.87683 lineto

 99.208 157.87695 lineto

 99.22917 157.87709 lineto

 99.25294 157.87724 lineto

 99.27966 157.87746 lineto

 99.30966 157.87775 lineto

 99.34338 157.87811 lineto

 99.38126 157.87856 lineto

 99.42377 157.87914 lineto

 99.47157 157.87984 lineto

 99.52522 157.88075 lineto

 99.58553 157.88188 lineto

 99.65323 157.88332 lineto

 99.7293 157.88513 lineto

 99.81473 157.8874 lineto

 99.91066 157.89029 lineto

 100.01843 157.89394 lineto

 100.13945 157.89851 lineto

 100.27538 157.90431 lineto

 100.42798 157.91162 lineto

 100.59937 157.92084 lineto

 100.79173 157.93245 lineto

 101.0077 157.9471 lineto

 101.25008 157.9656 lineto

 101.52203 157.9889 lineto

 101.82709 158.0183 lineto

 102.16914 158.05533 lineto

 102.55249 158.10197 lineto

 102.98189 158.16075 lineto

 103.46248 158.23473 lineto

 103.99988 158.32779 lineto

 104.60004 158.44476 lineto

 105.26932 158.59167 lineto

 106.01424 158.77591 lineto

 106.84137 159.0066 lineto

 107.75699 159.29492 lineto

 108.76675 159.65437 lineto

 109.87502 160.10112 lineto

 111.0841 160.65425 lineto

 112.39326 161.3359 lineto

 113.79741 162.17108 lineto

 115.28561 163.1871 lineto

 116.83948 164.41252 lineto

 118.43156 165.87517 lineto

 120.02434 167.59949 lineto

 121.56973 169.60281 lineto

 123.01039 171.89113 lineto

 124.28268 174.45497 lineto

 125.32178 177.266 lineto

 126.06837 180.27586 lineto

 126.47626 183.4179 lineto

 126.51883 186.61229 lineto

 126.19328 189.77377 lineto

 125.521 192.82043 lineto

 124.54414 195.6821 lineto

 123.31973 198.30592 lineto

 121.91196 200.65898 lineto

 120.38525 202.7277 lineto

 118.79875 204.51486 lineto

 117.20279 206.03564 lineto

 115.63737 207.31313 lineto

 114.13216 208.37468 lineto

 112.70752 209.24889 lineto

 111.37592 209.96349 lineto

 110.14366 210.54405 lineto

 109.01234 211.01344 lineto

 107.9803 211.39137 lineto

 107.04352 211.69475 lineto

 106.19662 211.93759 lineto

 105.43341 212.13165 lineto

 104.74734 212.28639 lineto

 104.13187 212.40967 lineto

 103.58061 212.50775 lineto

 103.0875 212.58574 lineto

 102.64682 212.6477 lineto

 102.25333 212.6969 lineto

 101.90219 212.73595 lineto

 101.589 212.76694 lineto

 101.30978 212.79152 lineto

 101.06088 212.81102 lineto

 100.83914 212.82649 lineto

 100.64157 212.83875 lineto

 100.46559 212.84845 lineto

 100.30887 212.85616 lineto

 100.16927 212.86227 lineto

 100.04497 212.86711 lineto

 99.93431 212.87094 lineto

 99.83577 212.87398 lineto

 99.74803 212.8764 lineto

 99.66992 212.8783 lineto

 99.60037 212.87982 lineto

 99.53845 212.88101 lineto

 99.48334 212.88197 lineto

 99.43427 212.88274 lineto

 99.39058 212.88332 lineto

 99.3517 212.88379 lineto

 99.31708 212.88417 lineto

 99.28624 212.88448 lineto

 99.2588 212.8847 lineto

 99.23439 212.88489 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 98.83824 212.88481 moveto

 98.81383 212.88461 lineto

 98.78639 212.88435 lineto

 98.75555 212.88402 lineto

 98.72093 212.88359 lineto

 98.68205 212.88307 lineto

 98.63837 212.8824 lineto

 98.5893 212.88156 lineto

 98.53418 212.88052 lineto

 98.47226 212.87918 lineto

 98.40273 212.87749 lineto

 98.32463 212.87538 lineto

 98.2369 212.8727 lineto

 98.13837 212.86931 lineto

 98.02773 212.86505 lineto

 97.90346 212.85968 lineto

 97.76393 212.85289 lineto

 97.60725 212.84433 lineto

 97.43137 212.83354 lineto

 97.23395 212.81992 lineto

 97.01236 212.80276 lineto

 96.76376 212.78111 lineto

 96.48492 212.75383 lineto

 96.17226 212.71942 lineto

 95.82188 212.6761 lineto

 95.42946 212.62154 lineto

 94.99031 212.55286 lineto

 94.49931 212.46645 lineto

 93.95108 212.35786 lineto

 93.33983 212.22151 lineto

 92.65973 212.05057 lineto

 91.90485 211.83652 lineto

 91.06955 211.56912 lineto

 90.14894 211.23586 lineto

 89.13928 210.82188 lineto

 88.03879 210.3096 lineto

 86.84859 209.67876 lineto

 85.57387 208.90651 lineto

 84.22536 207.96806 lineto

 82.82057 206.83768 lineto

 81.3854 205.49052 lineto

 79.95497 203.90533 lineto

 78.57372 202.06763 lineto

 77.2942 199.97366 lineto

 76.17422 197.63414 lineto

 75.2718 195.07701 lineto

 74.6391 192.34818 lineto

 74.31563 189.50954 lineto

 74.32257 186.6341 lineto

 74.65945 183.79863 lineto

 75.30428 181.0758 lineto

 76.21684 178.52692 lineto

 77.34465 176.1972 lineto

 78.62949 174.11378 lineto

 80.0138 172.28671 lineto

 81.44527 170.71178 lineto

 82.87979 169.37411 lineto

 84.2827 168.2522 lineto

 85.62845 167.32117 lineto

 86.89981 166.55528 lineto

 88.08633 165.9298 lineto

 89.18307 165.422 lineto

 90.18898 165.01169 lineto

 91.10596 164.68147 lineto

 91.93779 164.41652 lineto

 92.68945 164.20447 lineto

 93.36658 164.0351 lineto

 93.97507 163.90002 lineto

 94.52083 163.79248 lineto

 95.00957 163.70691 lineto

 95.44666 163.63885 lineto

 95.83727 163.58482 lineto

 96.18597 163.5419 lineto

 96.49716 163.50784 lineto

 96.77467 163.4808 lineto

 97.02211 163.45937 lineto

 97.24261 163.44237 lineto

 97.4391 163.4289 lineto

 97.61415 163.41818 lineto

 97.77005 163.40971 lineto

 97.9089 163.40298 lineto

 98.03258 163.39766 lineto

 98.14268 163.39345 lineto

 98.24075 163.39009 lineto

 98.32806 163.38744 lineto

 98.40579 163.38533 lineto

 98.47499 163.38368 lineto

 98.5366 163.38235 lineto

 98.59145 163.3813 lineto

 98.64027 163.3805 lineto

 98.68376 163.37982 lineto

 98.72246 163.37932 lineto

 98.75691 163.37889 lineto

 98.78758 163.37857 lineto

 98.8149 163.37831 lineto

 98.8392 163.3781 lineto

 98.86082 163.37793 lineto

 98.88011 163.3778 lineto

 98.89725 163.3777 lineto

 98.91252 163.37761 lineto

 99.16011 163.37761 lineto

 99.17537 163.3777 lineto

 99.19252 163.3778 lineto

 99.21179 163.37793 lineto

 99.23343 163.3781 lineto

 99.25774 163.37831 lineto

 99.28503 163.37857 lineto

 99.31572 163.37889 lineto

 99.35016 163.37932 lineto

 99.38887 163.37982 lineto

 99.43234 163.3805 lineto

 99.48117 163.3813 lineto

 99.53603 163.38235 lineto

 99.59764 163.38368 lineto

 99.66684 163.38533 lineto

 99.74457 163.38744 lineto

 99.83186 163.39009 lineto

 99.92993 163.39345 lineto

 100.04005 163.39766 lineto

 100.16371 163.40298 lineto

 100.30257 163.40971 lineto

 100.45848 163.41818 lineto

 100.63353 163.4289 lineto

 100.83002 163.44237 lineto

 101.05052 163.45937 lineto

 101.29794 163.4808 lineto

 101.57545 163.50784 lineto

 101.88664 163.5419 lineto

 102.23537 163.58482 lineto

 102.62596 163.63885 lineto

 103.06306 163.70691 lineto

 103.55179 163.79248 lineto

 104.09756 163.90002 lineto

 104.70605 164.0351 lineto

 105.38318 164.20447 lineto

 106.13484 164.41652 lineto

 106.96667 164.68147 lineto

 107.88365 165.01169 lineto

 108.88956 165.422 lineto

 109.9863 165.9298 lineto

 111.17282 166.55528 lineto

 112.44418 167.32117 lineto

 113.78993 168.2522 lineto

 115.19283 169.37411 lineto

 116.62737 170.71178 lineto

 118.05882 172.28671 lineto

 119.44313 174.11378 lineto

 120.72798 176.1972 lineto

 121.85579 178.52692 lineto

 122.76836 181.0758 lineto

 123.41318 183.79863 lineto

 123.75006 186.6341 lineto

 123.757 189.50954 lineto

 123.43353 192.34818 lineto

 122.80083 195.07701 lineto

 121.8984 197.63414 lineto

 120.77841 199.97366 lineto

 119.49892 202.06763 lineto

 118.11766 203.90533 lineto

 116.68721 205.49052 lineto

 115.25206 206.83768 lineto

 113.84727 207.96806 lineto

 112.49875 208.90651 lineto

 111.22403 209.67876 lineto

 110.03384 210.3096 lineto

 108.93333 210.82188 lineto

 107.92369 211.23586 lineto

 107.00307 211.56912 lineto

 106.16779 211.83652 lineto

 105.4129 212.05057 lineto

 104.73279 212.22151 lineto

 104.12155 212.35786 lineto

 103.5733 212.46645 lineto

 103.0823 212.55286 lineto

 102.64317 212.62154 lineto

 102.25075 212.6761 lineto

 101.90038 212.71942 lineto

 101.58769 212.75383 lineto

 101.30887 212.78111 lineto

 101.06027 212.80276 lineto

 100.83868 212.81992 lineto

 100.64125 212.83354 lineto

 100.46536 212.84433 lineto

 100.3087 212.85289 lineto

 100.16917 212.85968 lineto

 100.04489 212.86505 lineto

 99.93425 212.86931 lineto

 99.83574 212.8727 lineto

 99.748 212.87538 lineto

 99.6699 212.87749 lineto

 99.60036 212.87918 lineto

 99.53844 212.88052 lineto

 99.48334 212.88156 lineto

 99.43427 212.8824 lineto

 99.39058 212.88307 lineto

 99.3517 212.88359 lineto

 99.31708 212.88402 lineto

 99.28624 212.88435 lineto

 99.2588 212.88461 lineto

 99.23439 212.88481 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 98.83824 212.88474 moveto

 98.81383 212.8845 lineto

 98.78639 212.88422 lineto

 98.75557 212.88385 lineto

 98.72095 212.88339 lineto

 98.68205 212.88283 lineto

 98.63838 212.88208 lineto

 98.58931 212.88115 lineto

 98.5342 212.88 lineto

 98.47227 212.87852 lineto

 98.40274 212.87668 lineto

 98.32466 212.87434 lineto

 98.23694 212.8714 lineto

 98.13843 212.86769 lineto

 98.02782 212.863 lineto

 97.90358 212.85709 lineto

 97.7641 212.84962 lineto

 97.60751 212.84021 lineto

 97.43173 212.82834 lineto

 97.23445 212.81339 lineto

 97.01308 212.7945 lineto

 96.76479 212.7707 lineto

 96.48634 212.74072 lineto

 96.17429 212.70294 lineto

 95.82474 212.65535 lineto

 95.4335 212.59543 lineto

 94.996 212.52008 lineto

 94.50737 212.42534 lineto

 93.96242 212.30638 lineto

 93.35585 212.15715 lineto

 92.68224 211.97028 lineto

 91.93642 211.73672 lineto

 91.1138 211.44551 lineto

 90.21071 211.08351 lineto

 89.22516 210.63521 lineto

 88.15765 210.08263 lineto

 87.01213 209.40541 lineto

 85.79735 208.58124 lineto

 84.52798 207.58682 lineto

 83.22615 206.39928 lineto

 81.92224 204.99843 lineto

 80.65514 203.36978 lineto

 79.47148 201.50792 lineto

 78.42317 199.41994 lineto

 77.56335 197.12836 lineto

 76.94086 194.67198 lineto

 76.59412 192.10474 lineto

 76.54567 189.49156 lineto

 76.79875 186.90224 lineto

 77.33673 184.40396 lineto

 78.1257 182.05476 lineto

 79.11952 179.89857 lineto

 80.26575 177.96306 lineto

 81.5116 176.26 lineto

 82.8084 174.78764 lineto

 84.11461 173.53397 lineto

 85.3971 172.4803 lineto

 86.63124 171.60432 lineto

 87.80008 170.88268 lineto

 88.89314 170.29263 lineto

 89.90504 169.81311 lineto

 90.83434 169.42535 lineto

 91.68233 169.11308 lineto

 92.45221 168.86241 lineto

 93.1483 168.66168 lineto

 93.77573 168.50133 lineto

 94.33975 168.37341 lineto

 94.8458 168.27151 lineto

 95.29907 168.19044 lineto

 95.70456 168.12598 lineto

 96.06696 168.07475 lineto

 96.39053 168.03409 lineto

 96.6793 168.0018 lineto

 96.93689 167.97617 lineto

 97.16652 167.95586 lineto

 97.3712 167.93973 lineto

 97.55357 167.92694 lineto

 97.71606 167.91681 lineto

 97.8608 167.9088 lineto

 97.98972 167.9024 lineto

 98.1045 167.89735 lineto

 98.20673 167.89336 lineto

 98.29774 167.89018 lineto

 98.3788 167.88768 lineto

 98.45096 167.88568 lineto

 98.5152 167.88411 lineto

 98.5724 167.88284 lineto

 98.62332 167.88187 lineto

 98.66866 167.88107 lineto

 98.709 167.88045 lineto

 98.74495 167.87996 lineto

 98.77693 167.87958 lineto

 98.8054 167.87926 lineto

 98.83075 167.87901 lineto

 98.85332 167.87881 lineto

 98.8734 167.87866 lineto

 98.89128 167.87854 lineto

 98.90721 167.87843 lineto

 98.92139 167.87836 lineto

 98.934 167.8783 lineto

 99.13861 167.8783 lineto

 99.15123 167.87836 lineto

 99.16542 167.87843 lineto

 99.18135 167.87854 lineto

 99.19922 167.87866 lineto

 99.21931 167.87881 lineto

 99.24188 167.87901 lineto

 99.26723 167.87926 lineto

 99.2957 167.87958 lineto

 99.32768 167.87996 lineto

 99.36362 167.88045 lineto

 99.40396 167.88107 lineto

 99.4493 167.88187 lineto

 99.50023 167.88284 lineto

 99.55743 167.88411 lineto

 99.62167 167.88568 lineto

 99.69382 167.88768 lineto

 99.77487 167.89018 lineto

 99.8659 167.89336 lineto

 99.96812 167.89735 lineto

 100.08292 167.9024 lineto

 100.21182 167.9088 lineto

 100.35657 167.91681 lineto

 100.51904 167.92694 lineto

 100.70143 167.93973 lineto

 100.9061 167.95586 lineto

 101.13574 167.97617 lineto

 101.39333 168.0018 lineto

 101.68208 168.03409 lineto

 102.00568 168.07475 lineto

 102.36806 168.12598 lineto

 102.77356 168.19044 lineto

 103.22684 168.27151 lineto

 103.73288 168.37341 lineto

 104.2969 168.50133 lineto

 104.92432 168.66168 lineto

 105.62042 168.86241 lineto

 106.39029 169.11308 lineto

 107.2383 169.42535 lineto

 108.16759 169.81311 lineto

 109.17949 170.29263 lineto

 110.27254 170.88268 lineto

 111.44138 171.60432 lineto

 112.67554 172.4803 lineto

 113.95802 173.53397 lineto

 115.26424 174.78764 lineto

 116.56102 176.26 lineto

 117.80687 177.96306 lineto

 118.9531 179.89857 lineto

 119.94693 182.05476 lineto

 120.7359 184.40396 lineto

 121.27388 186.90224 lineto

 121.52696 189.49156 lineto

 121.47852 192.10474 lineto

 121.13177 194.67198 lineto

 120.50926 197.12836 lineto

 119.64946 199.41994 lineto

 118.60115 201.50792 lineto

 117.4175 203.36978 lineto

 116.15039 204.99843 lineto

 114.84647 206.39928 lineto

 113.54465 207.58682 lineto

 112.27528 208.58124 lineto

 111.06049 209.40541 lineto

 109.91498 210.08263 lineto

 108.84746 210.63521 lineto

 107.86192 211.08351 lineto

 106.95883 211.44551 lineto

 106.1362 211.73672 lineto

 105.3904 211.97028 lineto

 104.71678 212.15715 lineto

 104.11021 212.30638 lineto

 103.56526 212.42534 lineto

 103.07663 212.52008 lineto

 102.63913 212.59543 lineto

 102.2479 212.65535 lineto

 101.89833 212.70294 lineto

 101.58629 212.74072 lineto

 101.30785 212.7707 lineto

 101.05956 212.7945 lineto

 100.83818 212.81339 lineto

 100.64088 212.82834 lineto

 100.4651 212.84021 lineto

 100.30853 212.84962 lineto

 100.16905 212.85709 lineto

 100.0448 212.863 lineto

 99.93419 212.86769 lineto

 99.8357 212.8714 lineto

 99.74797 212.87434 lineto

 99.66988 212.87668 lineto

 99.60034 212.87852 lineto

 99.53842 212.88 lineto

 99.48332 212.88115 lineto

 99.43425 212.88208 lineto

 99.39058 212.88283 lineto

 99.35168 212.88339 lineto

 99.31706 212.88385 lineto

 99.28624 212.88422 lineto

 99.2588 212.8845 lineto

 99.23439 212.88474 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 98.83824 212.88466 moveto

 98.81383 212.88441 lineto

 98.78639 212.8841 lineto

 98.75557 212.8837 lineto

 98.72095 212.88318 lineto

 98.68207 212.88257 lineto

 98.63838 212.88176 lineto

 98.58931 212.88075 lineto

 98.5342 212.8795 lineto

 98.47229 212.8779 lineto

 98.40276 212.87587 lineto

 98.32469 212.87332 lineto

 98.23698 212.87012 lineto

 98.1385 212.86606 lineto

 98.02791 212.86095 lineto

 97.90372 212.85449 lineto

 97.7643 212.84636 lineto

 97.60779 212.8361 lineto

 97.43211 212.82317 lineto

 97.23499 212.80684 lineto

 97.01387 212.78627 lineto

 96.76587 212.76031 lineto

 96.48788 212.72765 lineto

 96.1765 212.68648 lineto

 95.82787 212.63466 lineto

 95.43791 212.56946 lineto

 95.00223 212.48747 lineto

 94.51616 212.38448 lineto

 93.97482 212.25526 lineto

 93.37326 212.09337 lineto

 92.70671 211.89091 lineto

 91.97072 211.63834 lineto

 91.1617 211.32408 lineto

 90.27737 210.93454 lineto

 89.31755 210.45375 lineto

 88.28491 209.86359 lineto

 87.18633 209.14404 lineto

 86.0337 208.27379 lineto

 84.84555 207.23164 lineto

 83.64772 205.99828 lineto

 82.47394 204.55878 lineto

 81.3653 202.90576 lineto

 80.3685 201.04266 lineto

 79.53236 198.98627 lineto

 78.90317 196.76846 lineto

 78.51909 194.43544 lineto

 78.40483 192.04466 lineto

 78.56796 189.6596 lineto

 78.99773 187.34306 lineto

 79.66666 185.15088 lineto

 80.53479 183.12683 lineto

 81.55495 181.30011 lineto

 82.67839 179.68504 lineto

 83.85922 178.28285 lineto

 85.05759 177.0846 lineto

 86.2411 176.07443 lineto

 87.3853 175.23244 lineto

 88.47292 174.53732 lineto

 89.49301 173.96797 lineto

 90.43956 173.5046 lineto

 91.31046 173.12947 lineto

 92.10632 172.82709 lineto

 92.82971 172.58417 lineto

 93.48444 172.38954 lineto

 94.07495 172.23396 lineto

 94.60616 172.10983 lineto

 95.08295 172.01091 lineto

 95.51021 171.93217 lineto

 95.8925 171.86958 lineto

 96.23425 171.81982 lineto

 96.53947 171.78029 lineto

 96.81189 171.74893 lineto

 97.05492 171.72404 lineto

 97.2716 171.7043 lineto

 97.46474 171.68863 lineto

 97.63684 171.67621 lineto

 97.79019 171.66635 lineto

 97.92677 171.65854 lineto

 98.04845 171.65236 lineto

 98.1568 171.64745 lineto

 98.25328 171.64355 lineto

 98.33919 171.64049 lineto

 98.41568 171.63803 lineto

 98.48381 171.6361 lineto

 98.54445 171.63455 lineto

 98.59842 171.63335 lineto

 98.6465 171.63239 lineto

 98.68927 171.6316 lineto

 98.72737 171.63101 lineto

 98.7613 171.63054 lineto

 98.79147 171.63014 lineto

 98.81836 171.62985 lineto

 98.84229 171.62961 lineto

 98.86359 171.62941 lineto

 98.88255 171.62926 lineto

 98.89943 171.62914 lineto

 98.91444 171.62906 lineto

 98.92783 171.62898 lineto

 98.93974 171.62892 lineto

 98.95033 171.62888 lineto

 99.12228 171.62888 lineto

 99.13289 171.62892 lineto

 99.1448 171.62898 lineto

 99.15817 171.62906 lineto

 99.1732 171.62914 lineto

 99.19008 171.62926 lineto

 99.20905 171.62941 lineto

 99.23035 171.62961 lineto

 99.25427 171.62985 lineto

 99.28114 171.63014 lineto

 99.31133 171.63054 lineto

 99.34526 171.63101 lineto

 99.38335 171.6316 lineto

 99.42613 171.63239 lineto

 99.47421 171.63335 lineto

 99.52818 171.63455 lineto

 99.58882 171.6361 lineto

 99.65694 171.63803 lineto

 99.73344 171.64049 lineto

 99.81935 171.64355 lineto

 99.91583 171.64745 lineto

 100.02417 171.65236 lineto

 100.14586 171.65854 lineto

 100.28244 171.66635 lineto

 100.43579 171.67621 lineto

 100.60788 171.68863 lineto

 100.80103 171.7043 lineto

 101.01772 171.72404 lineto

 101.26074 171.74893 lineto

 101.53316 171.78029 lineto

 101.83838 171.81982 lineto

 102.18011 171.86958 lineto

 102.56242 171.93217 lineto

 102.98969 172.01091 lineto

 103.46646 172.10983 lineto

 103.99767 172.23396 lineto

 104.5882 172.38954 lineto

 105.2429 172.58417 lineto

 105.96631 172.82709 lineto

 106.76216 173.12947 lineto

 107.63307 173.5046 lineto

 108.57962 173.96797 lineto

 109.5997 174.53732 lineto

 110.68733 175.23244 lineto

 111.83153 176.07443 lineto

 113.01505 177.0846 lineto

 114.2134 178.28285 lineto

 115.39424 179.68504 lineto

 116.51768 181.30011 lineto

 117.53784 183.12683 lineto

 118.40596 185.15088 lineto

 119.0749 187.34306 lineto

 119.50465 189.6596 lineto

 119.66779 192.04466 lineto

 119.55353 194.43544 lineto

 119.16945 196.76846 lineto

 118.54027 198.98627 lineto

 117.70412 201.04266 lineto

 116.70732 202.90576 lineto

 115.5987 204.55878 lineto

 114.4249 205.99828 lineto

 113.22708 207.23164 lineto

 112.03893 208.27379 lineto

 110.8863 209.14404 lineto

 109.7877 209.86359 lineto

 108.75508 210.45375 lineto

 107.79524 210.93454 lineto

 106.91093 211.32408 lineto

 106.10191 211.63834 lineto

 105.36592 211.89091 lineto

 104.69936 212.09337 lineto

 104.09781 212.25526 lineto

 103.55646 212.38448 lineto

 103.07039 212.48747 lineto

 102.63472 212.56946 lineto

 102.24477 212.63466 lineto

 101.89613 212.68648 lineto

 101.58473 212.72765 lineto

 101.30675 212.76031 lineto

 101.05876 212.78627 lineto

 100.83763 212.80684 lineto

 100.6405 212.82317 lineto

 100.46483 212.8361 lineto

 100.30833 212.84636 lineto

 100.16891 212.85449 lineto

 100.04471 212.86095 lineto

 99.93411 212.86606 lineto

 99.83565 212.87012 lineto

 99.74794 212.87332 lineto

 99.66986 212.87587 lineto

 99.60033 212.8779 lineto

 99.53842 212.8795 lineto

 99.48332 212.88075 lineto

 99.43425 212.88176 lineto

 99.39056 212.88257 lineto

 99.35168 212.88318 lineto

 99.31706 212.8837 lineto

 99.28624 212.8841 lineto

 99.2588 212.88441 lineto

 99.23439 212.88466 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 98.83824 212.88458 moveto

 98.81383 212.88431 lineto

 98.78639 212.88396 lineto

 98.75557 212.88353 lineto

 98.72095 212.883 lineto

 98.68207 212.88231 lineto

 98.63838 212.88144 lineto

 98.58932 212.88037 lineto

 98.53421 212.87898 lineto

 98.4723 212.87724 lineto

 98.40279 212.87508 lineto

 98.32474 212.87231 lineto

 98.23703 212.86882 lineto

 98.13857 212.86443 lineto

 98.02802 212.8589 lineto

 97.90387 212.85191 lineto

 97.76451 212.84311 lineto

 97.60808 212.83197 lineto

 97.43253 212.81798 lineto

 97.2356 212.8003 lineto

 97.01471 212.77803 lineto

 96.76707 212.74997 lineto

 96.4896 212.7146 lineto

 96.17888 212.67007 lineto

 95.83124 212.61404 lineto

 95.44269 212.54356 lineto

 95.00899 212.455 lineto

 94.52567 212.34386 lineto

 93.9882 212.20454 lineto

 93.39207 212.03021 lineto

 92.73308 211.81252 lineto

 92.0076 211.54144 lineto

 91.21309 211.20502 lineto

 90.3487 210.78917 lineto

 89.41597 210.27777 lineto

 88.41992 209.65286 lineto

 87.37001 208.89507 lineto

 86.28125 207.98459 lineto

 85.17534 206.90283 lineto

 84.08115 205.63448 lineto

 83.03462 204.17027 lineto

 82.07751 202.50986 lineto

 81.25467 200.66476 lineto

 80.61009 198.66002 lineto

 80.18192 196.53433 lineto

 79.99727 194.33795 lineto

 80.06833 192.12834 lineto

 80.39035 189.96432 lineto

 80.94252 187.90007 lineto

 81.691 185.9798 lineto

 82.59381 184.23479 lineto

 83.60585 182.68239 lineto

 84.6836 181.32732 lineto

 85.78827 180.1639 lineto

 86.88779 179.17914 lineto

 87.95728 178.35562 lineto

 88.97887 177.67384 lineto

 89.94069 177.11412 lineto

 90.83595 176.65776 lineto

 91.66167 176.28775 lineto

 92.41771 175.98909 lineto

 93.106 175.74895 lineto

 93.72968 175.5564 lineto

 94.29279 175.40236 lineto

 94.7997 175.27939 lineto

 95.25497 175.1814 lineto

 95.66313 175.10335 lineto

 96.02853 175.04126 lineto

 96.35526 174.99193 lineto

 96.64713 174.95274 lineto

 96.90768 174.92162 lineto

 97.14014 174.89691 lineto

 97.34744 174.87733 lineto

 97.53224 174.86179 lineto

 97.69693 174.84946 lineto

 97.84366 174.83968 lineto

 97.97438 174.83192 lineto

 98.09082 174.8258 lineto

 98.1945 174.8209 lineto

 98.28685 174.81706 lineto

 98.36908 174.81398 lineto

 98.44229 174.81157 lineto

 98.50748 174.80966 lineto

 98.56552 174.80814 lineto

 98.61719 174.80692 lineto

 98.6632 174.80595 lineto

 98.70416 174.8052 lineto

 98.74062 174.80461 lineto

 98.77307 174.80412 lineto

 98.80199 174.80374 lineto

 98.82768 174.80345 lineto

 98.8506 174.80322 lineto

 98.87099 174.80302 lineto

 98.88913 174.80287 lineto

 98.90529 174.80275 lineto

 98.91968 174.80266 lineto

 98.93248 174.80258 lineto

 98.94388 174.80252 lineto

 98.95403 174.80247 lineto

 98.96306 174.80244 lineto

 99.10956 174.80244 lineto

 99.11859 174.80247 lineto

 99.12875 174.80252 lineto

 99.14015 174.80258 lineto

 99.15295 174.80266 lineto

 99.16733 174.80275 lineto

 99.18349 174.80287 lineto

 99.20164 174.80302 lineto

 99.22203 174.80322 lineto

 99.24493 174.80345 lineto

 99.27065 174.80374 lineto

 99.29956 174.80412 lineto

 99.33202 174.80461 lineto

 99.36847 174.8052 lineto

 99.40944 174.80595 lineto

 99.45544 174.80692 lineto

 99.50711 174.80814 lineto

 99.56516 174.80966 lineto

 99.63034 174.81157 lineto

 99.70355 174.81398 lineto

 99.78578 174.81706 lineto

 99.87811 174.8209 lineto

 99.98181 174.8258 lineto

 100.09824 174.83192 lineto

 100.22896 174.83968 lineto

 100.37569 174.84946 lineto

 100.54039 174.86179 lineto

 100.72519 174.87733 lineto

 100.9325 174.89691 lineto

 101.16495 174.92162 lineto

 101.42549 174.95274 lineto

 101.71738 174.99193 lineto

 102.0441 175.04126 lineto

 102.40948 175.10335 lineto

 102.81764 175.1814 lineto

 103.27293 175.27939 lineto

 103.77985 175.40236 lineto

 104.34296 175.5564 lineto

 104.96663 175.74895 lineto

 105.6549 175.98909 lineto

 106.41095 176.28775 lineto

 107.23668 176.65776 lineto

 108.13194 177.11412 lineto

 109.09377 177.67384 lineto

 110.11536 178.35562 lineto

 111.18484 179.17914 lineto

 112.28436 180.1639 lineto

 113.38902 181.32732 lineto

 114.46677 182.68239 lineto

 115.4788 184.23479 lineto

 116.38162 185.9798 lineto

 117.13011 187.90007 lineto

 117.68228 189.96432 lineto

 118.0043 192.12834 lineto

 118.07535 194.33795 lineto

 117.89072 196.53433 lineto

 117.46254 198.66002 lineto

 116.81795 200.66476 lineto

 115.99512 202.50986 lineto

 115.038 204.17027 lineto

 113.99149 205.63448 lineto

 112.8973 206.90283 lineto

 111.79137 207.98459 lineto

 110.70262 208.89507 lineto

 109.6527 209.65286 lineto

 108.65665 210.27777 lineto

 107.72394 210.78917 lineto

 106.85953 211.20502 lineto

 106.06503 211.54144 lineto

 105.33955 211.81252 lineto

 104.68056 212.03021 lineto

 104.08443 212.20454 lineto

 103.54697 212.34386 lineto

 103.06364 212.455 lineto

 102.62993 212.54356 lineto

 102.24138 212.61404 lineto

 101.89375 212.67007 lineto

 101.58304 212.7146 lineto

 101.30556 212.74997 lineto

 101.0579 212.77803 lineto

 100.83702 212.8003 lineto

 100.6401 212.81798 lineto

 100.46455 212.83197 lineto

 100.30812 212.84311 lineto

 100.16876 212.85191 lineto

 100.0446 212.8589 lineto

 99.93405 212.86443 lineto

 99.8356 212.86882 lineto

 99.7479 212.87231 lineto

 99.66983 212.87508 lineto

 99.60031 212.87724 lineto

 99.5384 212.87898 lineto

 99.4833 212.88037 lineto

 99.43425 212.88144 lineto

 99.39056 212.88231 lineto

 99.35168 212.883 lineto

 99.31706 212.88353 lineto

 99.28624 212.88396 lineto

 99.2588 212.88431 lineto

 99.23439 212.88458 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 98.83824 212.8845 moveto

 98.81383 212.8842 lineto

 98.78639 212.88383 lineto

 98.75557 212.88338 lineto

 98.72095 212.8828 lineto

 98.68207 212.88205 lineto

 98.6384 212.88112 lineto

 98.58934 212.87996 lineto

 98.53423 212.87846 lineto

 98.47234 212.8766 lineto

 98.40282 212.87425 lineto

 98.32477 212.87128 lineto

 98.23709 212.86754 lineto

 98.13866 212.86281 lineto

 98.02812 212.85684 lineto

 97.90404 212.84932 lineto

 97.76474 212.83984 lineto

 97.6084 212.82787 lineto

 97.43298 212.81279 lineto

 97.23624 212.79378 lineto

 97.01561 212.76982 lineto

 96.76836 212.73961 lineto

 96.49142 212.70157 lineto

 96.18147 212.6537 lineto

 95.83488 212.59348 lineto

 95.44783 212.51778 lineto

 95.01625 212.42273 lineto

 94.5359 212.30351 lineto

 94.0026 212.15422 lineto

 93.41228 211.9677 lineto

 92.76132 211.73517 lineto

 92.04701 211.44617 lineto

 91.26787 211.0884 lineto

 90.42442 210.64757 lineto

 89.5201 210.10757 lineto

 88.562 209.45079 lineto

 87.56209 208.65884 lineto

 86.53821 207.71391 lineto

 85.51471 206.60037 lineto

 84.52264 205.30722 lineto

 83.59904 203.83092 lineto

 82.78488 202.17781 lineto

 82.12183 200.36652 lineto

 81.6478 198.42851 lineto

 81.39223 196.4069 lineto

 81.37175 194.35321 lineto

 81.58774 192.32225 lineto

 82.02602 190.36652 lineto

 82.65912 188.53088 lineto

 83.45026 186.84894 lineto

 84.35803 185.34148 lineto

 85.34111 184.0169 lineto

 86.36162 182.87312 lineto

 87.38733 181.90022 lineto

 88.39279 181.08325 lineto

 89.35909 180.40457 lineto

 90.27328 179.84578 lineto

 91.12752 179.38913 lineto

 91.91783 179.01816 lineto

 92.64322 178.71828 lineto

 93.30487 178.47684 lineto

 93.90536 178.28308 lineto

 94.44818 178.12796 lineto

 94.93733 178.00403 lineto

 95.377 177.90518 lineto

 95.77141 177.82648 lineto

 96.12463 177.76384 lineto

 96.44063 177.71402 lineto

 96.72299 177.67447 lineto

 96.97513 177.64305 lineto

 97.20012 177.61812 lineto

 97.40079 177.59833 lineto

 97.5797 177.58261 lineto

 97.73915 177.57016 lineto

 97.88123 177.56029 lineto

 98.00781 177.55246 lineto

 98.12057 177.54626 lineto

 98.221 177.54135 lineto

 98.31042 177.53745 lineto

 98.39006 177.53435 lineto

 98.46095 177.5319 lineto

 98.52411 177.52997 lineto

 98.58032 177.52843 lineto

 98.63037 177.5272 lineto

 98.67491 177.52623 lineto

 98.71458 177.52545 lineto

 98.7499 177.52487 lineto

 98.78136 177.52438 lineto

 98.80934 177.524 lineto

 98.83426 177.5237 lineto

 98.85643 177.52345 lineto

 98.87617 177.52327 lineto

 98.89375 177.52312 lineto

 98.9094 177.523 lineto

 98.92334 177.52289 lineto

 98.93575 177.52283 lineto

 98.9468 177.52278 lineto

 98.95662 177.52272 lineto

 98.96536 177.52269 lineto

 98.97314 177.52266 lineto

 99.09949 177.52266 lineto

 99.10727 177.52269 lineto

 99.11601 177.52272 lineto

 99.12582 177.52278 lineto

 99.13689 177.52283 lineto

 99.14929 177.52289 lineto

 99.16322 177.523 lineto

 99.17886 177.52312 lineto

 99.19646 177.52327 lineto

 99.21619 177.52345 lineto

 99.23837 177.5237 lineto

 99.26329 177.524 lineto

 99.29128 177.52438 lineto

 99.32272 177.52487 lineto

 99.35805 177.52545 lineto

 99.39772 177.52623 lineto

 99.44226 177.5272 lineto

 99.49231 177.52843 lineto

 99.54852 177.52997 lineto

 99.61166 177.5319 lineto

 99.68257 177.53435 lineto

 99.7622 177.53745 lineto

 99.85164 177.54135 lineto

 99.95206 177.54626 lineto

 100.0648 177.55246 lineto

 100.19139 177.56029 lineto

 100.33348 177.57016 lineto

 100.49294 177.58261 lineto

 100.67184 177.59833 lineto

 100.87251 177.61812 lineto

 101.0975 177.64305 lineto

 101.34964 177.67447 lineto

 101.632 177.71402 lineto

 101.94798 177.76384 lineto

 102.30122 177.82648 lineto

 102.69563 177.90518 lineto

 103.13528 178.00403 lineto

 103.62445 178.12796 lineto

 104.16727 178.28308 lineto

 104.76776 178.47684 lineto

 105.42941 178.71828 lineto

 106.1548 179.01816 lineto

 106.9451 179.38913 lineto

 107.79933 179.84578 lineto

 108.71353 180.40457 lineto

 109.67984 181.08325 lineto

 110.68529 181.90022 lineto

 111.71101 182.87312 lineto

 112.7315 184.0169 lineto

 113.71458 185.34148 lineto

 114.62238 186.84894 lineto

 115.4135 188.53088 lineto

 116.0466 190.36652 lineto

 116.4849 192.32225 lineto

 116.70088 194.35321 lineto

 116.6804 196.4069 lineto

 116.42484 198.42851 lineto

 115.9508 200.36652 lineto

 115.28773 202.17781 lineto

 114.47359 203.83092 lineto

 113.54999 205.30722 lineto

 112.55792 206.60037 lineto

 111.53441 207.71391 lineto

 110.51054 208.65884 lineto

 109.51064 209.45079 lineto

 108.55254 210.10757 lineto

 107.6482 210.64757 lineto

 106.80476 211.0884 lineto

 106.02562 211.44617 lineto

 105.31131 211.73517 lineto

 104.66035 211.9677 lineto

 104.07004 212.15422 lineto

 103.53673 212.30351 lineto

 103.05638 212.42273 lineto

 102.62479 212.51778 lineto

 102.23773 212.59348 lineto

 101.89116 212.6537 lineto

 101.5812 212.70157 lineto

 101.30428 212.73961 lineto

 101.057 212.76982 lineto

 100.83638 212.79378 lineto

 100.63965 212.81279 lineto

 100.46423 212.82787 lineto

 100.30789 212.83984 lineto

 100.1686 212.84932 lineto

 100.0445 212.85684 lineto

 99.93396 212.86281 lineto

 99.83554 212.86754 lineto

 99.74786 212.87128 lineto

 99.6698 212.87425 lineto

 99.60028 212.8766 lineto

 99.53839 212.87846 lineto

 99.48329 212.87996 lineto

 99.43423 212.88112 lineto

 99.39056 212.88205 lineto

 99.35168 212.8828 lineto

 99.31706 212.88338 lineto

 99.28624 212.88383 lineto

 99.2588 212.8842 lineto

 99.23439 212.8845 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 98.83824 212.88441 moveto

 98.81383 212.88411 lineto

 98.7864 212.88371 lineto

 98.75557 212.88321 lineto

 98.72096 212.8826 lineto

 98.68208 212.88179 lineto

 98.6384 212.8808 lineto

 98.58934 212.87955 lineto

 98.53424 212.87798 lineto

 98.47235 212.87596 lineto

 98.40285 212.87343 lineto

 98.32481 212.87027 lineto

 98.23715 212.86624 lineto

 98.13873 212.86118 lineto

 98.02823 212.8548 lineto

 97.9042 212.84674 lineto

 97.76498 212.83656 lineto

 97.60875 212.82376 lineto

 97.43349 212.8076 lineto

 97.23692 212.78723 lineto

 97.0166 212.7616 lineto

 96.76974 212.72928 lineto

 96.49338 212.68858 lineto

 96.18423 212.63737 lineto

 95.83879 212.573 lineto

 95.45335 212.49211 lineto

 95.024 212.39063 lineto

 94.54683 212.26346 lineto

 94.01794 212.1044 lineto

 93.43378 211.90588 lineto

 92.79138 211.6589 lineto

 92.08885 211.35258 lineto

 91.32585 210.97438 lineto

 90.50433 210.50996 lineto

 89.62943 209.94334 lineto

 88.71037 209.25757 lineto

 87.76147 208.43562 lineto

 86.80292 207.46187 lineto

 85.86118 206.32396 lineto

 84.9687 205.01547 lineto

 84.16254 203.53827 lineto

 83.48175 201.90494 lineto

 82.96373 200.13992 lineto

 82.63962 198.27939 lineto

 82.53027 196.36864 lineto

 82.64288 194.4583 lineto

 82.97002 192.59886 lineto

 83.49074 190.83559 lineto

 84.17363 189.20439 lineto

 84.98137 187.72961 lineto

 85.87483 186.42365 lineto

 86.81705 185.28824 lineto

 87.77563 184.31682 lineto

 88.72423 183.49701 lineto

 89.64272 182.81314 lineto

 90.51689 182.24815 lineto

 91.33755 181.7851 lineto

 92.09969 181.40808 lineto

 92.80133 181.10274 lineto

 93.44284 180.85652 lineto

 94.02614 180.65866 lineto

 94.55426 180.50014 lineto

 95.0307 180.37338 lineto

 95.45935 180.27223 lineto

 95.84418 180.19162 lineto

 96.18907 180.12746 lineto

 96.4977 180.07643 lineto

 96.77359 180.03587 lineto

 97.02003 180.00365 lineto

 97.23999 179.9781 lineto

 97.43622 179.95781 lineto

 97.61118 179.9417 lineto

 97.76715 179.92894 lineto

 97.90614 179.91881 lineto

 98.02998 179.91078 lineto

 98.14027 179.90442 lineto

 98.23854 179.89937 lineto

 98.32602 179.89536 lineto

 98.40395 179.89221 lineto

 98.47333 179.88968 lineto

 98.5351 179.88768 lineto

 98.59012 179.88611 lineto

 98.6391 179.88487 lineto

 98.68268 179.88387 lineto

 98.72148 179.88307 lineto

 98.75606 179.88246 lineto

 98.7868 179.88196 lineto

 98.81421 179.88158 lineto

 98.8386 179.88126 lineto

 98.86029 179.88103 lineto

 98.87962 179.88083 lineto

 98.8968 179.88068 lineto

 98.91214 179.88055 lineto

 98.92577 179.88045 lineto

 98.9379 179.88037 lineto

 98.94872 179.88031 lineto

 98.95831 179.88026 lineto

 98.96689 179.88022 lineto

 98.9745 179.88019 lineto

 98.9813 179.88017 lineto

 99.09134 179.88017 lineto

 99.09811 179.88019 lineto

 99.10573 179.88022 lineto

 99.1143 179.88026 lineto

 99.12392 179.88031 lineto

 99.13472 179.88037 lineto

 99.14685 179.88045 lineto

 99.16049 179.88055 lineto

 99.17581 179.88068 lineto

 99.19301 179.88083 lineto

 99.21233 179.88103 lineto

 99.23404 179.88126 lineto

 99.25842 179.88158 lineto

 99.28581 179.88196 lineto

 99.31657 179.88246 lineto

 99.35114 179.88307 lineto

 99.38995 179.88387 lineto

 99.43353 179.88487 lineto

 99.48251 179.88611 lineto

 99.53754 179.88768 lineto

 99.59929 179.88968 lineto

 99.66867 179.89221 lineto

 99.7466 179.89536 lineto

 99.83409 179.89937 lineto

 99.93236 179.90442 lineto

 100.04265 179.91078 lineto

 100.16649 179.91881 lineto

 100.30547 179.92894 lineto

 100.46144 179.9417 lineto

 100.6364 179.95781 lineto

 100.83263 179.9781 lineto

 101.0526 180.00365 lineto

 101.29903 180.03587 lineto

 101.57494 180.07643 lineto

 101.88356 180.12746 lineto

 102.22845 180.19162 lineto

 102.61327 180.27223 lineto

 103.04192 180.37338 lineto

 103.51837 180.50014 lineto

 104.04648 180.65866 lineto

 104.62978 180.85652 lineto

 105.27129 181.10274 lineto

 105.97293 181.40808 lineto

 106.73508 181.7851 lineto

 107.55574 182.24815 lineto

 108.42992 182.81314 lineto

 109.3484 183.49701 lineto

 110.29698 184.31682 lineto

 111.25558 185.28824 lineto

 112.1978 186.42365 lineto

 113.09126 187.72961 lineto

 113.89899 189.20439 lineto

 114.5819 190.83559 lineto

 115.10262 192.59886 lineto

 115.42973 194.4583 lineto

 115.54236 196.36864 lineto

 115.43301 198.27939 lineto

 115.1089 200.13992 lineto

 114.59088 201.90494 lineto

 113.9101 203.53827 lineto

 113.10393 205.01547 lineto

 112.21146 206.32396 lineto

 111.2697 207.46187 lineto

 110.31116 208.43562 lineto

 109.36224 209.25757 lineto

 108.44319 209.94334 lineto

 107.5683 210.50996 lineto

 106.74678 210.97438 lineto

 105.98378 211.35258 lineto

 105.28125 211.6589 lineto

 104.63884 211.90588 lineto

 104.05467 212.1044 lineto

 103.5258 212.26346 lineto

 103.04863 212.39063 lineto

 102.61928 212.49211 lineto

 102.23383 212.573 lineto

 101.8884 212.63737 lineto

 101.57925 212.68858 lineto

 101.30287 212.72928 lineto

 101.05603 212.7616 lineto

 100.83571 212.78723 lineto

 100.63914 212.8076 lineto

 100.46388 212.82376 lineto

 100.30765 212.83656 lineto

 100.16843 212.84674 lineto

 100.04439 212.8548 lineto

 99.9339 212.86118 lineto

 99.83548 212.86624 lineto

 99.74782 212.87027 lineto

 99.66977 212.87343 lineto

 99.60027 212.87596 lineto

 99.53838 212.87798 lineto

 99.48329 212.87955 lineto

 99.43423 212.8808 lineto

 99.39055 212.88179 lineto

 99.35167 212.8826 lineto

 99.31706 212.88321 lineto

 99.28622 212.88371 lineto

 99.2588 212.88411 lineto

 99.23439 212.88441 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 60.97484 205.19872 moveto

 60.97849 205.19008 lineto

 60.98257 205.18036 lineto

 60.9872 205.16945 lineto

 60.9924 205.1572 lineto

 60.99821 205.14345 lineto

 61.00479 205.128 lineto

 61.01218 205.11067 lineto

 61.02051 205.09122 lineto

 61.02988 205.0694 lineto

 61.04042 205.04488 lineto

 61.0523 205.01735 lineto

 61.06572 204.98648 lineto

 61.08083 204.95184 lineto

 61.09787 204.91298 lineto

 61.11711 204.86938 lineto

 61.13882 204.82051 lineto

 61.16338 204.76569 lineto

 61.19113 204.70425 lineto

 61.22252 204.6354 lineto

 61.25809 204.55827 lineto

 61.29837 204.4719 lineto

 61.34407 204.37523 lineto

 61.39597 204.26706 lineto

 61.45494 204.14612 lineto

 61.52208 204.01096 lineto

 61.59854 203.86003 lineto

 61.6858 203.69165 lineto

 61.78549 203.50397 lineto

 61.89954 203.29504 lineto

 62.03018 203.06276 lineto

 62.18007 202.80493 lineto

 62.3523 202.51929 lineto

 62.55046 202.2035 lineto

 62.77873 201.85535 lineto

 63.04202 201.47263 lineto

 63.34592 201.0535 lineto

 63.69695 200.59651 lineto

 64.1025 200.10085 lineto

 64.57086 199.56665 lineto

 65.11133 198.9953 lineto

 65.73392 198.3899 lineto

 66.44936 197.75563 lineto

 67.26851 197.10036 lineto

 68.2019 196.43501 lineto

 69.25887 195.77403 lineto

 70.4465 195.13542 lineto

 71.76845 194.54076 lineto

 73.22339 194.01451 lineto

 74.80396 193.58281 lineto

 76.4955 193.27179 lineto

 78.276 193.10522 lineto

 80.11638 193.10216 lineto

 81.9822 193.2745 lineto

 83.8359 193.62537 lineto

 85.63995 194.14827 lineto

 87.35985 194.82771 lineto

 88.96683 195.64076 lineto

 90.43965 196.55943 lineto

 91.7653 197.5534 lineto

 92.93881 198.59264 lineto

 93.96204 199.6494 lineto

 94.84227 200.6997 lineto

 95.5905 201.72403 lineto

 96.22 202.70749 lineto

 96.74486 203.6395 lineto

 97.17908 204.51328 lineto

 97.53601 205.32515 lineto

 97.82773 206.07399 lineto

 98.06506 206.76045 lineto

 98.25737 207.38664 lineto

 98.41266 207.95544 lineto

 98.53773 208.47035 lineto

 98.63821 208.9352 lineto

 98.71877 209.35384 lineto

 98.78326 209.73021 lineto

 98.83481 210.06796 lineto

 98.87595 210.37074 lineto

 98.90878 210.64183 lineto

 98.9349 210.88434 lineto

 98.95573 211.10112 lineto

 98.9723 211.29478 lineto

 98.98547 211.46773 lineto

 98.99594 211.62204 lineto

 99.00427 211.75975 lineto

 99.0109 211.88255 lineto

 99.01613 211.99205 lineto

 99.02031 212.08968 lineto

 99.0236 212.17668 lineto

 99.02625 212.25423 lineto

 99.02834 212.32332 lineto

 99.02998 212.38487 lineto

 99.0313 212.4397 lineto

 99.03233 212.48856 lineto

 99.03316 212.53206 lineto

 99.0338 212.57079 lineto

 99.03433 212.6053 lineto

 99.03474 212.63603 lineto

 99.03506 212.6634 lineto

 99.03534 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 57.13115 203.48209 moveto

 57.13606 203.47171 lineto

 57.14159 203.46007 lineto

 57.1478 203.44699 lineto

 57.15479 203.43228 lineto

 57.16264 203.4158 lineto

 57.17148 203.39728 lineto

 57.18143 203.37648 lineto

 57.19263 203.35316 lineto

 57.20523 203.32697 lineto

 57.21945 203.29759 lineto

 57.23544 203.26462 lineto

 57.25346 203.22763 lineto

 57.27379 203.18611 lineto

 57.29674 203.13957 lineto

 57.32262 203.0874 lineto

 57.3518 203.02888 lineto

 57.3848 202.96333 lineto

 57.42209 202.8899 lineto

 57.46426 202.80763 lineto

 57.51201 202.71552 lineto

 57.56607 202.61246 lineto

 57.62738 202.49721 lineto

 57.69695 202.36836 lineto

 57.77597 202.22446 lineto

 57.86583 202.06383 lineto

 57.96812 201.88472 lineto

 58.08475 201.68518 lineto

 58.2178 201.46323 lineto

 58.36986 201.2166 lineto

 58.54378 200.9431 lineto

 58.74303 200.64034 lineto

 58.97153 200.30598 lineto

 59.23384 199.9377 lineto

 59.53531 199.53339 lineto

 59.88199 199.09123 lineto

 60.28085 198.60979 lineto

 60.73982 198.08847 lineto

 61.26773 197.52763 lineto

 61.87439 196.92896 lineto

 62.57037 196.29597 lineto

 63.36684 195.63443 lineto

 64.27509 194.95284 lineto

 65.30595 194.2629 lineto

 66.469 193.57991 lineto

 67.77136 192.92297 lineto

 69.2165 192.31467 lineto

 70.80276 191.7806 lineto

 72.52213 191.34808 lineto

 74.3591 191.04434 lineto

 76.29051 190.89429 lineto

 78.28587 190.91786 lineto

 80.30898 191.12778 lineto

 82.32031 191.52754 lineto

 84.28015 192.1108 lineto

 86.15173 192.86168 lineto

 87.90407 193.75641 lineto

 89.51389 194.76564 lineto

 90.96658 195.85733 lineto

 92.25597 196.9994 lineto

 93.38324 198.16205 lineto

 94.35555 199.31923 lineto

 95.18419 200.44952 lineto

 95.88298 201.53647 lineto

 96.46693 202.56812 lineto

 96.95108 203.53674 lineto

 97.34978 204.43802 lineto

 97.67624 205.27034 lineto

 97.94225 206.03427 lineto

 98.15808 206.7318 lineto

 98.33264 207.36601 lineto

 98.47336 207.94064 lineto

 98.58652 208.45976 lineto

 98.67734 208.92763 lineto

 98.75009 209.34848 lineto

 98.80829 209.72636 lineto

 98.85478 210.06526 lineto

 98.89188 210.3688 lineto

 98.92145 210.64046 lineto

 98.945 210.88336 lineto

 98.96376 211.10045 lineto

 98.97868 211.29431 lineto

 98.99055 211.46738 lineto

 98.99998 211.62181 lineto

 99.00748 211.75957 lineto

 99.01343 211.88243 lineto

 99.01816 211.99196 lineto

 99.02191 212.08961 lineto

 99.02489 212.17664 lineto

 99.02725 212.2542 lineto

 99.02911 212.32329 lineto

 99.03062 212.38486 lineto

 99.03178 212.4397 lineto

 99.03273 212.48856 lineto

 99.03348 212.53204 lineto

 99.03406 212.57079 lineto

 99.03453 212.6053 lineto

 99.0349 212.63603 lineto

 99.0352 212.6634 lineto

 99.03543 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 52.48602 201.134 moveto

 52.49283 201.12137 lineto

 52.5005 201.1072 lineto

 52.50912 201.09128 lineto

 52.51881 201.07341 lineto

 52.52972 201.05334 lineto

 52.54199 201.03084 lineto

 52.55579 201.00558 lineto

 52.57133 200.97722 lineto

 52.58882 200.9454 lineto

 52.60854 200.90971 lineto

 52.63072 200.86966 lineto

 52.6557 200.82475 lineto

 52.6839 200.7744 lineto

 52.71567 200.71794 lineto

 52.7515 200.6547 lineto

 52.79195 200.5838 lineto

 52.83762 200.50443 lineto

 52.8892 200.41553 lineto

 52.94754 200.31607 lineto

 53.01353 200.2048 lineto

 53.08824 200.0804 lineto

 53.17287 199.94145 lineto

 53.26883 199.78633 lineto

 53.37776 199.61331 lineto

 53.50148 199.42052 lineto

 53.6422 199.20596 lineto

 53.80235 198.96748 lineto

 53.98485 198.70284 lineto

 54.19302 198.40967 lineto

 54.43073 198.08557 lineto

 54.7024 197.72823 lineto

 55.01317 197.33533 lineto

 55.36893 196.9048 lineto

 55.7764 196.43495 lineto

 56.24323 195.9247 lineto

 56.77798 195.37372 lineto

 57.39023 194.78282 lineto

 58.09041 194.15437 lineto

 58.88976 193.49263 lineto

 59.79988 192.80432 lineto

 60.83247 192.0991 lineto

 61.9985 191.39001 lineto

 63.30742 190.69373 lineto

 64.76585 190.0309 lineto

 66.37642 189.42564 lineto

 68.13626 188.90495 lineto

 70.0357 188.4974 lineto

 72.05734 188.23116 lineto

 74.1758 188.13167 lineto

 76.35825 188.21906 lineto

 78.56613 188.50569 lineto

 80.7576 188.99442 lineto

 82.89078 189.67776 lineto

 84.927 190.53844 lineto

 86.83368 191.55096 lineto

 88.58629 192.68411 lineto

 90.16933 193.90378 lineto

 91.57617 195.17592 lineto

 92.80797 196.46866 lineto

 93.87216 197.75418 lineto

 94.78065 199.00954 lineto

 95.54813 200.21684 lineto

 96.19055 201.36322 lineto

 96.72409 202.44016 lineto

 97.16415 203.44286 lineto

 97.52501 204.36954 lineto

 97.81946 205.22064 lineto

 98.05872 205.99835 lineto

 98.25238 206.70592 lineto

 98.40872 207.34744 lineto

 98.53456 207.92735 lineto

 98.63564 208.45026 lineto

 98.71669 208.92084 lineto

 98.78156 209.34364 lineto

 98.8334 209.72293 lineto

 98.87482 210.06282 lineto

 98.90784 210.36707 lineto

 98.93416 210.63922 lineto

 98.95511 210.8825 lineto

 98.9718 211.09984 lineto

 98.98508 211.29387 lineto

 98.99562 211.46706 lineto

 99.00401 211.6216 lineto

 99.0107 211.75941 lineto

 99.01596 211.88232 lineto

 99.02017 211.99188 lineto

 99.02351 212.08955 lineto

 99.02615 212.17659 lineto

 99.02826 212.25417 lineto

 99.02992 212.32327 lineto

 99.03125 212.38484 lineto

 99.03229 212.4397 lineto

 99.03313 212.48854 lineto

 99.03378 212.53204 lineto

 99.03432 212.57079 lineto

 99.03473 212.6053 lineto

 99.03506 212.63603 lineto

 99.03532 212.6634 lineto

 99.03554 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 46.79448 197.81311 moveto

 46.80429 197.79755 lineto

 46.81532 197.78006 lineto

 46.82773 197.76044 lineto

 46.84167 197.73842 lineto

 46.85738 197.7137 lineto

 46.87502 197.68596 lineto

 46.89487 197.65485 lineto

 46.91722 197.61993 lineto

 46.94237 197.58078 lineto

 46.97069 197.53685 lineto

 47.00258 197.4876 lineto

 47.03847 197.4324 lineto

 47.07895 197.37054 lineto

 47.12457 197.30122 lineto

 47.176 197.22359 lineto

 47.23401 197.13667 lineto

 47.29948 197.03944 lineto

 47.37341 196.93066 lineto

 47.45694 196.80907 lineto

 47.55136 196.67325 lineto

 47.65814 196.5216 lineto

 47.77904 196.3525 lineto

 47.91594 196.16406 lineto

 48.07114 195.95435 lineto

 48.24721 195.72124 lineto

 48.44708 195.46251 lineto

 48.67421 195.17589 lineto

 48.93246 194.85893 lineto

 49.22635 194.50932 lineto

 49.56104 194.12471 lineto

 49.9424 193.70299 lineto

 50.37712 193.24231 lineto

 50.87277 192.74132 lineto

 51.43793 192.19939 lineto

 52.08202 191.61684 lineto

 52.81548 190.99538 lineto

 53.64955 190.33841 lineto

 54.59607 189.65158 lineto

 55.66714 188.94312 lineto

 56.87456 188.2245 lineto

 58.22908 187.51076 lineto

 59.73933 186.82072 lineto

 61.4107 186.17711 lineto

 63.24391 185.60599 lineto

 65.23358 185.13603 lineto

 67.36703 184.79689 lineto

 69.62347 184.6172 lineto

 71.97401 184.62206 lineto

 74.3824 184.83049 lineto

 76.80698 185.25304 lineto

 79.20334 185.89015 lineto

 81.52768 186.7317 lineto

 83.74007 187.75749 lineto

 85.80722 188.9393 lineto

 87.70451 190.24324 lineto

 89.41675 191.63292 lineto

 90.93782 193.07227 lineto

 92.26976 194.52768 lineto

 93.42097 195.96999 lineto

 94.40446 197.37508 lineto

 95.23605 198.72429 lineto

 95.93289 200.00417 lineto

 96.51227 201.2059 lineto

 96.99072 202.32457 lineto

 97.38353 203.35844 lineto

 97.70442 204.30818 lineto

 97.96541 205.17622 lineto

 98.17694 205.96634 lineto

 98.34784 206.6829 lineto

 98.48553 207.33095 lineto

 98.59622 207.91553 lineto

 98.68504 208.44185 lineto

 98.75623 208.91486 lineto

 98.81313 209.33936 lineto

 98.8586 209.7199 lineto

 98.89488 210.06064 lineto

 98.92383 210.36554 lineto

 98.94688 210.63814 lineto

 98.96524 210.88173 lineto

 98.97986 211.09929 lineto

 98.99146 211.29347 lineto

 99.0007 211.4668 lineto

 99.00806 211.6214 lineto

 99.01387 211.75928 lineto

 99.01851 211.88222 lineto

 99.02219 211.99182 lineto

 99.0251 212.08951 lineto

 99.02744 212.17656 lineto

 99.02927 212.25415 lineto

 99.03073 212.32326 lineto

 99.03188 212.38483 lineto

 99.03279 212.43968 lineto

 99.03354 212.48854 lineto

 99.0341 212.53204 lineto

 99.03456 212.57077 lineto

 99.03493 212.6053 lineto

 99.03522 212.63603 lineto

 99.03545 212.6634 lineto

 99.03563 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 39.73372 192.92438 moveto

 39.74847 192.90497 lineto

 39.76505 192.8832 lineto

 39.78369 192.85875 lineto

 39.80466 192.83133 lineto

 39.82822 192.80057 lineto

 39.85472 192.76607 lineto

 39.88454 192.72734 lineto

 39.91809 192.68393 lineto

 39.95583 192.63527 lineto

 39.9983 192.58072 lineto

 40.04614 192.5196 lineto

 40.09999 192.45116 lineto

 40.16061 192.37448 lineto

 40.22893 192.28868 lineto

 40.30591 192.19267 lineto

 40.39268 192.08533 lineto

 40.49054 191.96536 lineto

 40.60094 191.83139 lineto

 40.72552 191.68188 lineto

 40.86624 191.51521 lineto

 41.02518 191.32957 lineto

 41.20483 191.12305 lineto

 41.40799 190.89359 lineto

 41.63788 190.63905 lineto

 41.89813 190.35721 lineto

 42.1929 190.04572 lineto

 42.52698 189.70232 lineto

 42.90572 189.32477 lineto

 43.33527 188.911 lineto

 43.82257 188.45921 lineto

 44.37538 187.96814 lineto

 45.00244 187.4371 lineto

 45.7134 186.86638 lineto

 46.51878 186.2575 lineto

 47.43004 185.61366 lineto

 48.45915 184.94 lineto

 49.61852 184.2443 lineto

 50.92032 183.53722 lineto

 52.37593 182.83293 lineto

 53.99498 182.14929 lineto

 55.78432 181.50806 lineto

 57.74657 180.9345 lineto

 59.87878 180.457 lineto

 62.17133 180.10564 lineto

 64.60652 179.91052 lineto

 67.15842 179.89957 lineto

 69.793 180.09587 lineto

 72.46957 180.51527 lineto

 75.14282 181.16417 lineto

 77.76596 182.03838 lineto

 80.29399 183.1229 lineto

 82.68692 184.39297 lineto

 84.91241 185.81639 lineto

 86.94736 187.35599 lineto

 88.77843 188.9729 lineto

 90.40157 190.62923 lineto

 91.8208 192.29033 lineto

 93.0464 193.92627 lineto

 94.09303 195.51265 lineto

 94.97803 197.03078 lineto

 95.71986 198.4674 lineto

 96.33698 199.814 lineto

 96.84695 201.06604 lineto

 97.26598 202.22232 lineto

 97.60857 203.28406 lineto

 97.88751 204.25429 lineto

 98.11377 205.13734 lineto

 98.29672 205.93834 lineto

 98.44427 206.66283 lineto

 98.56299 207.31654 lineto

 98.65833 207.90524 lineto

 98.73474 208.4345 lineto

 98.79591 208.90962 lineto

 98.8448 209.33565 lineto

 98.88385 209.71724 lineto

 98.91501 210.05878 lineto

 98.93983 210.36421 lineto

 98.95963 210.63719 lineto

 98.97536 210.88106 lineto

 98.9879 211.0988 lineto

 98.99788 211.29314 lineto

 99.00578 211.46655 lineto

 99.01208 211.62123 lineto

 99.01707 211.75916 lineto

 99.02104 211.88214 lineto

 99.0242 211.99176 lineto

 99.0267 212.08946 lineto

 99.02869 212.17653 lineto

 99.03027 212.25412 lineto

 99.03152 212.32324 lineto

 99.03252 212.38481 lineto

 99.03331 212.43968 lineto

 99.03392 212.48853 lineto

 99.03442 212.53203 lineto

 99.03482 212.57077 lineto

 99.03513 212.6053 lineto

 99.03539 212.63603 lineto

 99.03557 212.6634 lineto

 99.03572 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 30.92424 185.37381 moveto

 30.94759 185.34966 lineto

 30.97382 185.32257 lineto

 31.00331 185.29216 lineto

 31.03647 185.25809 lineto

 31.07373 185.21985 lineto

 31.11565 185.17699 lineto

 31.16275 185.12894 lineto

 31.21574 185.07512 lineto

 31.27536 185.01483 lineto

 31.34239 184.94733 lineto

 31.41782 184.87175 lineto

 31.50267 184.78722 lineto

 31.59818 184.69269 lineto

 31.70567 184.58704 lineto

 31.8267 184.46904 lineto

 31.96301 184.33737 lineto

 32.11655 184.19055 lineto

 32.28949 184.02702 lineto

 32.48442 183.84506 lineto

 32.70416 183.64285 lineto

 32.9519 183.41849 lineto

 33.23137 183.16994 lineto

 33.54663 182.89513 lineto

 33.90234 182.59198 lineto

 34.30383 182.25839 lineto

 34.757 181.89243 lineto

 35.26857 181.4923 lineto

 35.84593 181.0566 lineto

 36.49748 180.58435 lineto

 37.23238 180.07536 lineto

 38.06071 179.53035 lineto

 38.99347 178.95132 lineto

 40.0423 178.34184 lineto

 41.21947 177.7076 lineto

 42.53743 177.0566 lineto

 44.00844 176.39986 lineto

 45.64384 175.75168 lineto

 47.45328 175.12985 lineto

 49.44354 174.556 lineto

 51.61752 174.05516 lineto

 53.97273 173.65546 lineto

 56.50009 173.38684 lineto

 59.18288 173.2797 lineto

 61.99611 173.3627 lineto

 64.90663 173.66045 lineto

 67.87405 174.191 lineto

 70.85262 174.96368 lineto

 73.79381 175.97745 lineto

 76.64961 177.22041 lineto

 79.37567 178.67032 lineto

 81.93433 180.29616 lineto

 84.29655 182.06067 lineto

 86.44327 183.9233 lineto

 88.36516 185.84305 lineto

 90.06201 187.78113 lineto

 91.54117 189.70284 lineto

 92.81567 191.57884 lineto

 93.9024 193.3857 lineto

 94.82047 195.1059 lineto

 95.58966 196.72733 lineto

 96.22954 198.24268 lineto

 96.7584 199.64864 lineto

 97.19316 200.94505 lineto

 97.54886 202.13422 lineto

 97.83862 203.22018 lineto

 98.07387 204.20815 lineto

 98.26422 205.10413 lineto

 98.41788 205.91449 lineto

 98.54158 206.64574 lineto

 98.64102 207.30432 lineto

 98.72076 207.89653 lineto

 98.78465 208.42828 lineto

 98.83574 208.9052 lineto

 98.87657 209.33249 lineto

 98.90916 209.71501 lineto

 98.93517 210.05719 lineto

 98.95589 210.36308 lineto

 98.9724 210.6364 lineto

 98.98552 210.8805 lineto

 98.99596 211.0984 lineto

 99.00426 211.29286 lineto

 99.01086 211.46635 lineto

 99.01611 211.62108 lineto

 99.02028 211.75906 lineto

 99.02357 211.88206 lineto

 99.02621 211.9917 lineto

 99.0283 212.08943 lineto

 99.02997 212.17651 lineto

 99.03128 212.2541 lineto

 99.03232 212.32323 lineto

 99.03314 212.38481 lineto

 99.0338 212.43967 lineto

 99.03432 212.48853 lineto

 99.03474 212.53203 lineto

 99.03506 212.57077 lineto

 99.03532 212.60529 lineto

 99.03554 212.63603 lineto

 99.03569 212.6634 lineto

 99.03581 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 20.12448 173.04308 moveto

 20.16365 173.01422 lineto

 20.20763 172.98187 lineto

 20.25708 172.94562 lineto

 20.31265 172.90498 lineto

 20.37506 172.85948 lineto

 20.44522 172.80853 lineto

 20.52406 172.75148 lineto

 20.61266 172.68764 lineto

 20.71223 172.61626 lineto

 20.82414 172.53645 lineto

 20.94994 172.44734 lineto

 21.09131 172.34787 lineto

 21.25024 172.23694 lineto

 21.42891 172.11333 lineto

 21.62975 171.97575 lineto

 21.85553 171.82278 lineto

 22.10938 171.653 lineto

 22.39476 171.46478 lineto

 22.71559 171.25653 lineto

 23.0763 171.02658 lineto

 23.48178 170.77327 lineto

 23.93755 170.495 lineto

 24.44974 170.19023 lineto

 25.0252 169.85765 lineto

 25.6715 169.49626 lineto

 26.39702 169.10551 lineto

 27.2109 168.68541 lineto

 28.12318 168.23688 lineto

 29.14459 167.76184 lineto

 30.28658 167.26364 lineto

 31.56117 166.74727 lineto

 32.98058 166.21988 lineto

 34.55704 165.69107 lineto

 36.30211 165.17317 lineto

 38.22607 164.68176 lineto

 40.33719 164.23569 lineto

 42.64047 163.85718 lineto

 45.13676 163.5715 lineto

 47.82137 163.40639 lineto

 50.68304 163.39102 lineto

 53.70303 163.55444 lineto

 56.85464 163.92372 lineto

 60.10336 164.52168 lineto

 63.40776 165.36482 lineto

 66.7212 166.46101 lineto

 69.99432 167.80829 lineto

 73.1779 169.39412 lineto

 76.22606 171.19577 lineto

 79.0989 173.18172 lineto

 81.76486 175.31389 lineto

 84.20197 177.55031 lineto

 86.39809 179.848 lineto

 88.35042 182.16548 lineto

 90.06438 184.465 lineto

 91.55167 186.71391 lineto

 92.82881 188.88547 lineto

 93.91505 190.95908 lineto

 94.83109 192.91995 lineto

 95.59776 194.75867 lineto

 96.23514 196.47025 lineto

 96.76187 198.05351 lineto

 97.19493 199.5102 lineto

 97.54936 200.84421 lineto

 97.83824 202.06107 lineto

 98.0729 203.16728 lineto

 98.26297 204.17004 lineto

 98.41647 205.07674 lineto

 98.54016 205.89484 lineto

 98.63963 206.63168 lineto

 98.71951 207.2943 lineto

 98.78351 207.88937 lineto

 98.83476 208.42317 lineto

 98.87573 208.90157 lineto

 98.90845 209.32991 lineto

 98.93454 209.71317 lineto

 98.95535 210.05588 lineto

 98.97195 210.36215 lineto

 98.98517 210.63574 lineto

 98.99565 210.88002 lineto

 99.00401 211.09807 lineto

 99.01068 211.29262 lineto

 99.01595 211.46619 lineto

 99.02016 211.62097 lineto

 99.02348 211.75897 lineto

 99.02614 211.882 lineto

 99.02824 211.99167 lineto

 99.0299 212.0894 lineto

 99.03123 212.17648 lineto

 99.03227 212.25409 lineto

 99.03313 212.32321 lineto

 99.03377 212.3848 lineto

 99.0343 212.43967 lineto

 99.03473 212.48853 lineto

 99.03505 212.53203 lineto

 99.03532 212.57077 lineto

 99.03552 212.60529 lineto

 99.03568 212.63603 lineto

 99.03581 212.6634 lineto

 99.03592 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 8.18007 151.72128 moveto

 8.24927 151.69324 lineto

 8.327 151.66187 lineto

 8.41426 151.62675 lineto

 8.51224 151.58752 lineto

 8.62227 151.54369 lineto

 8.74577 151.49474 lineto

 8.88446 151.44012 lineto

 9.0401 151.37926 lineto

 9.21483 151.31148 lineto

 9.41092 151.23607 lineto

 9.63097 151.15233 lineto

 9.87785 151.0594 lineto

 10.15482 150.95651 lineto

 10.46545 150.84279 lineto

 10.81377 150.71736 lineto

 11.20424 150.57938 lineto

 11.64182 150.42801 lineto

 12.13197 150.2625 lineto

 12.68085 150.08223 lineto

 13.29507 149.88676 lineto

 13.98209 149.67593 lineto

 14.74986 149.44995 lineto

 15.6072 149.20949 lineto

 16.56357 148.95586 lineto

 17.62909 148.69124 lineto

 18.81453 148.41881 lineto

 20.13113 148.143 lineto

 21.5905 147.86977 lineto

 23.20425 147.60695 lineto

 24.98375 147.3644 lineto

 26.93965 147.15436 lineto

 29.0812 146.99165 lineto

 31.41566 146.89386 lineto

 33.94734 146.8812 lineto

 36.67677 146.97632 lineto

 39.59956 147.20395 lineto

 42.70561 147.58989 lineto

 45.97826 148.16 lineto

 49.39366 148.93867 lineto

 52.92093 149.94711 lineto

 56.52238 151.20137 lineto

 60.15489 152.71068 lineto

 63.77144 154.47586 lineto

 67.32358 156.48836 lineto

 70.76399 158.73007 lineto

 74.04907 161.17393 lineto

 77.14142 163.78534 lineto

 80.01157 166.52411 lineto

 82.63907 169.34706 lineto

 85.01277 172.21046 lineto

 87.13034 175.07234 lineto

 88.99715 177.89442 lineto

 90.62482 180.64348 lineto

 92.02965 183.29208 lineto

 93.2309 185.81897 lineto

 94.24942 188.20879 lineto

 95.10646 190.45155 lineto

 95.8227 192.54205 lineto

 96.41763 194.47905 lineto

 96.9091 196.26457 lineto

 97.31316 197.90297 lineto

 97.64394 199.4005 lineto

 97.9137 200.7646 lineto

 98.13298 202.00348 lineto

 98.31068 203.12576 lineto

 98.45432 204.14015 lineto

 98.57016 205.0553 lineto

 98.66339 205.87947 lineto

 98.7383 206.6207 lineto

 98.79839 207.28647 lineto

 98.84651 207.88377 lineto

 98.88501 208.4192 lineto

 98.91579 208.89874 lineto

 98.94035 209.32791 lineto

 98.95995 209.71175 lineto

 98.97557 210.05489 lineto

 98.98802 210.36143 lineto

 98.99794 210.63522 lineto

 99.00581 210.87968 lineto

 99.01208 211.09781 lineto

 99.01707 211.29243 lineto

 99.02104 211.46606 lineto

 99.02419 211.62088 lineto

 99.0267 211.75891 lineto

 99.02867 211.88196 lineto

 99.03026 211.99162 lineto

 99.03151 212.08939 lineto

 99.0325 212.17647 lineto

 99.0333 212.25407 lineto

 99.0339 212.32321 lineto

 99.03441 212.3848 lineto

 99.0348 212.43967 lineto

 99.03513 212.48853 lineto

 99.03537 212.53203 lineto

 99.03557 212.57077 lineto

 99.03572 212.60529 lineto

 99.03584 212.63602 lineto

 99.03593 212.6634 lineto

 99.03601 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 0.98538 113.87393 moveto

 1.10625 113.87521 lineto

 1.24179 113.87682 lineto

 1.39384 113.87885 lineto

 1.56436 113.8814 lineto

 1.75557 113.8846 lineto

 1.96988 113.88864 lineto

 2.21002 113.89369 lineto

 2.4791 113.90007 lineto

 2.78043 113.90807 lineto

 3.11777 113.91812 lineto

 3.49525 113.93073 lineto

 3.91747 113.94653 lineto

 4.38942 113.96634 lineto

 4.91669 113.99113 lineto

 5.50531 114.02214 lineto

 6.1619 114.06088 lineto

 6.89365 114.1092 lineto

 7.70833 114.16942 lineto

 8.61426 114.24431 lineto

 9.62035 114.33731 lineto

 10.73602 114.45258 lineto

 11.97105 114.59506 lineto

 13.33563 114.77081 lineto

 14.84004 114.98698 lineto

 16.49448 115.252 lineto

 18.30878 115.57579 lineto

 20.2921 115.96979 lineto

 22.45236 116.44716 lineto

 24.7958 117.0227 lineto

 27.32637 117.71288 lineto

 30.04501 118.53554 lineto

 32.94905 119.50961 lineto

 36.03133 120.6547 lineto

 39.27977 121.99008 lineto

 42.67682 123.53409 lineto

 46.19922 125.30272 lineto

 49.81804 127.30855 lineto

 53.49919 129.55939 lineto

 57.2043 132.05707 lineto

 60.89209 134.79648 lineto

 64.51993 137.76491 lineto

 68.04587 140.94197 lineto

 71.43063 144.30005 lineto

 74.63939 147.80519 lineto

 77.64346 151.41873 lineto

 80.4212 155.09903 lineto

 82.95872 158.80348 lineto

 85.24966 162.49043 lineto

 87.2948 166.12094 lineto

 89.10112 169.66017 lineto

 90.68045 173.07837 lineto

 92.04839 176.35132 lineto

 93.22293 179.46059 lineto

 94.22333 182.3932 lineto

 95.06914 185.14133 lineto

 95.77946 187.70158 lineto

 96.37236 190.07439 lineto

 96.86455 192.26321 lineto

 97.27109 194.274 lineto

 97.60538 196.11447 lineto

 97.87917 197.79358 lineto

 98.1026 199.32103 lineto

 98.28436 200.70708 lineto

 98.4318 201.96196 lineto

 98.55107 203.09587 lineto

 98.64737 204.11868 lineto

 98.72495 205.0399 lineto

 98.7873 205.86845 lineto

 98.83739 206.61282 lineto

 98.87753 207.28084 lineto

 98.90967 207.87978 lineto

 98.93538 208.41635 lineto

 98.95592 208.89671 lineto

 98.97232 209.32646 lineto

 98.9854 209.71072 lineto

 98.9958 210.05415 lineto

 99.0041 210.36093 lineto

 99.01074 210.63487 lineto

 99.01598 210.87943 lineto

 99.02016 211.09763 lineto

 99.0235 211.29233 lineto

 99.02614 211.46597 lineto

 99.02823 211.62082 lineto

 99.0299 211.75887 lineto

 99.03123 211.88193 lineto

 99.03227 211.99161 lineto

 99.03311 212.08937 lineto

 99.03377 212.17645 lineto

 99.0343 212.25407 lineto

 99.03471 212.32321 lineto

 99.03505 212.3848 lineto

 99.03532 212.43967 lineto

 99.03552 212.48851 lineto

 99.03568 212.53203 lineto

 99.03581 212.57077 lineto

 99.03592 212.60529 lineto

 99.036 212.63602 lineto

 99.03606 212.6634 lineto

 99.03612 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 21.06108 55.40709 moveto

 21.21382 55.52362 lineto

 21.3849 55.65445 lineto

 21.57646 55.8013 lineto

 21.79086 55.9661 lineto

 22.03073 56.151 lineto

 22.29897 56.35847 lineto

 22.59874 56.59123 lineto

 22.93356 56.85228 lineto

 23.30725 57.14499 lineto

 23.72401 57.47318 lineto

 24.18842 57.84096 lineto

 24.70538 58.25307 lineto

 25.2802 58.71465 lineto

 25.9186 59.2314 lineto

 26.62662 59.80965 lineto

 27.41064 60.45642 lineto

 28.27739 61.17929 lineto

 29.2337 61.98668 lineto

 30.2866 62.88773 lineto

 31.44315 63.89226 lineto

 32.71011 65.01096 lineto

 34.09407 66.25516 lineto

 35.60088 67.63693 lineto

 37.2356 69.1689 lineto

 39.00204 70.86403 lineto

 40.90259 72.73557 lineto

 42.93758 74.7966 lineto

 45.10513 77.05981 lineto

 47.40073 79.53696 lineto

 49.81683 82.23837 lineto

 52.34267 85.17241 lineto

 54.9641 88.34465 lineto

 57.66364 91.75742 lineto

 60.42055 95.40894 lineto

 63.21135 99.29286 lineto

 66.01038 103.39781 lineto

 68.79042 107.70699 lineto

 71.5239 112.1983 lineto

 74.18376 116.8445 lineto

 76.74454 121.61385 lineto

 79.18343 126.47084 lineto

 81.48108 131.3774 lineto

 83.62225 136.294 lineto

 85.5963 141.18124 lineto

 87.39706 146.00081 lineto

 89.02298 150.71703 lineto

 90.47641 155.29765 lineto

 91.7633 159.71472 lineto

 92.89241 163.94507 lineto

 93.87454 167.97049 lineto

 94.72186 171.77774 lineto

 95.44739 175.35835 lineto

 96.0642 178.70827 lineto

 96.58514 181.8272 lineto

 97.02249 184.71822 lineto

 97.38754 187.38715 lineto

 97.69077 189.84195 lineto

 97.94142 192.09222 lineto

 98.14777 194.14877 lineto

 98.31696 196.02312 lineto

 98.4552 197.72716 lineto

 98.56781 199.2729 lineto

 98.65927 200.67229 lineto

 98.73335 201.9369 lineto

 98.79324 203.07784 lineto

 98.84155 204.10577 lineto

 98.88045 205.03064 lineto

 98.91168 205.86183 lineto

 98.93678 206.60811 lineto

 98.95688 207.27747 lineto

 98.97296 207.87738 lineto

 98.98582 208.41464 lineto

 98.9961 208.8955 lineto

 99.0043 209.3256 lineto

 99.01086 209.71011 lineto

 99.01605 210.05371 lineto

 99.02022 210.36063 lineto

 99.02351 210.63466 lineto

 99.02614 210.87926 lineto

 99.02824 211.09752 lineto

 99.0299 211.29225 lineto

 99.03123 211.46591 lineto

 99.03227 211.62077 lineto

 99.03311 211.75883 lineto

 99.03377 211.88191 lineto

 99.03429 211.9916 lineto

 99.03471 212.08936 lineto

 99.03505 212.17645 lineto

 99.03531 212.25406 lineto

 99.03552 212.3232 lineto

 99.03568 212.3848 lineto

 99.03581 212.43965 lineto

 99.03592 212.48851 lineto

 99.036 212.53203 lineto

 99.03606 212.57077 lineto

 99.03612 212.60529 lineto

 99.03616 212.63602 lineto

 99.0362 212.6634 lineto

 99.03621 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 99.03632 16.81319 moveto

 99.03632 17.0523 lineto

 99.03632 17.32024 lineto

 99.03632 17.6203 lineto

 99.03632 17.9563 lineto

 99.03632 18.33235 lineto

 99.03632 18.75305 lineto

 99.03632 19.22345 lineto

 99.03632 19.74918 lineto

 99.03632 20.33635 lineto

 99.03632 20.99167 lineto

 99.03632 21.7225 lineto

 99.03632 22.53688 lineto

 99.03632 23.44345 lineto

 99.03632 24.45155 lineto

 99.03632 25.57129 lineto

 99.03632 26.81332 lineto

 99.03632 28.18906 lineto

 99.03632 29.71037 lineto

 99.03632 31.38971 lineto

 99.03632 33.23978 lineto

 99.03632 35.27354 lineto

 99.03632 37.50388 lineto

 99.03632 39.94342 lineto

 99.03632 42.60411 lineto

 99.03632 45.49695 lineto

 99.03632 48.63152 lineto

 99.03632 52.01555 lineto

 99.03632 55.65436 lineto

 99.03632 59.55046 lineto

 99.03632 63.70305 lineto

 99.03632 68.10739 lineto

 99.03632 72.75473 lineto

 99.03632 77.63176 lineto

 99.03632 82.72061 lineto

 99.03632 87.9989 lineto

 99.03632 93.43982 lineto

 99.03632 99.01274 lineto

 99.03632 104.68364 lineto

 99.03632 110.41597 lineto

 99.03632 116.1716 lineto

 99.03632 121.91167 lineto

 99.03632 127.59785 lineto

 99.03632 133.19318 lineto

 99.03632 138.66307 lineto

 99.03632 143.97617 lineto

 99.03632 149.10484 lineto

 99.03632 154.02582 lineto

 99.03632 158.72029 lineto

 99.03632 163.17409 lineto

 99.03632 167.3775 lineto

 99.03632 171.3251 lineto

 99.03632 175.01527 lineto

 99.03632 178.4499 lineto

 99.03632 181.6338 lineto

 99.03632 184.5743 lineto

 99.03632 187.28058 lineto

 99.03632 189.7634 lineto

 99.03632 192.0346 lineto

 99.03632 194.10664 lineto

 99.03632 195.99243 lineto

 99.03632 197.70488 lineto

 99.03632 199.25679 lineto

 99.03632 200.66066 lineto

 99.03632 201.92853 lineto

 99.03632 203.07184 lineto

 99.03632 204.10146 lineto

 99.03632 205.02754 lineto

 99.03632 205.85963 lineto

 99.03632 206.60652 lineto

 99.03632 207.27635 lineto

 99.03632 207.87657 lineto

 99.03632 208.41408 lineto

 99.03632 208.8951 lineto

 99.03632 209.32532 lineto

 99.03632 209.70992 lineto

 99.03632 210.05356 lineto

 99.03632 210.36053 lineto

 99.03632 210.63458 lineto

 99.03632 210.87921 lineto

 99.03632 211.09747 lineto

 99.03632 211.29222 lineto

 99.03632 211.4659 lineto

 99.03632 211.62076 lineto

 99.03632 211.75883 lineto

 99.03632 211.88191 lineto

 99.03632 211.9916 lineto

 99.03632 212.08936 lineto

 99.03632 212.17645 lineto

 99.03632 212.25406 lineto

 99.03632 212.3232 lineto

 99.03632 212.3848 lineto

 99.03632 212.43965 lineto

 99.03632 212.48851 lineto

 99.03632 212.53203 lineto

 99.03632 212.57077 lineto

 99.03632 212.60529 lineto

 99.03632 212.63602 lineto

 99.03632 212.6634 lineto

 99.03632 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 177.01154 55.40709 moveto

 176.85881 55.52362 lineto

 176.68773 55.65445 lineto

 176.49615 55.8013 lineto

 176.28177 55.9661 lineto

 176.0419 56.151 lineto

 175.77365 56.35847 lineto

 175.47389 56.59123 lineto

 175.13907 56.85228 lineto

 174.76537 57.14499 lineto

 174.3486 57.47318 lineto

 173.8842 57.84096 lineto

 173.36725 58.25307 lineto

 172.79243 58.71465 lineto

 172.15404 59.2314 lineto

 171.446 59.80965 lineto

 170.66197 60.45642 lineto

 169.79524 61.17929 lineto

 168.83893 61.98668 lineto

 167.78603 62.88773 lineto

 166.62949 63.89226 lineto

 165.3625 65.01096 lineto

 163.97855 66.25516 lineto

 162.47174 67.63693 lineto

 160.83704 69.1689 lineto

 159.07057 70.86403 lineto

 157.17004 72.73557 lineto

 155.13506 74.7966 lineto

 152.9675 77.05981 lineto

 150.6719 79.53696 lineto

 148.2558 82.23837 lineto

 145.72997 85.17241 lineto

 143.10854 88.34465 lineto

 140.409 91.75742 lineto

 137.65208 95.40894 lineto

 134.86127 99.29286 lineto

 132.06226 103.39781 lineto

 129.28221 107.70699 lineto

 126.54872 112.1983 lineto

 123.88887 116.8445 lineto

 121.3281 121.61385 lineto

 118.8892 126.47084 lineto

 116.59155 131.3774 lineto

 114.45036 136.294 lineto

 112.47633 141.18124 lineto

 110.67557 146.00081 lineto

 109.04965 150.71703 lineto

 107.59622 155.29765 lineto

 106.30933 159.71472 lineto

 105.18022 163.94507 lineto

 104.19809 167.97049 lineto

 103.35077 171.77774 lineto

 102.62523 175.35835 lineto

 102.00842 178.70827 lineto

 101.48749 181.8272 lineto

 101.05014 184.71822 lineto

 100.68509 187.38715 lineto

 100.38187 189.84195 lineto

 100.1312 192.09222 lineto

 99.92487 194.14877 lineto

 99.75568 196.02312 lineto

 99.61743 197.72716 lineto

 99.50482 199.2729 lineto

 99.41336 200.67229 lineto

 99.33928 201.9369 lineto

 99.27939 203.07784 lineto

 99.23108 204.10577 lineto

 99.19218 205.03064 lineto

 99.16095 205.86183 lineto

 99.13585 206.60811 lineto

 99.11575 207.27747 lineto

 99.09967 207.87738 lineto

 99.0868 208.41464 lineto

 99.07652 208.8955 lineto

 99.06831 209.3256 lineto

 99.06177 209.71011 lineto

 99.05656 210.05371 lineto

 99.0524 210.36063 lineto

 99.0491 210.63466 lineto

 99.0465 210.87926 lineto

 99.04437 211.09752 lineto

 99.04272 211.29225 lineto

 99.0414 211.46591 lineto

 99.04034 211.62077 lineto

 99.03952 211.75883 lineto

 99.03886 211.88191 lineto

 99.03835 211.9916 lineto

 99.03792 212.08936 lineto

 99.03758 212.17645 lineto

 99.03732 212.25406 lineto

 99.03711 212.3232 lineto

 99.03694 212.3848 lineto

 99.0368 212.43965 lineto

 99.0367 212.48851 lineto

 99.03662 212.53203 lineto

 99.03656 212.57077 lineto

 99.0365 212.60529 lineto

 99.03645 212.63602 lineto

 99.03642 212.6634 lineto

 99.0364 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 197.08723 113.87393 moveto

 196.96638 113.87521 lineto

 196.83083 113.87682 lineto

 196.67879 113.87885 lineto

 196.50826 113.8814 lineto

 196.31706 113.8846 lineto

 196.10275 113.88864 lineto

 195.8626 113.89369 lineto

 195.59352 113.90007 lineto

 195.2922 113.90807 lineto

 194.95486 113.91812 lineto

 194.57736 113.93073 lineto

 194.15517 113.94653 lineto

 193.6832 113.96634 lineto

 193.15593 113.99113 lineto

 192.5673 114.02214 lineto

 191.91072 114.06088 lineto

 191.17899 114.1092 lineto

 190.3643 114.16942 lineto

 189.45837 114.24431 lineto

 188.45227 114.33731 lineto

 187.33661 114.45258 lineto

 186.10158 114.59506 lineto

 184.73698 114.77081 lineto

 183.23259 114.98698 lineto

 181.57816 115.252 lineto

 179.76384 115.57579 lineto

 177.78053 115.96979 lineto

 175.62027 116.44716 lineto

 173.27682 117.0227 lineto

 170.74626 117.71288 lineto

 168.02762 118.53554 lineto

 165.12358 119.50961 lineto

 162.0413 120.6547 lineto

 158.79285 121.99008 lineto

 155.3958 123.53409 lineto

 151.87341 125.30272 lineto

 148.25458 127.30855 lineto

 144.57344 129.55939 lineto

 140.86832 132.05707 lineto

 137.18053 134.79648 lineto

 133.5527 137.76491 lineto

 130.02675 140.94197 lineto

 126.64198 144.30005 lineto

 123.43323 147.80519 lineto

 120.42917 151.41873 lineto

 117.65141 155.09903 lineto

 115.1139 158.80348 lineto

 112.82297 162.49043 lineto

 110.77783 166.12094 lineto

 108.97151 169.66017 lineto

 107.39218 173.07837 lineto

 106.02425 176.35132 lineto

 104.8497 179.46059 lineto

 103.8493 182.3932 lineto

 103.0035 185.14133 lineto

 102.29317 187.70158 lineto

 101.70027 190.07439 lineto

 101.20807 192.26321 lineto

 100.80154 194.274 lineto

 100.46725 196.11447 lineto

 100.19347 197.79358 lineto

 99.97003 199.32103 lineto

 99.78825 200.70708 lineto

 99.64082 201.96196 lineto

 99.52155 203.09587 lineto

 99.42526 204.11868 lineto

 99.34769 205.0399 lineto

 99.28532 205.86845 lineto

 99.23524 206.61282 lineto

 99.19508 207.28084 lineto

 99.16295 207.87978 lineto

 99.13725 208.41635 lineto

 99.11671 208.89671 lineto

 99.10031 209.32646 lineto

 99.08723 209.71072 lineto

 99.07681 210.05415 lineto

 99.06851 210.36093 lineto

 99.06189 210.63487 lineto

 99.05664 210.87943 lineto

 99.05246 211.09763 lineto

 99.04912 211.29233 lineto

 99.0465 211.46597 lineto

 99.04439 211.62082 lineto

 99.04272 211.75887 lineto

 99.0414 211.88193 lineto

 99.04034 211.99161 lineto

 99.03952 212.08937 lineto

 99.03886 212.17645 lineto

 99.03833 212.25407 lineto

 99.03792 212.32321 lineto

 99.03758 212.3848 lineto

 99.03731 212.43967 lineto

 99.03711 212.48851 lineto

 99.03694 212.53203 lineto

 99.0368 212.57077 lineto

 99.0367 212.60529 lineto

 99.03662 212.63602 lineto

 99.03656 212.6634 lineto

 99.0365 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 189.89256 151.72128 moveto

 189.82336 151.69324 lineto

 189.74564 151.66187 lineto

 189.65837 151.62675 lineto

 189.5604 151.58752 lineto

 189.45036 151.54369 lineto

 189.32686 151.49474 lineto

 189.18817 151.44012 lineto

 189.03252 151.37926 lineto

 188.8578 151.31148 lineto

 188.66171 151.23607 lineto

 188.44167 151.15233 lineto

 188.19476 151.0594 lineto

 187.9178 150.95651 lineto

 187.60716 150.84279 lineto

 187.25887 150.71736 lineto

 186.86838 150.57938 lineto

 186.4308 150.42801 lineto

 185.94064 150.2625 lineto

 185.39178 150.08223 lineto

 184.77754 149.88676 lineto

 184.09055 149.67593 lineto

 183.32277 149.44995 lineto

 182.46544 149.20949 lineto

 181.50906 148.95586 lineto

 180.44354 148.69124 lineto

 179.2581 148.41881 lineto

 177.9415 148.143 lineto

 176.48213 147.86977 lineto

 174.86838 147.60695 lineto

 173.08888 147.3644 lineto

 171.13298 147.15436 lineto

 168.99141 146.99165 lineto

 166.65695 146.89386 lineto

 164.12527 146.8812 lineto

 161.39586 146.97632 lineto

 158.47307 147.20395 lineto

 155.367 147.58989 lineto

 152.09438 148.16 lineto

 148.67896 148.93867 lineto

 145.1517 149.94711 lineto

 141.55023 151.20137 lineto

 137.91774 152.71068 lineto

 134.3012 154.47586 lineto

 130.74905 156.48836 lineto

 127.30864 158.73007 lineto

 124.02356 161.17393 lineto

 120.93121 163.78534 lineto

 118.06107 166.52411 lineto

 115.43355 169.34706 lineto

 113.05986 172.21046 lineto

 110.94228 175.07234 lineto

 109.07549 177.89442 lineto

 107.4478 180.64348 lineto

 106.04297 183.29208 lineto

 104.84174 185.81897 lineto

 103.82321 188.20879 lineto

 102.96617 190.45155 lineto

 102.24992 192.54205 lineto

 101.655 194.47905 lineto

 101.16351 196.26457 lineto

 100.75946 197.90297 lineto

 100.42868 199.4005 lineto

 100.15892 200.7646 lineto

 99.93965 202.00348 lineto

 99.76195 203.12576 lineto

 99.61832 204.14015 lineto

 99.50247 205.0553 lineto

 99.40924 205.87947 lineto

 99.33432 206.6207 lineto

 99.27425 207.28647 lineto

 99.22612 207.88377 lineto

 99.1876 208.4192 lineto

 99.15685 208.89874 lineto

 99.13228 209.32791 lineto

 99.11269 209.71175 lineto

 99.09705 210.05489 lineto

 99.08461 210.36143 lineto

 99.07469 210.63522 lineto

 99.06682 210.87968 lineto

 99.06053 211.09781 lineto

 99.05556 211.29243 lineto

 99.05159 211.46606 lineto

 99.04843 211.62088 lineto

 99.04593 211.75891 lineto

 99.04395 211.88196 lineto

 99.04237 211.99162 lineto

 99.04112 212.08939 lineto

 99.04012 212.17647 lineto

 99.03934 212.25407 lineto

 99.03873 212.32321 lineto

 99.03822 212.3848 lineto

 99.03783 212.43967 lineto

 99.0375 212.48853 lineto

 99.03726 212.53203 lineto

 99.03706 212.57077 lineto

 99.0369 212.60529 lineto

 99.03677 212.63602 lineto

 99.03668 212.6634 lineto

 99.0366 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 177.94815 173.04308 moveto

 177.90897 173.01422 lineto

 177.86499 172.98187 lineto

 177.81554 172.94562 lineto

 177.75998 172.90498 lineto

 177.69756 172.85948 lineto

 177.6274 172.80853 lineto

 177.54857 172.75148 lineto

 177.45996 172.68764 lineto

 177.3604 172.61626 lineto

 177.24847 172.53645 lineto

 177.1227 172.44734 lineto

 176.98132 172.34787 lineto

 176.82239 172.23694 lineto

 176.6437 172.11333 lineto

 176.44289 171.97575 lineto

 176.2171 171.82278 lineto

 175.96326 171.653 lineto

 175.67787 171.46478 lineto

 175.35703 171.25653 lineto

 174.99634 171.02658 lineto

 174.59085 170.77327 lineto

 174.13509 170.495 lineto

 173.62288 170.19023 lineto

 173.04742 169.85765 lineto

 172.40112 169.49626 lineto

 171.67561 169.10551 lineto

 170.86171 168.68541 lineto

 169.94945 168.23688 lineto

 168.92804 167.76184 lineto

 167.78606 167.26364 lineto

 166.51146 166.74727 lineto

 165.09206 166.21988 lineto

 163.5156 165.69107 lineto

 161.77052 165.17317 lineto

 159.84654 164.68176 lineto

 157.73543 164.23569 lineto

 155.43214 163.85718 lineto

 152.93587 163.5715 lineto

 150.25125 163.40639 lineto

 147.38959 163.39102 lineto

 144.3696 163.55444 lineto

 141.21799 163.92372 lineto

 137.96925 164.52168 lineto

 134.66486 165.36482 lineto

 131.35143 166.46101 lineto

 128.07831 167.80829 lineto

 124.89471 169.39412 lineto

 121.84657 171.19577 lineto

 118.97371 173.18172 lineto

 116.30775 175.31389 lineto

 113.87065 177.55031 lineto

 111.67455 179.848 lineto

 109.7222 182.16548 lineto

 108.00826 184.465 lineto

 106.52095 186.71391 lineto

 105.24382 188.88547 lineto

 104.15758 190.95908 lineto

 103.24153 192.91995 lineto

 102.47485 194.75867 lineto

 101.83748 196.47025 lineto

 101.31075 198.05351 lineto

 100.87769 199.5102 lineto

 100.52327 200.84421 lineto

 100.23439 202.06107 lineto

 99.99971 203.16728 lineto

 99.80966 204.17004 lineto

 99.65616 205.07674 lineto

 99.53247 205.89484 lineto

 99.43298 206.63168 lineto

 99.35312 207.2943 lineto

 99.28911 207.88937 lineto

 99.23787 208.42317 lineto

 99.1969 208.90157 lineto

 99.16418 209.32991 lineto

 99.13808 209.71317 lineto

 99.11728 210.05588 lineto

 99.10068 210.36215 lineto

 99.08746 210.63574 lineto

 99.07697 210.88002 lineto

 99.0686 211.09807 lineto

 99.06195 211.29262 lineto

 99.05667 211.46619 lineto

 99.05246 211.62097 lineto

 99.04913 211.75897 lineto

 99.0465 211.882 lineto

 99.04437 211.99167 lineto

 99.04272 212.0894 lineto

 99.0414 212.17648 lineto

 99.04034 212.25409 lineto

 99.0395 212.32321 lineto

 99.03886 212.3848 lineto

 99.03833 212.43967 lineto

 99.0379 212.48853 lineto

 99.03758 212.53203 lineto

 99.03731 212.57077 lineto

 99.03711 212.60529 lineto

 99.03694 212.63603 lineto

 99.0368 212.6634 lineto

 99.0367 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 167.14839 185.37381 moveto

 167.12505 185.34966 lineto

 167.09882 185.32257 lineto

 167.0693 185.29216 lineto

 167.03615 185.25809 lineto

 166.99889 185.21985 lineto

 166.95699 185.17699 lineto

 166.90987 185.12894 lineto

 166.85687 185.07512 lineto

 166.79727 185.01483 lineto

 166.73022 184.94733 lineto

 166.65482 184.87175 lineto

 166.56996 184.78722 lineto

 166.47446 184.69269 lineto

 166.36694 184.58704 lineto

 166.24593 184.46904 lineto

 166.1096 184.33737 lineto

 165.95609 184.19055 lineto

 165.78313 184.02702 lineto

 165.58821 183.84506 lineto

 165.36847 183.64285 lineto

 165.12071 183.41849 lineto

 164.84126 183.16994 lineto

 164.526 182.89513 lineto

 164.17027 182.59198 lineto

 163.7688 182.25839 lineto

 163.31563 181.89243 lineto

 162.80406 181.4923 lineto

 162.22668 181.0566 lineto

 161.57515 180.58435 lineto

 160.84026 180.07536 lineto

 160.01192 179.53035 lineto

 159.07916 178.95132 lineto

 158.03033 178.34184 lineto

 156.85315 177.7076 lineto

 155.5352 177.0566 lineto

 154.06418 176.39986 lineto

 152.42879 175.75168 lineto

 150.61935 175.12985 lineto

 148.62907 174.556 lineto

 146.45511 174.05516 lineto

 144.0999 173.65546 lineto

 141.57254 173.38684 lineto

 138.88976 173.2797 lineto

 136.07652 173.3627 lineto

 133.166 173.66045 lineto

 130.19856 174.191 lineto

 127.22002 174.96368 lineto

 124.27882 175.97745 lineto

 121.42302 177.22041 lineto

 118.69695 178.67032 lineto

 116.1383 180.29616 lineto

 113.77606 182.06067 lineto

 111.62936 183.9233 lineto

 109.70747 185.84305 lineto

 108.0106 187.78113 lineto

 106.53146 189.70284 lineto

 105.25696 191.57884 lineto

 104.17023 193.3857 lineto

 103.25217 195.1059 lineto

 102.48296 196.72733 lineto

 101.8431 198.24268 lineto

 101.31421 199.64864 lineto

 100.87947 200.94505 lineto

 100.52377 202.13422 lineto

 100.23401 203.22018 lineto

 99.99876 204.20815 lineto

 99.8084 205.10413 lineto

 99.65475 205.91449 lineto

 99.53104 206.64574 lineto

 99.43161 207.30432 lineto

 99.35187 207.89653 lineto

 99.28798 208.42828 lineto

 99.23688 208.9052 lineto

 99.19604 209.33249 lineto

 99.16345 209.71501 lineto

 99.13747 210.05719 lineto

 99.11674 210.36308 lineto

 99.10023 210.6364 lineto

 99.08711 210.8805 lineto

 99.07666 211.0984 lineto

 99.06836 211.29286 lineto

 99.06177 211.46635 lineto

 99.0565 211.62108 lineto

 99.05234 211.75906 lineto

 99.04904 211.88206 lineto

 99.04642 211.9917 lineto

 99.04431 212.08943 lineto

 99.04266 212.17651 lineto

 99.04135 212.2541 lineto

 99.0403 212.32323 lineto

 99.03949 212.38481 lineto

 99.03883 212.43967 lineto

 99.03831 212.48853 lineto

 99.03789 212.53203 lineto

 99.03757 212.57077 lineto

 99.03731 212.60529 lineto

 99.0371 212.63603 lineto

 99.03693 212.6634 lineto

 99.0368 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 158.3389 192.92438 moveto

 158.32416 192.90497 lineto

 158.30759 192.8832 lineto

 158.28894 192.85875 lineto

 158.26797 192.83133 lineto

 158.24442 192.80057 lineto

 158.21791 192.76607 lineto

 158.18808 192.72734 lineto

 158.15454 192.68393 lineto

 158.1168 192.63527 lineto

 158.07431 192.58072 lineto

 158.02649 192.5196 lineto

 157.97264 192.45116 lineto

 157.91202 192.37448 lineto

 157.8437 192.28868 lineto

 157.76672 192.19267 lineto

 157.67995 192.08533 lineto

 157.58209 191.96536 lineto

 157.4717 191.83139 lineto

 157.34709 191.68188 lineto

 157.20639 191.51521 lineto

 157.04745 191.32957 lineto

 156.8678 191.12305 lineto

 156.66463 190.89359 lineto

 156.43475 190.63905 lineto

 156.1745 190.35721 lineto

 155.87973 190.04572 lineto

 155.54565 189.70232 lineto

 155.1669 189.32477 lineto

 154.73735 188.911 lineto

 154.25006 188.45921 lineto

 153.69724 187.96814 lineto

 153.07019 187.4371 lineto

 152.35924 186.86638 lineto

 151.55383 186.2575 lineto

 150.64258 185.61366 lineto

 149.61346 184.94 lineto

 148.4541 184.2443 lineto

 147.15231 183.53722 lineto

 145.6967 182.83293 lineto

 144.07764 182.14929 lineto

 142.2883 181.50806 lineto

 140.32607 180.9345 lineto

 138.19383 180.457 lineto

 135.9013 180.10564 lineto

 133.46611 179.91052 lineto

 130.91422 179.89957 lineto

 128.27962 180.09587 lineto

 125.60306 180.51527 lineto

 122.92981 181.16417 lineto

 120.30667 182.03838 lineto

 117.77864 183.1229 lineto

 115.3857 184.39297 lineto

 113.1602 185.81639 lineto

 111.12527 187.35599 lineto

 109.2942 188.9729 lineto

 107.67107 190.62923 lineto

 106.25182 192.29033 lineto

 105.02621 193.92627 lineto

 103.9796 195.51265 lineto

 103.09459 197.03078 lineto

 102.35277 198.4674 lineto

 101.73564 199.814 lineto

 101.22568 201.06604 lineto

 100.80666 202.22232 lineto

 100.46407 203.28406 lineto

 100.18512 204.25429 lineto

 99.95885 205.13734 lineto

 99.7759 205.93834 lineto

 99.62834 206.66283 lineto

 99.50963 207.31654 lineto

 99.4143 207.90524 lineto

 99.33788 208.4345 lineto

 99.2767 208.90962 lineto

 99.22781 209.33565 lineto

 99.18878 209.71724 lineto

 99.15762 210.05878 lineto

 99.1328 210.36421 lineto

 99.113 210.63719 lineto

 99.09726 210.88106 lineto

 99.08472 211.0988 lineto

 99.07475 211.29314 lineto

 99.06685 211.46655 lineto

 99.06053 211.62123 lineto

 99.05556 211.75916 lineto

 99.05159 211.88214 lineto

 99.04842 211.99176 lineto

 99.04593 212.08946 lineto

 99.04393 212.17653 lineto

 99.04236 212.25412 lineto

 99.0411 212.32324 lineto

 99.0401 212.38481 lineto

 99.03932 212.43968 lineto

 99.03871 212.48853 lineto

 99.03821 212.53203 lineto

 99.03781 212.57077 lineto

 99.0375 212.6053 lineto

 99.03725 212.63603 lineto

 99.03706 212.6634 lineto

 99.0369 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 151.27815 197.81311 moveto

 151.26834 197.79755 lineto

 151.25731 197.78006 lineto

 151.2449 197.76044 lineto

 151.23094 197.73842 lineto

 151.21526 197.7137 lineto

 151.1976 197.68596 lineto

 151.17775 197.65485 lineto

 151.15541 197.61993 lineto

 151.13026 197.58078 lineto

 151.10194 197.53685 lineto

 151.07005 197.4876 lineto

 151.03415 197.4324 lineto

 150.99367 197.37054 lineto

 150.94806 197.30122 lineto

 150.89664 197.22359 lineto

 150.83861 197.13667 lineto

 150.77313 197.03944 lineto

 150.6992 196.93066 lineto

 150.61569 196.80907 lineto

 150.52127 196.67325 lineto

 150.41447 196.5216 lineto

 150.2936 196.3525 lineto

 150.15668 196.16406 lineto

 150.00148 195.95435 lineto

 149.82541 195.72124 lineto

 149.62553 195.46251 lineto

 149.39842 195.17589 lineto

 149.14015 194.85893 lineto

 148.84627 194.50932 lineto

 148.51158 194.12471 lineto

 148.13023 193.70299 lineto

 147.69551 193.24231 lineto

 147.19986 192.74132 lineto

 146.6347 192.19939 lineto

 145.99062 191.61684 lineto

 145.25714 190.99538 lineto

 144.42308 190.33841 lineto

 143.47655 189.65158 lineto

 142.40549 188.94312 lineto

 141.19806 188.2245 lineto

 139.84355 187.51076 lineto

 138.3333 186.82072 lineto

 136.66191 186.17711 lineto

 134.8287 185.60599 lineto

 132.83905 185.13603 lineto

 130.7056 184.79689 lineto

 128.44916 184.6172 lineto

 126.0986 184.62206 lineto

 123.69022 184.83049 lineto

 121.26566 185.25304 lineto

 118.8693 185.89015 lineto

 116.54494 186.7317 lineto

 114.33257 187.75749 lineto

 112.2654 188.9393 lineto

 110.36812 190.24324 lineto

 108.65587 191.63292 lineto

 107.13481 193.07227 lineto

 105.80287 194.52768 lineto

 104.65166 195.96999 lineto

 103.66817 197.37508 lineto

 102.83658 198.72429 lineto

 102.13972 200.00417 lineto

 101.56035 201.2059 lineto

 101.0819 202.32457 lineto

 100.6891 203.35844 lineto

 100.36821 204.30818 lineto

 100.10722 205.17622 lineto

 99.89569 205.96634 lineto

 99.7248 206.6829 lineto

 99.58708 207.33095 lineto

 99.47641 207.91553 lineto

 99.38757 208.44185 lineto

 99.3164 208.91486 lineto

 99.2595 209.33936 lineto

 99.21404 209.7199 lineto

 99.17775 210.06064 lineto

 99.1488 210.36554 lineto

 99.12573 210.63814 lineto

 99.10739 210.88173 lineto

 99.09277 211.09929 lineto

 99.08116 211.29347 lineto

 99.07193 211.4668 lineto

 99.06456 211.6214 lineto

 99.05876 211.75928 lineto

 99.05412 211.88222 lineto

 99.05045 211.99182 lineto

 99.04753 212.08951 lineto

 99.0452 212.17656 lineto

 99.04337 212.25415 lineto

 99.0419 212.32326 lineto

 99.04074 212.38483 lineto

 99.03983 212.43968 lineto

 99.0391 212.48854 lineto

 99.03853 212.53204 lineto

 99.03807 212.57077 lineto

 99.0377 212.6053 lineto

 99.03741 212.63603 lineto

 99.03719 212.6634 lineto

 99.037 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 145.58661 201.134 moveto

 145.57979 201.12137 lineto

 145.57213 201.1072 lineto

 145.56349 201.09128 lineto

 145.55382 201.07341 lineto

 145.5429 201.05334 lineto

 145.53062 201.03084 lineto

 145.51685 201.00558 lineto

 145.5013 200.97722 lineto

 145.48381 200.9454 lineto

 145.4641 200.90971 lineto

 145.44191 200.86966 lineto

 145.41692 200.82475 lineto

 145.38873 200.7744 lineto

 145.35696 200.71794 lineto

 145.32114 200.6547 lineto

 145.28069 200.5838 lineto

 145.23502 200.50443 lineto

 145.18341 200.41553 lineto

 145.12509 200.31607 lineto

 145.0591 200.2048 lineto

 144.98439 200.0804 lineto

 144.89977 199.94145 lineto

 144.80379 199.78633 lineto

 144.69487 199.61331 lineto

 144.57114 199.42052 lineto

 144.43044 199.20596 lineto

 144.27028 198.96748 lineto

 144.08778 198.70284 lineto

 143.87961 198.40967 lineto

 143.6419 198.08557 lineto

 143.37022 197.72823 lineto

 143.05946 197.33533 lineto

 142.7037 196.9048 lineto

 142.29622 196.43495 lineto

 141.8294 195.9247 lineto

 141.29465 195.37372 lineto

 140.6824 194.78282 lineto

 139.98221 194.15437 lineto

 139.18288 193.49263 lineto

 138.27275 192.80432 lineto

 137.24016 192.0991 lineto

 136.07411 191.39001 lineto

 134.76521 190.69373 lineto

 133.30678 190.0309 lineto

 131.69621 189.42564 lineto

 129.93637 188.90495 lineto

 128.03693 188.4974 lineto

 126.01529 188.23116 lineto

 123.89684 188.13167 lineto

 121.71437 188.21906 lineto

 119.5065 188.50569 lineto

 117.31503 188.99442 lineto

 115.18185 189.67776 lineto

 113.14563 190.53844 lineto

 111.23895 191.55096 lineto

 109.48634 192.68411 lineto

 107.9033 193.90378 lineto

 106.49644 195.17592 lineto

 105.26466 196.46866 lineto

 104.20047 197.75418 lineto

 103.29198 199.00954 lineto

 102.5245 200.21684 lineto

 101.88206 201.36322 lineto

 101.34854 202.44016 lineto

 100.90848 203.44286 lineto

 100.5476 204.36954 lineto

 100.25316 205.22064 lineto

 100.01392 205.99835 lineto

 99.82024 206.70592 lineto

 99.66391 207.34744 lineto

 99.53806 207.92735 lineto

 99.43698 208.45026 lineto

 99.35594 208.92084 lineto

 99.29108 209.34364 lineto

 99.23923 209.72293 lineto

 99.19781 210.06282 lineto

 99.1648 210.36707 lineto

 99.13846 210.63922 lineto

 99.11751 210.8825 lineto

 99.10083 211.09984 lineto

 99.08755 211.29387 lineto

 99.077 211.46706 lineto

 99.0686 211.6216 lineto

 99.06194 211.75941 lineto

 99.05666 211.88232 lineto

 99.05244 211.99188 lineto

 99.0491 212.08955 lineto

 99.04648 212.17659 lineto

 99.04436 212.25417 lineto

 99.04271 212.32327 lineto

 99.04138 212.38484 lineto

 99.04033 212.4397 lineto

 99.0395 212.48854 lineto

 99.03885 212.53204 lineto

 99.03831 212.57079 lineto

 99.0379 212.6053 lineto

 99.03757 212.63603 lineto

 99.03731 212.6634 lineto

 99.0371 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 140.94147 203.48209 moveto

 140.93655 203.47171 lineto

 140.93105 203.46007 lineto

 140.92482 203.44699 lineto

 140.91785 203.43228 lineto

 140.90999 203.4158 lineto

 140.90115 203.39728 lineto

 140.8912 203.37648 lineto

 140.87999 203.35316 lineto

 140.86739 203.32697 lineto

 140.85318 203.29759 lineto

 140.83719 203.26462 lineto

 140.81915 203.22763 lineto

 140.79883 203.18611 lineto

 140.7759 203.13957 lineto

 140.75002 203.0874 lineto

 140.72081 203.02888 lineto

 140.68782 202.96333 lineto

 140.65054 202.8899 lineto

 140.60837 202.80763 lineto

 140.56062 202.71552 lineto

 140.50656 202.61246 lineto

 140.44525 202.49721 lineto

 140.37569 202.36836 lineto

 140.29665 202.22446 lineto

 140.20679 202.06383 lineto

 140.10449 201.88472 lineto

 139.98788 201.68518 lineto

 139.85481 201.46323 lineto

 139.70277 201.2166 lineto

 139.52884 200.9431 lineto

 139.3296 200.64034 lineto

 139.1011 200.30598 lineto

 138.83878 199.9377 lineto

 138.53732 199.53339 lineto

 138.19064 199.09123 lineto

 137.79178 198.60979 lineto

 137.33281 198.08847 lineto

 136.80489 197.52763 lineto

 136.19824 196.92896 lineto

 135.50224 196.29597 lineto

 134.70578 195.63443 lineto

 133.79755 194.95284 lineto

 132.76666 194.2629 lineto

 131.60362 193.57991 lineto

 130.30125 192.92297 lineto

 128.85612 192.31467 lineto

 127.26987 191.7806 lineto

 125.5505 191.34808 lineto

 123.71353 191.04434 lineto

 121.78212 190.89429 lineto

 119.78674 190.91786 lineto

 117.76366 191.12778 lineto

 115.7523 191.52754 lineto

 113.79247 192.1108 lineto

 111.9209 192.86168 lineto

 110.16856 193.75641 lineto

 108.55873 194.76564 lineto

 107.10605 195.85733 lineto

 105.81667 196.9994 lineto

 104.68939 198.16205 lineto

 103.71709 199.31923 lineto

 102.88844 200.44952 lineto

 102.18965 201.53647 lineto

 101.6057 202.56812 lineto

 101.12155 203.53674 lineto

 100.72284 204.43802 lineto

 100.39638 205.27034 lineto

 100.13037 206.03427 lineto

 99.91454 206.7318 lineto

 99.73999 207.36601 lineto

 99.59926 207.94064 lineto

 99.4861 208.45976 lineto

 99.39528 208.92763 lineto

 99.32253 209.34848 lineto

 99.26433 209.72636 lineto

 99.21785 210.06526 lineto

 99.18076 210.3688 lineto

 99.15117 210.64046 lineto

 99.12762 210.88336 lineto

 99.10887 211.10045 lineto

 99.09393 211.29431 lineto

 99.08208 211.46738 lineto

 99.07263 211.62181 lineto

 99.06514 211.75957 lineto

 99.0592 211.88243 lineto

 99.05447 211.99196 lineto

 99.05072 212.08961 lineto

 99.04774 212.17664 lineto

 99.04538 212.2542 lineto

 99.04352 212.32329 lineto

 99.042 212.38486 lineto

 99.04083 212.4397 lineto

 99.03989 212.48856 lineto

 99.03915 212.53204 lineto

 99.03857 212.57079 lineto

 99.0381 212.6053 lineto

 99.03773 212.63603 lineto

 99.03743 212.6634 lineto

 99.0372 212.68777 lineto

 pgfstr

 restore

 save

 0.87059 0.87059 0.87059 setrgbcolor

 137.0978 205.19872 moveto

 137.09415 205.19008 lineto

 137.09006 205.18036 lineto

 137.08543 205.16945 lineto

 137.08023 205.1572 lineto

 137.0744 205.14345 lineto

 137.06784 205.128 lineto

 137.06046 205.11067 lineto

 137.05212 205.09122 lineto

 137.04276 205.0694 lineto

 137.03221 205.04488 lineto

 137.02032 205.01735 lineto

 137.00691 204.98648 lineto

 136.9918 204.95184 lineto

 136.97476 204.91298 lineto

 136.9555 204.86938 lineto

 136.9338 204.82051 lineto

 136.90926 204.76569 lineto

 136.8815 204.70425 lineto

 136.8501 204.6354 lineto

 136.81454 204.55827 lineto

 136.77426 204.4719 lineto

 136.72856 204.37523 lineto

 136.67667 204.26706 lineto

 136.61768 204.14612 lineto

 136.55055 204.01096 lineto

 136.47408 203.86003 lineto

 136.38683 203.69165 lineto

 136.28714 203.50397 lineto

 136.1731 203.29504 lineto

 136.04245 203.06276 lineto

 135.89256 202.80493 lineto

 135.72034 202.51929 lineto

 135.52217 202.2035 lineto

 135.29388 201.85535 lineto

 135.03061 201.47263 lineto

 134.7267 201.0535 lineto

 134.37567 200.59651 lineto

 133.97014 200.10085 lineto

 133.50175 199.56665 lineto

 132.9613 198.9953 lineto

 132.3387 198.3899 lineto

 131.62326 197.75563 lineto

 130.80412 197.10036 lineto

 129.87073 196.43501 lineto

 128.81375 195.77403 lineto

 127.62611 195.13542 lineto

 126.30418 194.54076 lineto

 124.84923 194.01451 lineto

 123.26868 193.58281 lineto

 121.57713 193.27179 lineto

 119.79663 193.10522 lineto

 117.95625 193.10216 lineto

 116.09044 193.2745 lineto

 114.23672 193.62537 lineto

 112.43266 194.14827 lineto

 110.71278 194.82771 lineto

 109.10579 195.64076 lineto

 107.63298 196.55943 lineto

 106.30733 197.5534 lineto

 105.13382 198.59264 lineto

 104.1106 199.6494 lineto

 103.23036 200.6997 lineto

 102.48212 201.72403 lineto

 101.85263 202.70749 lineto

 101.32777 203.6395 lineto

 100.89354 204.51328 lineto

 100.53662 205.32515 lineto

 100.24489 206.07399 lineto

 100.00755 206.76045 lineto

 99.81526 207.38664 lineto

 99.65997 207.95544 lineto

 99.53488 208.47035 lineto

 99.43442 208.9352 lineto

 99.35387 209.35384 lineto

 99.28935 209.73021 lineto

 99.23782 210.06796 lineto

 99.19669 210.37074 lineto

 99.16385 210.64183 lineto

 99.13771 210.88434 lineto

 99.1169 211.10112 lineto

 99.10033 211.29478 lineto

 99.08716 211.46773 lineto

 99.07668 211.62204 lineto

 99.06834 211.75975 lineto

 99.06174 211.88255 lineto

 99.05649 211.99205 lineto

 99.0523 212.08968 lineto

 99.04901 212.17668 lineto

 99.04639 212.25423 lineto

 99.04428 212.32332 lineto

 99.04265 212.38487 lineto

 99.04134 212.4397 lineto

 99.04028 212.48856 lineto

 99.03947 212.53206 lineto

 99.03883 212.57079 lineto

 99.0383 212.6053 lineto

 99.03789 212.63603 lineto

 99.03757 212.6634 lineto

 99.0373 212.68777 lineto

 pgfstr

 restore

 save

 0 setgray

 1.0959 pgfw

 145.64165 201.23659 moveto

 145.4707 200.90958 lineto

 145.30582 200.58084 lineto

 145.14691 200.2504 lineto

 144.99394 199.91821 lineto

 144.84685 199.58432 lineto

 144.70554 199.24864 lineto

 144.57005 198.91121 lineto

 144.44026 198.57198 lineto

 144.31622 198.2309 lineto

 144.19788 197.88797 lineto

 144.08517 197.54318 lineto

 143.97818 197.19646 lineto

 143.87682 196.84776 lineto

 143.78114 196.49709 lineto

 143.69115 196.14436 lineto

 143.60684 195.78958 lineto

 143.52829 195.4327 lineto

 143.45549 195.07362 lineto

 143.3885 194.71234 lineto

 143.32736 194.34882 lineto

 143.27211 193.983 lineto

 143.22289 193.6148 lineto

 143.17967 193.24425 lineto

 143.14258 192.87122 lineto

 143.11172 192.49573 lineto

 143.0872 192.11768 lineto

 143.06908 191.73703 lineto

 143.05753 191.35376 lineto

 143.05263 190.96779 lineto

 143.05455 190.57912 lineto

 143.06342 190.18767 lineto

 143.0794 189.79341 lineto

 143.10268 189.3963 lineto

 143.1334 188.9963 lineto

 143.17181 188.59341 lineto

 143.2181 188.18756 lineto

 143.27242 187.77873 lineto

 143.33508 187.36693 lineto

 143.40631 186.95212 lineto

 143.48633 186.53432 lineto

 143.57545 186.1135 lineto

 143.67397 185.68967 lineto

 143.78217 185.26285 lineto

 143.90038 184.83311 lineto

 144.02892 184.40042 lineto

 144.16817 183.96487 lineto

 144.3185 183.52654 lineto

 144.4803 183.08546 lineto

 144.65398 182.64175 lineto

 144.83995 182.19556 lineto

 145.03868 181.74698 lineto

 145.25064 181.29616 lineto

 145.47635 180.84329 lineto

 145.71623 180.3886 lineto

 145.9709 179.93231 lineto

 146.24088 179.47472 lineto

 146.52675 179.01607 lineto

 146.82909 178.55678 lineto

 147.14851 178.09717 lineto

 147.48566 177.63771 lineto

 147.84116 177.17886 lineto

 148.21571 176.72116 lineto

 148.60994 176.26521 lineto

 149.02458 175.81166 lineto

 149.46031 175.3612 lineto

 149.91785 174.91469 lineto

 150.39787 174.47295 lineto

 150.90115 174.03693 lineto

 151.42833 173.6077 lineto

 151.9801 173.18637 lineto

 152.55711 172.7742 lineto

 153.16005 172.37254 lineto

 153.78946 171.98283 lineto

 154.44589 171.60663 lineto

 155.12985 171.24565 lineto

 155.84174 170.9017 lineto

 156.58186 170.57668 lineto

 157.35048 170.27269 lineto

 158.1476 169.9919 lineto

 158.97327 169.73666 lineto

 159.82722 169.50938 lineto

 160.70906 169.31264 lineto

 161.61823 169.14906 lineto

 162.55386 169.02142 lineto

 163.51488 168.93257 lineto

 164.49994 168.88536 lineto

 165.50739 168.88277 lineto

 166.53522 168.92769 lineto

 167.58113 169.02303 lineto

 168.64247 169.17162 lineto

 169.71617 169.3762 lineto

 170.79883 169.63934 lineto

 171.88664 169.9634 lineto

 172.97548 170.35046 lineto

 174.06078 170.80232 lineto

 175.13768 171.32039 lineto

 176.20107 171.90562 lineto

 177.2455 172.5585 lineto

 178.26538 173.27898 lineto

 pgfstr

 restore

 save

 0 setgray

 [ 2.98883 2.98883 ] 0.0 setdash

 1.0959 pgfw

 198.07265 113.86905 moveto

 188.57187 114.32571 lineto

 180.05252 115.52193 lineto

 172.45398 117.23923 lineto

 165.6976 119.30913 lineto

 159.69846 121.60422 lineto

 154.37267 124.02979 lineto

 149.64136 126.51648 lineto

 145.43253 129.01425 lineto

 141.68185 131.48764 lineto

 138.3325 133.91206 lineto

 135.33469 136.27097 lineto

 132.64508 138.55376 lineto

 130.22604 140.75409 lineto

 128.04486 142.86884 lineto

 126.07332 144.89703 lineto

 124.28682 146.83936 lineto

 122.66415 148.69753 lineto

 121.18675 150.47406 lineto

 119.83861 152.17189 lineto

 118.60559 153.79425 lineto

 117.47545 155.3446 lineto

 116.4375 156.82632 lineto

 115.48225 158.24287 lineto

 114.60141 159.59756 lineto

 113.78769 160.89368 lineto

 113.03459 162.13428 lineto

 112.33641 163.32237 lineto

 111.68806 164.46078 lineto

 111.085 165.5522 lineto

 110.52322 166.59912 lineto

 109.99907 167.60399 lineto

 109.50938 168.56902 lineto

 109.05124 169.49632 lineto

 108.622 170.3879 lineto

 108.21935 171.24564 lineto

 107.84116 172.07127 lineto

 107.48553 172.86646 lineto

 107.15073 173.63277 lineto

 106.83517 174.37161 lineto

 106.53745 175.08437 lineto

 106.25626 175.77234 lineto

 105.99037 176.43672 lineto

 105.73877 177.07867 lineto

 105.5004 177.69922 lineto

 105.27441 178.2994 lineto

 105.05995 178.88013 lineto

 104.85626 179.44232 lineto

 104.66261 179.98683 lineto

 104.47841 180.51442 lineto

 104.303 181.02586 lineto

 104.13586 181.52185 lineto

 103.9765 182.00307 lineto

 103.82445 182.4701 lineto

 103.67924 182.9236 lineto

 103.54048 183.36409 lineto

 103.40782 183.79214 lineto

 103.2809 184.20825 lineto

 103.15938 184.61288 lineto

 103.04297 185.0065 lineto

 102.93138 185.38954 lineto

 102.82439 185.7624 lineto

 102.72168 186.12552 lineto

 102.6231 186.47922 lineto

 102.52837 186.82384 lineto

 102.43733 187.15977 lineto

 102.3498 187.4873 lineto

 102.26556 187.80673 lineto

 102.18451 188.11838 lineto

 102.10645 188.42249 lineto

 102.03123 188.71935 lineto

 101.95874 189.00919 lineto

 101.88882 189.29227 lineto

 101.82138 189.56882 lineto

 101.75629 189.83905 lineto

 101.69347 190.10318 lineto

 101.63275 190.3614 lineto

 101.57411 190.61392 lineto

 101.51741 190.8609 lineto

 101.46257 191.10255 lineto

 101.40955 191.339 lineto

 101.35823 191.57047 lineto

 101.30855 191.79704 lineto

 101.26045 192.01894 lineto

 101.21384 192.23625 lineto

 101.16869 192.44913 lineto

 101.12491 192.6577 lineto

 101.08246 192.86212 lineto

 101.04129 193.0625 lineto

 101.00136 193.25893 lineto

 100.9626 193.45155 lineto

 100.92497 193.64047 lineto

 100.88843 193.82578 lineto

 100.85292 194.0076 lineto

 100.81845 194.18599 lineto

 100.78493 194.3611 lineto

 100.75233 194.53299 lineto

 100.72066 194.70174 lineto

 100.68983 194.86743 lineto

 100.65987 195.03015 lineto

 pgfstr

 restore

 save

 0 setgray

 [ 2.98883 1.99255 0.3985 1.99255 ] 0.0 setdash

 1.0959 pgfw

 94.95235 123.05615 moveto

 95.12854 126.05627 lineto

 95.1183 128.86728 lineto

 94.95503 131.49773 lineto

 94.66647 133.95782 lineto

 94.27556 136.25847 lineto

 93.80124 138.41086 lineto

 93.25899 140.42593 lineto

 92.66151 142.31421 lineto

 92.01923 144.08568 lineto

 91.34055 145.7496 lineto

 90.6324 147.31462 lineto

 89.90034 148.78867 lineto

 89.14888 150.17905 lineto

 88.38164 151.4924 lineto

 87.60144 152.7348 lineto

 86.81061 153.9118 lineto

 86.01083 155.02844 lineto

 85.20352 156.0893 lineto

 84.38962 157.09853 lineto

 83.56981 158.05989 lineto

 82.74454 158.97684 lineto

 81.91402 159.8525 lineto

 81.07826 160.68964 lineto

 80.23721 161.49081 lineto

 79.39056 162.2584 lineto

 78.53796 162.99446 lineto

 77.67891 163.70084 lineto

 76.81285 164.37927 lineto

 75.93907 165.03125 lineto

 75.05684 165.65814 lineto

 74.16531 166.26111 lineto

 73.26358 166.84122 lineto

 72.35062 167.39935 lineto

 71.42538 167.9363 lineto

 70.48665 168.45262 lineto

 69.53328 168.94887 lineto

 68.56386 169.42535 lineto

 67.57701 169.8823 lineto

 66.5712 170.31973 lineto

 65.54483 170.7376 lineto

 64.49617 171.13564 lineto

 63.42336 171.51341 lineto

 62.32443 171.8703 lineto

 61.19728 172.20552 lineto

 60.03967 172.51799 lineto

 58.8492 172.80641 lineto

 57.6233 173.0692 lineto

 56.35922 173.3044 lineto

 55.05408 173.50975 lineto

 53.70473 173.68254 lineto

 52.30789 173.81952 lineto

 50.86002 173.91696 lineto

 49.35747 173.97043 lineto

 47.79634 173.97475 lineto

 46.17256 173.92383 lineto

 44.48198 173.8106 lineto

 42.72032 173.62675 lineto

 40.88332 173.36263 lineto

 38.96686 173.00685 lineto

 36.96707 172.54622 lineto

 34.88068 171.96532 lineto

 32.70514 171.24612 lineto

 30.43933 170.36775 lineto

 28.08392 169.30598 lineto

 25.64232 168.0328 lineto

 23.1217 166.51624 lineto

 20.53435 164.71988 lineto

 17.89949 162.60304 lineto

 15.2455 160.12102 lineto

 12.61258 157.22603 lineto

 10.05594 153.86926 lineto

 7.64912 150.00395 lineto

 5.48735 145.59058 lineto

 3.6897 140.6042 lineto

 2.39944 135.04443 lineto

 1.78049 128.94743 lineto

 2.00827 122.39896 lineto

 3.25316 115.5457 lineto

 5.6567 108.60046 lineto

 9.30246 101.83653 lineto

 14.18782 95.56732 lineto

 20.20518 90.11119 lineto

 27.14114 85.74742 lineto

 34.69768 82.67407 lineto

 42.53159 80.98038 lineto

 50.30194 80.64096 lineto

 57.71213 81.53212 lineto

 64.53735 83.46288 lineto

 70.6341 86.21005 lineto

 75.93471 89.549 lineto

 80.43286 93.2754 lineto

 84.16562 97.21696 lineto

 87.19705 101.23714 lineto

 89.60437 105.23363 lineto

 91.46846 109.1338 lineto

 92.86746 112.88927 lineto

 93.87323 116.47032 lineto

 94.5497 119.8612 lineto

 94.95235 123.05615 lineto

 pgfstr

 restore

 save

 0 setgray

 [ 2.98883 1.99255 0.3985 1.99255 ] 0.0 setdash

 1.0959 pgfw

 70.65915 110.74818 moveto

 72.01442 113.20576 lineto

 73.12495 115.62802 lineto

 74.01566 117.99805 lineto

 74.71019 120.30368 lineto

 75.23047 122.53653 lineto

 75.5965 124.69128 lineto

 75.8264 126.76501 lineto

 75.93633 128.75665 lineto

 75.94063 130.66655 lineto

 75.85197 132.49597 lineto

 75.6815 134.24704 lineto

 75.43892 135.92233 lineto

 75.13269 137.52475 lineto

 74.77017 139.05743 lineto

 74.35776 140.52359 lineto

 73.90094 141.92642 lineto

 73.40446 143.26912 lineto

 72.87236 144.55478 lineto

 72.30815 145.78639 lineto

 71.71475 146.96677 lineto

 71.09468 148.09862 lineto

 70.45 149.18446 lineto

 69.78252 150.22673 lineto

 69.09363 151.22758 lineto

 68.38446 152.18915 lineto

 67.65599 153.11325 lineto

 66.90887 154.00168 lineto

 66.14357 154.856 lineto

 65.36047 155.67769 lineto

 64.55968 156.46806 lineto

 63.74123 157.22821 lineto

 62.90494 157.95918 lineto

 62.05061 158.66188 lineto

 61.17784 159.337 lineto

 60.28615 159.98515 lineto

 59.37492 160.60678 lineto

 58.4435 161.20221 lineto

 57.49104 161.77158 lineto

 56.51671 162.3149 lineto

 55.51947 162.832 lineto

 54.49826 163.32257 lineto

 53.45193 163.78606 lineto

 52.37923 164.2218 lineto

 51.2788 164.62883 lineto

 50.1492 165.00604 lineto

 48.98897 165.352 lineto

 47.79651 165.66501 lineto

 46.57016 165.9431 lineto

 45.30826 166.18394 lineto

 44.00903 166.38483 lineto

 42.67073 166.54263 lineto

 41.29158 166.65378 lineto

 39.8698 166.71413 lineto

 38.40375 166.719 lineto

 36.89185 166.66302 lineto

 35.33272 166.54013 lineto

 33.72528 166.34348 lineto

 32.06873 166.06526 lineto

 30.36288 165.69676 lineto

 28.60818 165.22818 lineto

 26.80591 164.64853 lineto

 24.95851 163.94566 lineto

 23.06984 163.10612 lineto

 21.14561 162.11517 lineto

 19.1937 160.95677 lineto

 17.22484 159.61386 lineto

 15.25304 158.0684 lineto

 13.29639 156.3018 lineto

 11.37766 154.29562 lineto

 9.52509 152.03223 lineto

 7.77303 149.49611 lineto

 6.1624 146.67535 lineto

 4.74097 143.5635 lineto

 3.563 140.16191 lineto

 2.68835 136.48225 lineto

 2.18056 132.54927 lineto

 2.1039 128.40323 lineto

 2.51924 124.1016 lineto

 3.47882 119.71982 lineto

 5.0205 115.34999 lineto

 7.16167 111.09758 lineto

 9.89468 107.0757 lineto

 13.1837 103.39749 lineto

 16.9647 100.16743 lineto

 21.14868 97.47269 lineto

 25.62784 95.37611 lineto

 30.28389 93.9119 lineto

 34.99728 93.08456 lineto

 39.65572 92.8711 lineto

 44.16096 93.22577 lineto

 48.43323 94.0864 lineto

 52.41301 95.3809 lineto

 56.06088 97.03352 lineto

 59.35536 98.96985 lineto

 62.29016 101.12039 lineto

 64.8709 103.42297 lineto

 67.11192 105.82379 lineto

 69.03342 108.27779 lineto

 70.65915 110.74818 lineto

 pgfstr

 restore

 save

 0 setgray

 [ 1.0959 1.99255 ] 0.0 setdash

 1.0959 pgfw

 160.49081 191.29926 moveto

 160.44186 190.13885 lineto

 160.38979 188.96579 lineto

 160.33443 187.77925 lineto

 160.27565 186.57846 lineto

 160.21333 185.36253 lineto

 160.14734 184.13055 lineto

 160.07745 182.88158 lineto

 160.00351 181.61462 lineto

 159.92534 180.32867 lineto

 159.84271 179.02264 lineto

 159.75539 177.69537 lineto

 159.66312 176.34569 lineto

 159.56566 174.97235 lineto

 159.46272 173.574 lineto

 159.35399 172.14926 lineto

 159.2391 170.69666 lineto

 159.11772 169.21463 lineto

 158.98944 167.70149 lineto

 158.85382 166.15553 lineto

 158.7104 164.57486 lineto

 158.55872 162.95749 lineto

 158.39812 161.30133 lineto

 158.22807 159.60413 lineto

 158.04788 157.86345 lineto

 157.85683 156.07674 lineto

 157.65413 154.24129 lineto

 157.43893 152.35405 lineto

 157.21025 150.41193 lineto

 156.96703 148.4115 lineto

 156.70813 146.34906 lineto

 156.43225 144.22066 lineto

 156.138 142.02205 lineto

 155.82379 139.74854 lineto

 155.4879 137.39513 lineto

 155.12833 134.95634 lineto

 154.74295 132.42627 lineto

 154.32932 129.79842 lineto

 153.88474 127.06573 lineto

 153.40613 124.22041 lineto

 152.89001 121.25404 lineto

 152.33252 118.15726 lineto

 151.72922 114.91977 lineto

 151.07504 111.53024 lineto

 150.3643 107.97615 lineto

 149.59036 104.24353 lineto

 148.74567 100.31691 lineto

 147.82147 96.17899 lineto

 146.8077 91.81044 lineto

 145.69247 87.18962 lineto

 144.46207 82.29211 lineto

 143.1003 77.09038 lineto

 141.588 71.55328 lineto

 139.9025 65.6454 lineto

 138.01665 59.32632 lineto

 135.89783 52.54988 lineto

 133.50659 45.26302 lineto

 130.79486 37.4046 lineto

 127.7036 28.90387 lineto

 124.15973 19.67874 lineto

 pgfstr

 restore

 save

 0 setgray

 198.07265 113.86905 moveto

 197.87325 120.14906 lineto

 197.27586 126.40378 lineto

 196.28291 132.60805 lineto

 194.8984 138.73683 lineto

 193.12787 144.76552 lineto

 190.97847 150.66978 lineto

 188.45885 156.42586 lineto

 185.57915 162.01056 lineto

 182.35098 167.40144 lineto

 178.78731 172.57674 lineto

 174.90254 177.51566 lineto

 170.71227 182.19829 lineto

 166.23338 186.60579 lineto

 161.48393 190.72038 lineto

 156.48302 194.52556 lineto

 151.25078 198.00594 lineto

 145.8083 201.14752 lineto

 140.17749 203.93767 lineto

 134.38103 206.36514 lineto

 128.4422 208.42017 lineto

 122.38501 210.09448 lineto

 116.2338 211.38132 lineto

 110.01332 212.27551 lineto

 103.74866 212.77345 lineto

 97.46501 212.87314 lineto

 91.18768 212.57417 lineto

 84.94197 211.87776 lineto

 78.753 210.7867 lineto

 72.64572 209.30537 lineto

 66.64468 207.43976 lineto

 60.77411 205.19739 lineto

 55.05759 202.58727 lineto

 49.51816 199.61989 lineto

 44.1781 196.30725 lineto

 39.05894 192.66264 lineto

 34.18132 188.70074 lineto

 29.56482 184.43758 lineto

 25.22806 179.8902 lineto

 21.18849 175.07703 lineto

 17.46242 170.01736 lineto

 14.06479 164.73161 lineto

 11.00931 159.24104 lineto

 8.3083 153.5678 lineto

 5.97261 147.7347 lineto

 4.01166 141.76523 lineto

 2.43333 135.68343 lineto

 1.24399 129.5138 lineto

 0.44843 123.28114 lineto

 0.04984 117.01062 lineto

 0.04984 110.72745 lineto

 0.44843 104.45692 lineto

 1.24399 98.22427 lineto

 2.43333 92.05464 lineto

 4.01166 85.97285 lineto

 5.97261 80.00339 lineto

 8.3083 74.17027 lineto

 11.00931 68.49702 lineto

 14.06479 63.00645 lineto

 17.46242 57.7207 lineto

 21.18849 52.66104 lineto

 25.22806 47.84787 lineto

 29.56482 43.3005 lineto

 34.18132 39.03732 lineto

 39.05894 35.07542 lineto

 44.1781 31.43083 lineto

 49.51816 28.11818 lineto

 55.05759 25.1508 lineto

 60.77411 22.54068 lineto

 66.64468 20.29831 lineto

 72.64572 18.4327 lineto

 78.753 16.95137 lineto

 84.94197 15.8603 lineto

 91.18768 15.16391 lineto

 97.46501 14.86493 lineto

 103.74866 14.96461 lineto

 110.01332 15.46257 lineto

 116.2338 16.35677 lineto

 122.38501 17.64359 lineto

 128.4422 19.3179 lineto

 134.38103 21.37292 lineto

 140.17749 23.8004 lineto

 145.8083 26.59055 lineto

 151.25078 29.73213 lineto

 156.48302 33.21251 lineto

 161.48393 37.01768 lineto

 166.23338 41.1323 lineto

 170.71227 45.53978 lineto

 174.90254 50.22241 lineto

 178.78731 55.16133 lineto

 182.35098 60.33662 lineto

 185.57915 65.72751 lineto

 188.45885 71.31221 lineto

 190.97847 77.0683 lineto

 193.12787 82.97256 lineto

 194.8984 89.00124 lineto

 196.28291 95.13002 lineto

 197.27586 101.3343 lineto

 197.87325 107.58902 lineto

 198.07265 113.86905 lineto

 pgfstr

 restore

 save

 0 setgray

 1.0959 pgfw

 145.64165 201.23659 moveto

 145.29553 200.5863 lineto

 144.953 199.93987 lineto

 144.61385 199.29694 lineto

 144.27786 198.65718 lineto

 143.94484 198.02025 lineto

 143.6146 197.38579 lineto

 143.2869 196.75351 lineto

 142.96158 196.12308 lineto

 142.63849 195.49414 lineto

 142.31741 194.86641 lineto

 141.9982 194.23958 lineto

 141.68068 193.6133 lineto

 141.3647 192.9873 lineto

 141.05006 192.36122 lineto

 140.73662 191.7348 lineto

 140.42424 191.1077 lineto

 140.11275 190.47961 lineto

 139.802 189.85022 lineto

 139.49185 189.2192 lineto

 139.18213 188.58623 lineto

 138.8727 187.951 lineto

 138.56343 187.31316 lineto

 138.25412 186.67238 lineto

 137.94467 186.02832 lineto

 137.63493 185.38066 lineto

 137.32472 184.72899 lineto

 137.01393 184.07298 lineto

 136.70238 183.41226 lineto

 136.38995 182.74644 lineto

 136.07645 182.07509 lineto

 135.76172 181.39787 lineto

 135.44563 180.71431 lineto

 135.12804 180.024 lineto

 134.80876 179.32649 lineto

 134.48763 178.62132 lineto

 134.16446 177.90797 lineto

 133.8391 177.18597 lineto

 133.51137 176.45479 lineto

 133.1811 175.71388 lineto

 132.84808 174.96268 lineto

 132.51216 174.20059 lineto

 132.1731 173.42696 lineto

 131.8307 172.64117 lineto

 131.48477 171.84253 lineto

 131.13513 171.03027 lineto

 130.78148 170.2037 lineto

 130.42363 169.36197 lineto

 130.06134 168.50423 lineto

 129.69435 167.6296 lineto

 129.32243 166.73712 lineto

 128.94527 165.82579 lineto

 128.56262 164.89455 lineto

 128.17418 163.94225 lineto

 127.77963 162.9677 lineto

 127.37866 161.96959 lineto

 126.97095 160.94658 lineto

 126.55614 159.89717 lineto

 126.1339 158.81984 lineto

 125.7038 157.71286 lineto

 125.26547 156.57445 lineto

 124.81848 155.40268 lineto

 124.36243 154.19545 lineto

 123.8968 152.95053 lineto

 123.42116 151.66547 lineto

 122.935 150.33768 lineto

 122.43782 148.96426 lineto

 121.92903 147.5422 lineto

 121.40804 146.06812 lineto

 120.8743 144.53831 lineto

 120.32716 142.94888 lineto

 119.76596 141.29543 lineto

 119.19005 139.57314 lineto

 118.59872 137.77681 lineto

 117.99123 135.90068 lineto

 117.36687 133.93835 lineto

 116.72484 131.8828 lineto

 116.0644 129.7262 lineto

 115.38481 127.45987 lineto

 114.68532 125.07413 lineto

 113.96521 122.55818 lineto

 113.22385 119.89983 lineto

 112.46065 117.08543 lineto

 111.67519 114.09955 lineto

 110.86723 110.9247 lineto

 110.03682 107.54095 lineto

 109.18433 103.92558 lineto

 108.31064 100.05252 lineto

 107.41736 95.89168 lineto

 106.50699 91.4083 lineto

 105.58334 86.5618 lineto

 104.65196 81.30486 lineto

 103.72078 75.58165 lineto

 102.80101 69.32614 lineto

 101.90848 62.45963 lineto

 101.06535 54.88777 lineto

 100.3027 46.4965 lineto

 99.66443 37.14705 lineto

 99.21266 26.66917 lineto

 99.03632 14.85248 lineto

 pgfstr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -600 1550 a


 pgfr

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 -600 1550
a


 pgfr

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 -600 1550 a

 -600 1550 a -600 1550 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 save

 restore

 save

 restore

 0.0 0.0 moveto

 484.49312 0.0 lineto

 484.49312 257.97757 lineto

 0.0 257.97757 lineto

 closepath

 clip

 newpath

 save

 save

 [1.0 0.0 0.0 1.0 203.92819 81.58218 ] concat

 pgfs


 -600 1550 a
 0 setgray
 -600
1550 a Fa(A)-600 1550 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 390.46278 213.14934 ] concat

 pgfs


 -600 1550 a
 0 setgray
 -600 1550 a Fa(A)-600
1550 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 146.75983 163.36142 ] concat

 pgfs


 -600 1550 a
 0 setgray
 -600 1550 a Fa(B)-600 1550 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 444.72577 117.6989 ] concat

 pgfs


 -600
1550 a
 0 setgray
 -600 1550 a Fa(B)-600 1550 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 295.50253 143.49821 ] concat

 pgfs


 -600 1550 a
 0 setgray
 -600
1550 a Fa(C)-600 1550 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 69.72708 53.2045 ] concat

 pgfs


 -600 1550 a
 0 setgray
 -600 1550 a Fa(C)-600
1550 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 412.26408 66.10416 ] concat

 pgfs


 -600 1550 a
 0 setgray
 -600 1550 a Fa(D)-600 1550 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 154.51486 58.36514 ] concat

 pgfs


 -600
1550 a
 0 setgray
 -600 1550 a Fa(D)-600 1550 y


 pgfr

 restore

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -600 1550 a


 pgfr

 restore

 save

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
